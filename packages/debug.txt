+/Users/cooperm/.zshenv:2> set -x
+/Users/cooperm/.zshrc:2> export 'DOTFILES=/Users/cooperm/.dotfiles'
+/Users/cooperm/.zshrc:38> POWERLEVEL9K_PROMPT_ON_NEWLINE=true 
+/Users/cooperm/.zshrc:41> src
+src:3> source /Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:1> export 'PATH=/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:3> export 'ZSH=/Users/cooperm/.oh-my-zsh'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:5> [[ -n '' ]]
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:5> export 'DEFAULT_USER=cooperm'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:10> [[ -n '' ]]
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:14> ZSH_THEME=agnoster 
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:33> ENABLE_CORRECTION=true 
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:37> COMPLETION_WAITING_DOTS=true 
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:52> ZSH_CUSTOM=/Users/cooperm/.dotfiles/conf/zsh/custom 
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:59> plugins=( git cloudapp coffee colored-man common-aliases gem git-extras git-flow git-hubflow git-prompt osx meteor heroku github git-remote-branch rbenv rsync rvm sublime sudo theme web-search z ) 
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:64> source /Users/cooperm/.oh-my-zsh/oh-my-zsh.sh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:2> [ '' '!=' true ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:3> env 'ZSH=/Users/cooperm/.oh-my-zsh' 'DISABLE_UPDATE_PROMPT=' zsh -f /Users/cooperm/.oh-my-zsh/tools/check_for_upgrade.sh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:9> fpath=( /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:13> [[ -z /Users/cooperm/.dotfiles/conf/zsh/custom ]]
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:19> [[ -z '' ]]
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:20> ZSH_CACHE_DIR=/Users/cooperm/.oh-my-zsh/cache/ 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/bzr.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/bzr.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/bzr.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/bzr.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/completion.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/completion.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/completion.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/completion.zsh
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:3> unsetopt menu_complete
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:4> unsetopt flowcontrol
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:5> setopt auto_menu
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:6> setopt complete_in_word
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:7> setopt always_to_end
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:9> WORDCHARS='' 
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:11> zmodload -i zsh/complist
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:14> [ x '=' xtrue ']'
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:18> zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:21> zstyle ':completion:*' list-colors ''
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:24> bindkey -M menuselect '^o' accept-and-infer-next-history
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:26> zstyle ':completion:*:*:*:*:*' menu select
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:27> zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:28> [ darwin1 '=' solaris ']'
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:32> zstyle ':completion:*:*:*:*:processes' command 'ps -u cooperm -o pid,user,comm -w -w'
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:36> zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:39> zstyle ':completion::complete:*' use-cache 1
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:40> zstyle ':completion::complete:*' cache-path /Users/cooperm/.oh-my-zsh/cache/
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:43> zstyle ':completion:*:*:*:users' ignored-patterns adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm ldap lp mail mailman mailnull man messagebus mldonkey mysql nagios named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp usbmux uucp vcsa wwwrun xfs '_*'
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:54> zstyle '*' single-ignored show
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:56> [ xtrue '=' xtrue ']'
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:62> zle -N expand-or-complete-with-dots
+/Users/cooperm/.oh-my-zsh/lib/completion.zsh:63> bindkey '^I' expand-or-complete-with-dots
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/correction.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/correction.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/correction.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/correction.zsh
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:1> [[ true == true ]]
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:2> alias 'ebuild=nocorrect ebuild'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:3> alias 'gist=nocorrect gist'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:4> alias 'heroku=nocorrect heroku'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:5> alias 'hpodder=nocorrect hpodder'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:6> alias 'man=nocorrect man'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:7> alias 'mkdir=nocorrect mkdir'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:8> alias 'mv=nocorrect mv'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:9> alias 'mysql=nocorrect mysql'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:10> alias 'sudo=nocorrect sudo'
+/Users/cooperm/.oh-my-zsh/lib/correction.zsh:12> setopt correct_all
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/directories.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/directories.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/directories.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/directories.zsh
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:2> setopt auto_pushd
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:3> setopt pushd_ignore_dups
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:4> setopt pushdminus
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:6> alias -g '...=../..'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:7> alias -g '....=../../..'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:8> alias -g '.....=../../../..'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:9> alias -g '......=../../../../..'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:11> alias '1=cd -'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:12> alias '2=cd -2'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:13> alias '3=cd -3'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:14> alias '4=cd -4'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:15> alias '5=cd -5'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:16> alias '6=cd -6'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:17> alias '7=cd -7'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:18> alias '8=cd -8'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:19> alias '9=cd -9'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:21> alias 'md=mkdir -p'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:22> alias 'rd=rmdir'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:23> alias 'd=dirs -v | head -10'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:26> alias 'lsa=ls -lah'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:27> alias 'l=ls -lah'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:28> alias 'll=ls -lh'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:29> alias 'la=ls -lAh'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:32> alias 'pu=pushd'
+/Users/cooperm/.oh-my-zsh/lib/directories.zsh:33> alias 'po=popd'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/functions.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/functions.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/functions.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/functions.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/git.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/git.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/git.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/git.zsh
+/Users/cooperm/.oh-my-zsh/lib/git.zsh:148> POST_1_7_2_GIT=+/Users/cooperm/.oh-my-zsh/lib/git.zsh:148> git_compare_version 1.7.2
+git_compare_version:1> local 'INPUT_GIT_VERSION=1.7.2'
+git_compare_version:2> local INSTALLED_GIT_VERSION
+git_compare_version:3> INPUT_GIT_VERSION=( 1 7 2 ) 
+git_compare_version:4> INSTALLED_GIT_VERSION=+git_compare_version:4> git --version
+git_compare_version:4> INSTALLED_GIT_VERSION=( git version 2.3.0 ) 
+git_compare_version:5> INSTALLED_GIT_VERSION=( 2 3 0 ) 
+git_compare_version:7> i=1
+git_compare_version:8> [[ 2 -gt 1 ]]
+git_compare_version:9> echo 1
+git_compare_version:10> return 0
+/Users/cooperm/.oh-my-zsh/lib/git.zsh:148> POST_1_7_2_GIT=1 
+/Users/cooperm/.oh-my-zsh/lib/git.zsh:150> unset -f git_compare_version
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/grep.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/grep.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/grep.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/grep.zsh
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:6> GREP_OPTIONS='' 
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:9> grep-flag-available '--color=auto'
+grep-flag-available:1> echo
+grep-flag-available:1> grep '--color=auto' ''
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:10> GREP_OPTIONS+=' --color=auto' 
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:14> VCS_FOLDERS='{.bzr,.cvs,.git,.hg,.svn}' 
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:16> grep-flag-available '--exclude-dir=.cvs'
+grep-flag-available:1> echo
+grep-flag-available:1> grep '--exclude-dir=.cvs' ''
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:17> GREP_OPTIONS+=' --exclude-dir={.bzr,.cvs,.git,.hg,.svn}' 
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:23> alias 'grep=grep  --color=auto --exclude-dir={.bzr,.cvs,.git,.hg,.svn}'
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:26> unset GREP_OPTIONS
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:27> unset VCS_FOLDERS
+/Users/cooperm/.oh-my-zsh/lib/grep.zsh:28> unfunction grep-flag-available
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/history.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/history.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/history.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/history.zsh
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:2> [ -z '' ']'
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:3> HISTFILE=/Users/cooperm/.zsh_history 
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:6> HISTSIZE=10000 
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:7> SAVEHIST=10000 
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:10> case  (mm/dd/yyyy)
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:10> case  (dd.mm.yyyy)
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:10> case  (yyyy-mm-dd)
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:10> case  (*)
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:14> alias 'history=fc -l 1'
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:17> setopt append_history
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:18> setopt extended_history
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:19> setopt hist_expire_dups_first
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:20> setopt hist_ignore_dups
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:21> setopt hist_ignore_space
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:22> setopt hist_verify
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:23> setopt inc_append_history
+/Users/cooperm/.oh-my-zsh/lib/history.zsh:24> setopt share_history
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/key-bindings.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/key-bindings.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:7> ((  1  ))
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:7> ((  1  ))
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:14> zle -N zle-line-init
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:15> zle -N zle-line-finish
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:18> bindkey -e
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:20> bindkey '\ew' kill-region
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:21> bindkey -s '\el' 'ls\n'
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:22> bindkey '^r' history-incremental-search-backward
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:23> [[ '[5~' !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:24> bindkey '[5~' up-line-or-history
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:26> [[ '[6~' !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:27> bindkey '[6~' down-line-or-history
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:30> [[ OA !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:31> bindkey OA up-line-or-search
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:33> [[ OB !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:34> bindkey OB down-line-or-search
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:37> [[ OH !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:38> bindkey OH beginning-of-line
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:40> [[ OF !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:41> bindkey OF end-of-line
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:44> bindkey ' ' magic-space
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:46> bindkey '^[[1;5C' forward-word
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:47> bindkey '^[[1;5D' backward-word
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:49> [[ '[Z' !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:50> bindkey '[Z' reverse-menu-complete
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:53> bindkey '^?' backward-delete-char
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:54> [[ '[3~' !=  ]]
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:55> bindkey '[3~' delete-char
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:63> autoload -U edit-command-line
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:64> zle -N edit-command-line
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:65> bindkey '\C-x\C-e' edit-command-line
+/Users/cooperm/.oh-my-zsh/lib/key-bindings.zsh:68> bindkey '^[m' copy-prev-shell-word
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/misc.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/misc.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/misc.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/misc.zsh
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:2> autoload -U url-quote-magic
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:3> zle -N self-insert url-quote-magic
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:6> setopt long_list_jobs
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:9> export 'PAGER=less'
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:10> export 'LESS=-R'
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:13> alias '_=sudo'
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:14> alias 'please=sudo'
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:17> alias 'afind=ack-grep -il'
+/Users/cooperm/.oh-my-zsh/lib/misc.zsh:20> [[ -z en_US.UTF-8 ]]
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/nvm.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/nvm.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/nvm.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/nvm.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/prompt_info_functions.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/prompt_info_functions.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/prompt_info_functions.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/prompt_info_functions.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/spectrum.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/spectrum.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/spectrum.zsh
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:6> typeset -Ag FX FG BG
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:8> FX=( reset '%{[00m%}' bold '%{[01m%}' no-bold '%{[22m%}' italic '%{[03m%}' no-italic '%{[23m%}' underline '%{[04m%}' no-underline '%{[24m%}' blink '%{[05m%}' no-blink '%{[25m%}' reverse '%{[07m%}' no-reverse '%{[27m%}' ) 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=000
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;000m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;000m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=001
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;001m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;001m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=002
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;002m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;002m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=003
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;003m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;003m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=004
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;004m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;004m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=005
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;005m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;005m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=006
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;006m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;006m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=007
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;007m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;007m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=008
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;008m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;008m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=009
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;009m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;009m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=010
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;010m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;010m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=011
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;011m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;011m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=012
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;012m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;012m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=013
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;013m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;013m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=014
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;014m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;014m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=015
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;015m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;015m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=016
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;016m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;016m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=017
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;017m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;017m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=018
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;018m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;018m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=019
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;019m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;019m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=020
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;020m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;020m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=021
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;021m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;021m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=022
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;022m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;022m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=023
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;023m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;023m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=024
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;024m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;024m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=025
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;025m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;025m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=026
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;026m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;026m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=027
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;027m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;027m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=028
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;028m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;028m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=029
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;029m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;029m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=030
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;030m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;030m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=031
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;031m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;031m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=032
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;032m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;032m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=033
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;033m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;033m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=034
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;034m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;034m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=035
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;035m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;035m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=036
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;036m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;036m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=037
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;037m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;037m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=038
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;038m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;038m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=039
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;039m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;039m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=040
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;040m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;040m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=041
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;041m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;041m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=042
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;042m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;042m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=043
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;043m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;043m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=044
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;044m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;044m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=045
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;045m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;045m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=046
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;046m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;046m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=047
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;047m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;047m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=048
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;048m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;048m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=049
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;049m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;049m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=050
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;050m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;050m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=051
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;051m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;051m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=052
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;052m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;052m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=053
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;053m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;053m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=054
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;054m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;054m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=055
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;055m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;055m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=056
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;056m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;056m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=057
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;057m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;057m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=058
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;058m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;058m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=059
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;059m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;059m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=060
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;060m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;060m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=061
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;061m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;061m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=062
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;062m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;062m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=063
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;063m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;063m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=064
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;064m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;064m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=065
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;065m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;065m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=066
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;066m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;066m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=067
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;067m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;067m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=068
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;068m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;068m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=069
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;069m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;069m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=070
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;070m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;070m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=071
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;071m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;071m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=072
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;072m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;072m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=073
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;073m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;073m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=074
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;074m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;074m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=075
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;075m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;075m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=076
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;076m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;076m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=077
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;077m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;077m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=078
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;078m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;078m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=079
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;079m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;079m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=080
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;080m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;080m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=081
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;081m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;081m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=082
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;082m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;082m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=083
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;083m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;083m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=084
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;084m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;084m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=085
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;085m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;085m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=086
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;086m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;086m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=087
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;087m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;087m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=088
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;088m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;088m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=089
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;089m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;089m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=090
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;090m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;090m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=091
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;091m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;091m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=092
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;092m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;092m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=093
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;093m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;093m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=094
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;094m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;094m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=095
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;095m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;095m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=096
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;096m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;096m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=097
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;097m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;097m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=098
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;098m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;098m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=099
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;099m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;099m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=100
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;100m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;100m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=101
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;101m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;101m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=102
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;102m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;102m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=103
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;103m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;103m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=104
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;104m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;104m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=105
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;105m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;105m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=106
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;106m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;106m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=107
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;107m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;107m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=108
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;108m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;108m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=109
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;109m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;109m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=110
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;110m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;110m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=111
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;111m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;111m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=112
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;112m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;112m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=113
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;113m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;113m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=114
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;114m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;114m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=115
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;115m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;115m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=116
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;116m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;116m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=117
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;117m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;117m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=118
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;118m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;118m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=119
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;119m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;119m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=120
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;120m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;120m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=121
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;121m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;121m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=122
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;122m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;122m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=123
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;123m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;123m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=124
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;124m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;124m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=125
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;125m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;125m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=126
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;126m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;126m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=127
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;127m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;127m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=128
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;128m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;128m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=129
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;129m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;129m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=130
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;130m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;130m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=131
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;131m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;131m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=132
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;132m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;132m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=133
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;133m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;133m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=134
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;134m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;134m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=135
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;135m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;135m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=136
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;136m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;136m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=137
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;137m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;137m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=138
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;138m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;138m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=139
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;139m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;139m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=140
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;140m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;140m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=141
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;141m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;141m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=142
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;142m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;142m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=143
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;143m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;143m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=144
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;144m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;144m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=145
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;145m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;145m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=146
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;146m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;146m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=147
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;147m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;147m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=148
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;148m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;148m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=149
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;149m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;149m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=150
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;150m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;150m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=151
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;151m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;151m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=152
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;152m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;152m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=153
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;153m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;153m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=154
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;154m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;154m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=155
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;155m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;155m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=156
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;156m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;156m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=157
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;157m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;157m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=158
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;158m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;158m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=159
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;159m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;159m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=160
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;160m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;160m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=161
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;161m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;161m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=162
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;162m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;162m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=163
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;163m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;163m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=164
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;164m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;164m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=165
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;165m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;165m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=166
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;166m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;166m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=167
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;167m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;167m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=168
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;168m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;168m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=169
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;169m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;169m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=170
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;170m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;170m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=171
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;171m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;171m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=172
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;172m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;172m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=173
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;173m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;173m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=174
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;174m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;174m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=175
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;175m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;175m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=176
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;176m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;176m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=177
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;177m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;177m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=178
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;178m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;178m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=179
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;179m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;179m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=180
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;180m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;180m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=181
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;181m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;181m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=182
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;182m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;182m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=183
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;183m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;183m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=184
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;184m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;184m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=185
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;185m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;185m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=186
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;186m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;186m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=187
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;187m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;187m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=188
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;188m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;188m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=189
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;189m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;189m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=190
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;190m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;190m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=191
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;191m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;191m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=192
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;192m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;192m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=193
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;193m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;193m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=194
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;194m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;194m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=195
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;195m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;195m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=196
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;196m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;196m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=197
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;197m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;197m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=198
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;198m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;198m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=199
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;199m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;199m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=200
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;200m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;200m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=201
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;201m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;201m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=202
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;202m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;202m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=203
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;203m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;203m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=204
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;204m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;204m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=205
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;205m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;205m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=206
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;206m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;206m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=207
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;207m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;207m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=208
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;208m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;208m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=209
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;209m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;209m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=210
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;210m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;210m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=211
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;211m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;211m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=212
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;212m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;212m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=213
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;213m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;213m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=214
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;214m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;214m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=215
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;215m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;215m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=216
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;216m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;216m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=217
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;217m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;217m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=218
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;218m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;218m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=219
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;219m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;219m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=220
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;220m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;220m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=221
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;221m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;221m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=222
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;222m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;222m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=223
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;223m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;223m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=224
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;224m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;224m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=225
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;225m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;225m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=226
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;226m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;226m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=227
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;227m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;227m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=228
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;228m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;228m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=229
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;229m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;229m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=230
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;230m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;230m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=231
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;231m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;231m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=232
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;232m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;232m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=233
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;233m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;233m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=234
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;234m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;234m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=235
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;235m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;235m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=236
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;236m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;236m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=237
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;237m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;237m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=238
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;238m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;238m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=239
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;239m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;239m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=240
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;240m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;240m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=241
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;241m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;241m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=242
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;242m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;242m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=243
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;243m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;243m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=244
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;244m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;244m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=245
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;245m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;245m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=246
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;246m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;246m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=247
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;247m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;247m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=248
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;248m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;248m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=249
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;249m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;249m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=250
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;250m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;250m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=251
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;251m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;251m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=252
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;252m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;252m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=253
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;253m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;253m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=254
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;254m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;254m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:17> color=255
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]='%{[38;5;255m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]='%{[48;5;255m%}' 
+/Users/cooperm/.oh-my-zsh/lib/spectrum.zsh:23> ZSH_SPECTRUM_TEXT='Arma virumque cano Troiae qui primus ab oris' 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/termsupport.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/termsupport.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/termsupport.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/termsupport.zsh
+/Users/cooperm/.oh-my-zsh/lib/termsupport.zsh:24> ZSH_THEME_TERM_TAB_TITLE_IDLE='%15<..<%~%<<' 
+/Users/cooperm/.oh-my-zsh/lib/termsupport.zsh:25> ZSH_THEME_TERM_TITLE_IDLE='%n@%m: %~' 
+/Users/cooperm/.oh-my-zsh/lib/termsupport.zsh:52> precmd_functions+=( omz_termsupport_precmd ) 
+/Users/cooperm/.oh-my-zsh/lib/termsupport.zsh:53> preexec_functions+=( omz_termsupport_preexec ) 
+/Users/cooperm/.oh-my-zsh/lib/termsupport.zsh:66> precmd_functions+=( omz_termsupport_cwd ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:26> config_file=/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:27> custom_config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/lib/theme-and-appearance.zsh 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:28> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/lib/theme-and-appearance.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:29> source /Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:2> autoload -U colors
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:2> colors
+colors:4> emulate -L zsh
+colors:6> typeset -Ag color colour
+colors:8> color=( 00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33 yellow 43 bg-yellow 34 blue 44 bg-blue 35 magenta 45 bg-magenta 36 cyan 46 bg-cyan 37 white 47 bg-white 39 default 49 bg-default ) 
+colors:76> local k
+colors:77> k=44
+colors:77> color[${color[$k]}]=44 
+colors:77> k=33
+colors:77> color[${color[$k]}]=33 
+colors:77> k=22
+colors:77> color[${color[$k]}]=22 
+colors:77> k=00
+colors:77> color[${color[$k]}]=00 
+colors:77> k=45
+colors:77> color[${color[$k]}]=45 
+colors:77> k=34
+colors:77> color[${color[$k]}]=34 
+colors:77> k=23
+colors:77> color[${color[$k]}]=23 
+colors:77> k=01
+colors:77> color[${color[$k]}]=01 
+colors:77> k=46
+colors:77> color[${color[$k]}]=46 
+colors:77> k=35
+colors:77> color[${color[$k]}]=35 
+colors:77> k=24
+colors:77> color[${color[$k]}]=24 
+colors:77> k=02
+colors:77> color[${color[$k]}]=02 
+colors:77> k=47
+colors:77> color[${color[$k]}]=47 
+colors:77> k=36
+colors:77> color[${color[$k]}]=36 
+colors:77> k=25
+colors:77> color[${color[$k]}]=25 
+colors:77> k=03
+colors:77> color[${color[$k]}]=03 
+colors:77> k=37
+colors:77> color[${color[$k]}]=37 
+colors:77> k=04
+colors:77> color[${color[$k]}]=04 
+colors:77> k=49
+colors:77> color[${color[$k]}]=49 
+colors:77> k=27
+colors:77> color[${color[$k]}]=27 
+colors:77> k=05
+colors:77> color[${color[$k]}]=05 
+colors:77> k=39
+colors:77> color[${color[$k]}]=39 
+colors:77> k=28
+colors:77> color[${color[$k]}]=28 
+colors:77> k=07
+colors:77> color[${color[$k]}]=07 
+colors:77> k=08
+colors:77> color[${color[$k]}]=08 
+colors:77> k=40
+colors:77> color[${color[$k]}]=40 
+colors:77> k=41
+colors:77> color[${color[$k]}]=41 
+colors:77> k=30
+colors:77> color[${color[$k]}]=30 
+colors:77> k=42
+colors:77> color[${color[$k]}]=42 
+colors:77> k=31
+colors:77> color[${color[$k]}]=31 
+colors:77> k=43
+colors:77> color[${color[$k]}]=43 
+colors:77> k=32
+colors:77> color[${color[$k]}]=32 
+colors:81> k=30
+colors:81> color[fg-${color[$k]}]=30 
+colors:81> k=31
+colors:81> color[fg-${color[$k]}]=31 
+colors:81> k=32
+colors:81> color[fg-${color[$k]}]=32 
+colors:81> k=33
+colors:81> color[fg-${color[$k]}]=33 
+colors:81> k=34
+colors:81> color[fg-${color[$k]}]=34 
+colors:81> k=35
+colors:81> color[fg-${color[$k]}]=35 
+colors:81> k=36
+colors:81> color[fg-${color[$k]}]=36 
+colors:81> k=37
+colors:81> color[fg-${color[$k]}]=37 
+colors:81> k=39
+colors:81> color[fg-${color[$k]}]=39 
+colors:85> color[grey]=30 
+colors:86> color[fg-grey]=30 
+colors:87> color[bg-grey]=40 
+colors:91> colour=( 00 none 22 normal 44 bg-blue fg-red 31 01 bold 23 no-standout 45 bg-magenta 02 faint 24 no-underline 46 bg-cyan 03 standout 25 no-blink 47 bg-white 04 underline yellow 33 bg-red 41 bold 01 05 blink 27 no-reverse 49 bg-default no-reverse 27 28 no-conceal 07 reverse 08 conceal fg-black 30 red 31 conceal 08 default 39 faint 02 fg-green 32 no-underline 24 bg-magenta 45 magenta 35 blink 05 blue 34 grey 30 fg-default 39 bg-white 47 30 black no-standout 23 31 red 32 green bg-yellow 43 33 yellow cyan 36 34 blue 35 magenta white 37 36 cyan standout 03 37 white bg-blue 44 fg-magenta 35 39 default bg-grey 40 no-conceal 28 reverse 07 bg-cyan 46 underline 04 fg-yellow 33 fg-white 37 bg-black 40 normal 22 fg-blue 34 bg-green 42 none 00 fg-grey 30 black 30 no-blink 25 bg-default 49 40 bg-black fg-cyan 36 green 32 41 bg-red 42 bg-green 43 bg-yellow ) 
+colors:95> local 'lc=[' 'rc=m'
+colors:97> typeset -Hg reset_color bold_color
+colors:98> reset_color='[00m' 
+colors:99> bold_color='[01m' 
+colors:103> typeset -AHg fg fg_bold fg_no_bold
+colors:104> k=fg-red
+colors:105> fg[${k#fg-}]='[31m' 
+colors:106> fg_bold[${k#fg-}]='[01;31m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;31m' 
+colors:104> k=fg-black
+colors:105> fg[${k#fg-}]='[30m' 
+colors:106> fg_bold[${k#fg-}]='[01;30m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;30m' 
+colors:104> k=fg-green
+colors:105> fg[${k#fg-}]='[32m' 
+colors:106> fg_bold[${k#fg-}]='[01;32m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;32m' 
+colors:104> k=fg-default
+colors:105> fg[${k#fg-}]='[39m' 
+colors:106> fg_bold[${k#fg-}]='[01;39m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;39m' 
+colors:104> k=fg-magenta
+colors:105> fg[${k#fg-}]='[35m' 
+colors:106> fg_bold[${k#fg-}]='[01;35m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;35m' 
+colors:104> k=fg-yellow
+colors:105> fg[${k#fg-}]='[33m' 
+colors:106> fg_bold[${k#fg-}]='[01;33m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;33m' 
+colors:104> k=fg-white
+colors:105> fg[${k#fg-}]='[37m' 
+colors:106> fg_bold[${k#fg-}]='[01;37m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;37m' 
+colors:104> k=fg-blue
+colors:105> fg[${k#fg-}]='[34m' 
+colors:106> fg_bold[${k#fg-}]='[01;34m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;34m' 
+colors:104> k=fg-grey
+colors:105> fg[${k#fg-}]='[30m' 
+colors:106> fg_bold[${k#fg-}]='[01;30m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;30m' 
+colors:104> k=fg-cyan
+colors:105> fg[${k#fg-}]='[36m' 
+colors:106> fg_bold[${k#fg-}]='[01;36m' 
+colors:107> fg_no_bold[${k#fg-}]='[22;36m' 
+colors:112> typeset -AHg bg bg_bold bg_no_bold
+colors:113> k=bg-red
+colors:114> bg[${k#bg-}]='[41m' 
+colors:115> bg_bold[${k#bg-}]='[01;41m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;41m' 
+colors:113> k=bg-magenta
+colors:114> bg[${k#bg-}]='[45m' 
+colors:115> bg_bold[${k#bg-}]='[01;45m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;45m' 
+colors:113> k=bg-white
+colors:114> bg[${k#bg-}]='[47m' 
+colors:115> bg_bold[${k#bg-}]='[01;47m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;47m' 
+colors:113> k=bg-yellow
+colors:114> bg[${k#bg-}]='[43m' 
+colors:115> bg_bold[${k#bg-}]='[01;43m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;43m' 
+colors:113> k=bg-blue
+colors:114> bg[${k#bg-}]='[44m' 
+colors:115> bg_bold[${k#bg-}]='[01;44m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;44m' 
+colors:113> k=bg-grey
+colors:114> bg[${k#bg-}]='[40m' 
+colors:115> bg_bold[${k#bg-}]='[01;40m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;40m' 
+colors:113> k=bg-cyan
+colors:114> bg[${k#bg-}]='[46m' 
+colors:115> bg_bold[${k#bg-}]='[01;46m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;46m' 
+colors:113> k=bg-black
+colors:114> bg[${k#bg-}]='[40m' 
+colors:115> bg_bold[${k#bg-}]='[01;40m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;40m' 
+colors:113> k=bg-green
+colors:114> bg[${k#bg-}]='[42m' 
+colors:115> bg_bold[${k#bg-}]='[01;42m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;42m' 
+colors:113> k=bg-default
+colors:114> bg[${k#bg-}]='[49m' 
+colors:115> bg_bold[${k#bg-}]='[01;49m' 
+colors:116> bg_no_bold[${k#bg-}]='[22;49m' 
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:3> export 'LSCOLORS=Gxfxcxdxbxegedabagacad'
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:6> [ '' '!=' true ']'
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:9> [[+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:9> uname -s
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:9> [[ Darwin == NetBSD ]]
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:13> [[+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:13> uname -s
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:13> [[ Darwin == OpenBSD ]]
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:18> ls --color -d .
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:18> alias 'ls=ls -G'
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:23> setopt auto_cd
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:24> setopt multios
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:25> setopt cdablevars
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:27> [[ x != x ]]
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:31> SCREEN_NO='' 
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:35> PS1='%n@%m:%~%# ' 
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:38> ZSH_THEME_GIT_PROMPT_PREFIX='git:(' 
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:39> ZSH_THEME_GIT_PROMPT_SUFFIX=')' 
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:40> ZSH_THEME_GIT_PROMPT_DIRTY='*' 
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:41> ZSH_THEME_GIT_PROMPT_CLEAN='' 
+/Users/cooperm/.oh-my-zsh/lib/theme-and-appearance.zsh:44> setopt prompt_subst
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=git
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom git
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=git'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git/git.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git/_git
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh git
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=git'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=cloudapp
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom cloudapp
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=cloudapp'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/cloudapp/cloudapp.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/cloudapp/_cloudapp
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh cloudapp
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=cloudapp'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/cloudapp/cloudapp.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=coffee
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom coffee
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=coffee'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/coffee/coffee.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/coffee/_coffee
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh coffee
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=coffee'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/coffee/coffee.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=colored-man
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom colored-man
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=colored-man'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/colored-man/colored-man.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/colored-man/_colored-man
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh colored-man
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=colored-man'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/colored-man/colored-man.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=common-aliases
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom common-aliases
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=common-aliases'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/common-aliases/common-aliases.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/common-aliases/_common-aliases
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh common-aliases
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=common-aliases'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=gem
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom gem
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=gem'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/gem/gem.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/gem/_gem
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh gem
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=gem'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/gem/gem.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=git-extras
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom git-extras
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=git-extras'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-extras/git-extras.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-extras/_git-extras
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh git-extras
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=git-extras'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=git-flow
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom git-flow
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=git-flow'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-flow/git-flow.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-flow/_git-flow
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh git-flow
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=git-flow'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=git-hubflow
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom git-hubflow
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=git-hubflow'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-hubflow/git-hubflow.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-hubflow/_git-hubflow
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh git-hubflow
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=git-hubflow'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=git-prompt
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom git-prompt
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=git-prompt'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-prompt/git-prompt.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-prompt/_git-prompt
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh git-prompt
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=git-prompt'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=osx
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom osx
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=osx'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/osx/osx.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/osx/_osx
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh osx
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=osx'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/osx/osx.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=meteor
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom meteor
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=meteor'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/meteor/meteor.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/meteor/_meteor
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh meteor
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=meteor'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/meteor/meteor.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.oh-my-zsh/plugins/meteor/_meteor
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=heroku
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom heroku
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=heroku'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/heroku/heroku.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/heroku/_heroku
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh heroku
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=heroku'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/heroku/heroku.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.oh-my-zsh/plugins/heroku/_heroku
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=github
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom github
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=github'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/github/github.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/github/_github
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh github
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=github'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=git-remote-branch
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom git-remote-branch
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=git-remote-branch'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-remote-branch/git-remote-branch.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-remote-branch/_git-remote-branch
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh git-remote-branch
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=git-remote-branch'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch/git-remote-branch.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=rbenv
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom rbenv
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=rbenv'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rbenv/rbenv.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rbenv/_rbenv
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh rbenv
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=rbenv'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=rsync
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom rsync
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=rsync'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rsync/rsync.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rsync/_rsync
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh rsync
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=rsync'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=rvm
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom rvm
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=rvm'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rvm/rvm.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rvm/_rvm
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh rvm
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=rvm'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=sublime
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom sublime
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=sublime'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/sublime/sublime.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/sublime/_sublime
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh sublime
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=sublime'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/sublime /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=sudo
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom sudo
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=sudo'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/sudo/sudo.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/sudo/_sudo
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh sudo
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=sudo'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/sudo/sudo.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/sudo /Users/cooperm/.oh-my-zsh/plugins/sublime /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=theme
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom theme
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=theme'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/theme/theme.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/theme/_theme
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh theme
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=theme'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/theme/theme.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.oh-my-zsh/plugins/theme/_theme
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=web-search
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom web-search
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=web-search'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/web-search/web-search.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/web-search/_web-search
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh web-search
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=web-search'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/web-search /Users/cooperm/.oh-my-zsh/plugins/sudo /Users/cooperm/.oh-my-zsh/plugins/sublime /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:41> plugin=z
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:42> is_plugin /Users/cooperm/.dotfiles/conf/zsh/custom z
+is_plugin:1> local 'base_dir=/Users/cooperm/.dotfiles/conf/zsh/custom'
+is_plugin:2> local 'name=z'
+is_plugin:3> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/z/z.plugin.zsh
+is_plugin:4> test -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/z/_z
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:44> is_plugin /Users/cooperm/.oh-my-zsh z
+is_plugin:1> local 'base_dir=/Users/cooperm/.oh-my-zsh'
+is_plugin:2> local 'name=z'
+is_plugin:3> test -f /Users/cooperm/.oh-my-zsh/plugins/z/z.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:45> fpath=( /Users/cooperm/.oh-my-zsh/plugins/z /Users/cooperm/.oh-my-zsh/plugins/web-search /Users/cooperm/.oh-my-zsh/plugins/sudo /Users/cooperm/.oh-my-zsh/plugins/sublime /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:50> [[ darwin14.0 == darwin* ]]
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:52> SHORT_HOST=+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:52> scutil --get ComputerName
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:52> SHORT_HOST='cooper’s Mac Pro' 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:58> [ -z '' ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:59> ZSH_COMPDUMP='/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5' 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:63> autoload -U compinit
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:64> compinit -i -d '/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5'
+compinit:70> emulate -L zsh
+compinit:71> setopt extendedglob
+compinit:73> typeset _i_dumpfile _i_files _i_line _i_done _i_dir '_i_autodump=1'
+compinit:74> typeset _i_tag _i_file _i_addfiles '_i_fail=ask' '_i_check=yes' _i_name
+compinit:76> [[ 3 -gt 0 && -i == -[dDiuC] ]]
+compinit:77> case -i (-d)
+compinit:77> case -i (-D)
+compinit:77> case -i (-i)
+compinit:91> _i_fail=ign 
+compinit:92> shift
+compinit:76> [[ 2 -gt 0 && -d == -[dDiuC] ]]
+compinit:77> case -d (-d)
+compinit:79> _i_autodump=1 
+compinit:80> shift
+compinit:81> [[ 1 -gt 0 && '/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5' != -[dfQC] ]]
+compinit:82> _i_dumpfile='/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5' 
+compinit:83> shift
+compinit:76> [[ 0 -gt 0 ]]
+compinit:108> typeset -gA _comps _services _patcomps _postpatcomps
+compinit:113> typeset -gA _compautos
+compinit:118> typeset -gA _lastcomp
+compinit:121> [[ -n '/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5' ]]
+compinit:123> typeset -g '_comp_dumpfile=/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5'
+compinit:130> typeset -ga _comp_options
+compinit:131> _comp_options=( bareglobqual extendedglob glob multibyte nullglob rcexpandparam unset NO_allexport NO_aliases NO_cshnullglob NO_cshjunkiequotes NO_errexit NO_globsubst NO_histsubstpattern NO_ignorebraces NO_ignoreclosebraces NO_kshglob NO_ksharrays NO_kshtypeset NO_markdirs NO_octalzeroes NO_shwordsplit NO_shglob NO_warncreateglobal ) 
+compinit:164> typeset -g '_comp_setup=local -A _comp_caller_options;
             _comp_caller_options=(${(kv)options[@]});
             setopt localoptions localtraps localpatterns ${_comp_options[@]};
             local IFS=$'\'' \t\r\n\0'\''
             enable -p \| \~ \( \? \* \[ \< \^ \#
             exec </dev/null;
             trap - ZERR
             local -a reply
             local REPLY'
+compinit:177> typeset -ga compprefuncs comppostfuncs
+compinit:178> compprefuncs=( ) 
+compinit:179> comppostfuncs=( ) 
+compinit:183> : compinit /Users/cooperm/.oh-my-zsh/oh-my-zsh.sh /Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh src /Users/cooperm/.zshrc
+compinit:432> typeset _i_wdirs _i_wfiles
+compinit:434> _i_wdirs=( ) 
+compinit:435> _i_wfiles=( ) 
+compinit:437> autoload -Uz compaudit
+compinit:438> [[ -n yes ]]
+compinit:439> typeset _i_q
+compinit:440> eval compaudit
+(eval):1> compaudit
+compaudit:173> compaudit
+compaudit:13> emulate -L zsh
+compaudit:14> setopt extendedglob
+compaudit:16> [[ -x /usr/bin/getent ]]
+compaudit:25> ((  0  ))
+compaudit:27> ((  26 == 0  ))
+compaudit:31> set -- /Users/cooperm/.oh-my-zsh/plugins/z /Users/cooperm/.oh-my-zsh/plugins/web-search /Users/cooperm/.oh-my-zsh/plugins/sudo /Users/cooperm/.oh-my-zsh/plugins/sublime /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions
+compaudit:38> ((  1  ))
+compaudit:44> fpath=( /Users/cooperm/.oh-my-zsh/plugins/z /Users/cooperm/.oh-my-zsh/plugins/web-search /Users/cooperm/.oh-my-zsh/plugins/sudo /Users/cooperm/.oh-my-zsh/plugins/sublime /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+compaudit:49> ((  0  ))
+compaudit:50> local '_compdir=/usr/share/zsh/5.0.5/functions'
+compaudit:51> [[ -z /usr/share/zsh/5.0.5/functions ]]
+compaudit:55> _i_wdirs=( ) 
+compaudit:56> _i_wfiles=( ) 
+compaudit:58> _i_files=( /Users/cooperm/.oh-my-zsh/plugins/github/_github /Users/cooperm/.oh-my-zsh/plugins/heroku/_heroku /Users/cooperm/.oh-my-zsh/plugins/meteor/_meteor /Users/cooperm/.oh-my-zsh/plugins/osx/_man-preview /Users/cooperm/.oh-my-zsh/plugins/gem/_gem /Users/cooperm/.oh-my-zsh/plugins/coffee/_coffee /Users/cooperm/.oh-my-zsh/plugins/git/_git-branch /Users/cooperm/.oh-my-zsh/plugins/git/_git-remote /usr/share/zsh/5.0.5/functions/_SuSEconfig /usr/share/zsh/5.0.5/functions/_a2ps /usr/share/zsh/5.0.5/functions/_a2utils /usr/share/zsh/5.0.5/functions/_aap /usr/share/zsh/5.0.5/functions/_acpi /usr/share/zsh/5.0.5/functions/_acpitool /usr/share/zsh/5.0.5/functions/_acroread /usr/share/zsh/5.0.5/functions/_adb /usr/share/zsh/5.0.5/functions/_alias /usr/share/zsh/5.0.5/functions/_aliases /usr/share/zsh/5.0.5/functions/_all_labels /usr/share/zsh/5.0.5/functions/_all_matches /usr/share/zsh/5.0.5/functions/_alternative /usr/share/zsh/5.0.5/functions/_analyseplugin /usr/share/zsh/5.0.5/functions/_ant /usr/share/zsh/5.0.5/functions/_antiword /usr/share/zsh/5.0.5/functions/_apachectl /usr/share/zsh/5.0.5/functions/_apm /usr/share/zsh/5.0.5/functions/_approximate /usr/share/zsh/5.0.5/functions/_apt /usr/share/zsh/5.0.5/functions/_apt-file /usr/share/zsh/5.0.5/functions/_apt-move /usr/share/zsh/5.0.5/functions/_apt-show-versions /usr/share/zsh/5.0.5/functions/_aptitude /usr/share/zsh/5.0.5/functions/_arch_archives /usr/share/zsh/5.0.5/functions/_arch_namespace /usr/share/zsh/5.0.5/functions/_arg_compile /usr/share/zsh/5.0.5/functions/_arguments /usr/share/zsh/5.0.5/functions/_arp /usr/share/zsh/5.0.5/functions/_arping /usr/share/zsh/5.0.5/functions/_arrays /usr/share/zsh/5.0.5/functions/_assign /usr/share/zsh/5.0.5/functions/_at /usr/share/zsh/5.0.5/functions/_attr /usr/share/zsh/5.0.5/functions/_auto-apt /usr/share/zsh/5.0.5/functions/_autocd /usr/share/zsh/5.0.5/functions/_awk /usr/share/zsh/5.0.5/functions/_axi-cache /usr/share/zsh/5.0.5/functions/_bash_completions /usr/share/zsh/5.0.5/functions/_baz /usr/share/zsh/5.0.5/functions/_be_name /usr/share/zsh/5.0.5/functions/_beadm /usr/share/zsh/5.0.5/functions/_bind_addresses /usr/share/zsh/5.0.5/functions/_bindkey /usr/share/zsh/5.0.5/functions/_bison /usr/share/zsh/5.0.5/functions/_bittorrent /usr/share/zsh/5.0.5/functions/_bogofilter /usr/share/zsh/5.0.5/functions/_brace_parameter /usr/share/zsh/5.0.5/functions/_brctl /usr/share/zsh/5.0.5/functions/_bsd_pkg /usr/share/zsh/5.0.5/functions/_btrfs /usr/share/zsh/5.0.5/functions/_bts /usr/share/zsh/5.0.5/functions/_bug /usr/share/zsh/5.0.5/functions/_builtin /usr/share/zsh/5.0.5/functions/_bzip2 /usr/share/zsh/5.0.5/functions/_bzr /usr/share/zsh/5.0.5/functions/_cache_invalid /usr/share/zsh/5.0.5/functions/_cal /usr/share/zsh/5.0.5/functions/_calendar /usr/share/zsh/5.0.5/functions/_call_function /usr/share/zsh/5.0.5/functions/_call_program /usr/share/zsh/5.0.5/functions/_canonical_paths /usr/share/zsh/5.0.5/functions/_cat /usr/share/zsh/5.0.5/functions/_ccal /usr/share/zsh/5.0.5/functions/_cd /usr/share/zsh/5.0.5/functions/_cdbs-edit-patch /usr/share/zsh/5.0.5/functions/_cdcd /usr/share/zsh/5.0.5/functions/_cdr /usr/share/zsh/5.0.5/functions/_cdrdao /usr/share/zsh/5.0.5/functions/_cdrecord /usr/share/zsh/5.0.5/functions/_chflags /usr/share/zsh/5.0.5/functions/_chkconfig /usr/share/zsh/5.0.5/functions/_chmod /usr/share/zsh/5.0.5/functions/_chown /usr/share/zsh/5.0.5/functions/_chrt /usr/share/zsh/5.0.5/functions/_clay /usr/share/zsh/5.0.5/functions/_combination /usr/share/zsh/5.0.5/functions/_comm /usr/share/zsh/5.0.5/functions/_command /usr/share/zsh/5.0.5/functions/_command_names /usr/share/zsh/5.0.5/functions/_comp_locale /usr/share/zsh/5.0.5/functions/_compdef /usr/share/zsh/5.0.5/functions/_complete /usr/share/zsh/5.0.5/functions/_complete_debug /usr/share/zsh/5.0.5/functions/_complete_help /usr/share/zsh/5.0.5/functions/_complete_help_generic /usr/share/zsh/5.0.5/functions/_complete_tag /usr/share/zsh/5.0.5/functions/_compress /usr/share/zsh/5.0.5/functions/_condition /usr/share/zsh/5.0.5/functions/_configure /usr/share/zsh/5.0.5/functions/_coreadm /usr/share/zsh/5.0.5/functions/_correct /usr/share/zsh/5.0.5/functions/_correct_filename /usr/share/zsh/5.0.5/functions/_correct_word /usr/share/zsh/5.0.5/functions/_cowsay /usr/share/zsh/5.0.5/functions/_cp /usr/share/zsh/5.0.5/functions/_cpio /usr/share/zsh/5.0.5/functions/_cplay /usr/share/zsh/5.0.5/functions/_cryptsetup /usr/share/zsh/5.0.5/functions/_cssh /usr/share/zsh/5.0.5/functions/_csup /usr/share/zsh/5.0.5/functions/_ctags_tags /usr/share/zsh/5.0.5/functions/_cut /usr/share/zsh/5.0.5/functions/_cvs /usr/share/zsh/5.0.5/functions/_cvsup /usr/share/zsh/5.0.5/functions/_cygcheck /usr/share/zsh/5.0.5/functions/_cygpath /usr/share/zsh/5.0.5/functions/_cygrunsrv /usr/share/zsh/5.0.5/functions/_cygserver /usr/share/zsh/5.0.5/functions/_cygstart /usr/share/zsh/5.0.5/functions/_dak /usr/share/zsh/5.0.5/functions/_darcs /usr/share/zsh/5.0.5/functions/_date /usr/share/zsh/5.0.5/functions/_dbus /usr/share/zsh/5.0.5/functions/_dchroot /usr/share/zsh/5.0.5/functions/_dchroot-dsa /usr/share/zsh/5.0.5/functions/_dcop /usr/share/zsh/5.0.5/functions/_dcut /usr/share/zsh/5.0.5/functions/_dd /usr/share/zsh/5.0.5/functions/_deb_packages /usr/share/zsh/5.0.5/functions/_debchange /usr/share/zsh/5.0.5/functions/_debdiff /usr/share/zsh/5.0.5/functions/_debfoster /usr/share/zsh/5.0.5/functions/_debsign /usr/share/zsh/5.0.5/functions/_default /usr/share/zsh/5.0.5/functions/_defaults /usr/share/zsh/5.0.5/functions/_delimiters /usr/share/zsh/5.0.5/functions/_describe /usr/share/zsh/5.0.5/functions/_description /usr/share/zsh/5.0.5/functions/_devtodo /usr/share/zsh/5.0.5/functions/_df /usr/share/zsh/5.0.5/functions/_dhclient /usr/share/zsh/5.0.5/functions/_dhcpinfo /usr/share/zsh/5.0.5/functions/_dict /usr/share/zsh/5.0.5/functions/_dict_words /usr/share/zsh/5.0.5/functions/_diff /usr/share/zsh/5.0.5/functions/_diff_options /usr/share/zsh/5.0.5/functions/_diffstat /usr/share/zsh/5.0.5/functions/_dir_list /usr/share/zsh/5.0.5/functions/_directories /usr/share/zsh/5.0.5/functions/_directory_stack /usr/share/zsh/5.0.5/functions/_dirs /usr/share/zsh/5.0.5/functions/_disable /usr/share/zsh/5.0.5/functions/_dispatch /usr/share/zsh/5.0.5/functions/_django /usr/share/zsh/5.0.5/functions/_dladm /usr/share/zsh/5.0.5/functions/_dlocate /usr/share/zsh/5.0.5/functions/_dmidecode /usr/share/zsh/5.0.5/functions/_domains /usr/share/zsh/5.0.5/functions/_dpatch-edit-patch /usr/share/zsh/5.0.5/functions/_dpkg /usr/share/zsh/5.0.5/functions/_dpkg-buildpackage /usr/share/zsh/5.0.5/functions/_dpkg-cross /usr/share/zsh/5.0.5/functions/_dpkg-repack /usr/share/zsh/5.0.5/functions/_dpkg_source /usr/share/zsh/5.0.5/functions/_dput /usr/share/zsh/5.0.5/functions/_dtrace /usr/share/zsh/5.0.5/functions/_du /usr/share/zsh/5.0.5/functions/_dumpadm /usr/share/zsh/5.0.5/functions/_dumper /usr/share/zsh/5.0.5/functions/_dupload /usr/share/zsh/5.0.5/functions/_dvi /usr/share/zsh/5.0.5/functions/_dynamic_directory_name /usr/share/zsh/5.0.5/functions/_ecasound /usr/share/zsh/5.0.5/functions/_echotc /usr/share/zsh/5.0.5/functions/_echoti /usr/share/zsh/5.0.5/functions/_elinks /usr/share/zsh/5.0.5/functions/_elm /usr/share/zsh/5.0.5/functions/_email_addresses /usr/share/zsh/5.0.5/functions/_emulate /usr/share/zsh/5.0.5/functions/_enable /usr/share/zsh/5.0.5/functions/_enscript /usr/share/zsh/5.0.5/functions/_env /usr/share/zsh/5.0.5/functions/_equal /usr/share/zsh/5.0.5/functions/_espeak /usr/share/zsh/5.0.5/functions/_etags /usr/share/zsh/5.0.5/functions/_ethtool /usr/share/zsh/5.0.5/functions/_expand /usr/share/zsh/5.0.5/functions/_expand_alias /usr/share/zsh/5.0.5/functions/_expand_word /usr/share/zsh/5.0.5/functions/_fakeroot /usr/share/zsh/5.0.5/functions/_fc /usr/share/zsh/5.0.5/functions/_feh /usr/share/zsh/5.0.5/functions/_fetch /usr/share/zsh/5.0.5/functions/_fetchmail /usr/share/zsh/5.0.5/functions/_ffmpeg /usr/share/zsh/5.0.5/functions/_figlet /usr/share/zsh/5.0.5/functions/_file_descriptors /usr/share/zsh/5.0.5/functions/_file_systems /usr/share/zsh/5.0.5/functions/_files /usr/share/zsh/5.0.5/functions/_find /usr/share/zsh/5.0.5/functions/_finger /usr/share/zsh/5.0.5/functions/_fink /usr/share/zsh/5.0.5/functions/_first /usr/share/zsh/5.0.5/functions/_flasher /usr/share/zsh/5.0.5/functions/_flex /usr/share/zsh/5.0.5/functions/_floppy /usr/share/zsh/5.0.5/functions/_flowadm /usr/share/zsh/5.0.5/functions/_fmadm /usr/share/zsh/5.0.5/functions/_fortune /usr/share/zsh/5.0.5/functions/_freebsd-update /usr/share/zsh/5.0.5/functions/_fsh /usr/share/zsh/5.0.5/functions/_fstat /usr/share/zsh/5.0.5/functions/_functions /usr/share/zsh/5.0.5/functions/_fuse_arguments /usr/share/zsh/5.0.5/functions/_fuse_values /usr/share/zsh/5.0.5/functions/_fuser /usr/share/zsh/5.0.5/functions/_fusermount /usr/share/zsh/5.0.5/functions/_gcc /usr/share/zsh/5.0.5/functions/_gcore /usr/share/zsh/5.0.5/functions/_gdb /usr/share/zsh/5.0.5/functions/_generic /usr/share/zsh/5.0.5/functions/_genisoimage /usr/share/zsh/5.0.5/functions/_getclip /usr/share/zsh/5.0.5/functions/_getconf /usr/share/zsh/5.0.5/functions/_getent /usr/share/zsh/5.0.5/functions/_getfacl /usr/share/zsh/5.0.5/functions/_getmail /usr/share/zsh/5.0.5/functions/_git /usr/share/zsh/5.0.5/functions/_git-buildpackage /usr/share/zsh/5.0.5/functions/_global /usr/share/zsh/5.0.5/functions/_global_tags /usr/share/zsh/5.0.5/functions/_globflags /usr/share/zsh/5.0.5/functions/_globqual_delims /usr/share/zsh/5.0.5/functions/_globquals /usr/share/zsh/5.0.5/functions/_gnome-gv /usr/share/zsh/5.0.5/functions/_gnu_generic /usr/share/zsh/5.0.5/functions/_gnupod /usr/share/zsh/5.0.5/functions/_gnutls /usr/share/zsh/5.0.5/functions/_go /usr/share/zsh/5.0.5/functions/_gpg /usr/share/zsh/5.0.5/functions/_gphoto2 /usr/share/zsh/5.0.5/functions/_gprof /usr/share/zsh/5.0.5/functions/_gqview /usr/share/zsh/5.0.5/functions/_gradle /usr/share/zsh/5.0.5/functions/_graphicsmagick /usr/share/zsh/5.0.5/functions/_grep /usr/share/zsh/5.0.5/functions/_grep-excuses /usr/share/zsh/5.0.5/functions/_groff /usr/share/zsh/5.0.5/functions/_groups /usr/share/zsh/5.0.5/functions/_growisofs /usr/share/zsh/5.0.5/functions/_gs /usr/share/zsh/5.0.5/functions/_guard /usr/share/zsh/5.0.5/functions/_guilt /usr/share/zsh/5.0.5/functions/_gv /usr/share/zsh/5.0.5/functions/_gzip /usr/share/zsh/5.0.5/functions/_hash /usr/share/zsh/5.0.5/functions/_have_glob_qual /usr/share/zsh/5.0.5/functions/_hdiutil /usr/share/zsh/5.0.5/functions/_hg /usr/share/zsh/5.0.5/functions/_history /usr/share/zsh/5.0.5/functions/_history_complete_word /usr/share/zsh/5.0.5/functions/_history_modifiers /usr/share/zsh/5.0.5/functions/_hosts /usr/share/zsh/5.0.5/functions/_hwinfo /usr/share/zsh/5.0.5/functions/_iconv /usr/share/zsh/5.0.5/functions/_id /usr/share/zsh/5.0.5/functions/_ifconfig /usr/share/zsh/5.0.5/functions/_iftop /usr/share/zsh/5.0.5/functions/_ignored /usr/share/zsh/5.0.5/functions/_imagemagick /usr/share/zsh/5.0.5/functions/_in_vared /usr/share/zsh/5.0.5/functions/_inetadm /usr/share/zsh/5.0.5/functions/_init_d /usr/share/zsh/5.0.5/functions/_initctl /usr/share/zsh/5.0.5/functions/_invoke-rc.d /usr/share/zsh/5.0.5/functions/_ionice /usr/share/zsh/5.0.5/functions/_ip /usr/share/zsh/5.0.5/functions/_ipadm /usr/share/zsh/5.0.5/functions/_ipset /usr/share/zsh/5.0.5/functions/_iptables /usr/share/zsh/5.0.5/functions/_irssi /usr/share/zsh/5.0.5/functions/_ispell /usr/share/zsh/5.0.5/functions/_iwconfig /usr/share/zsh/5.0.5/functions/_java /usr/share/zsh/5.0.5/functions/_java_class /usr/share/zsh/5.0.5/functions/_jobs /usr/share/zsh/5.0.5/functions/_jobs_bg /usr/share/zsh/5.0.5/functions/_jobs_builtin /usr/share/zsh/5.0.5/functions/_jobs_fg /usr/share/zsh/5.0.5/functions/_joe /usr/share/zsh/5.0.5/functions/_join /usr/share/zsh/5.0.5/functions/_kfmclient /usr/share/zsh/5.0.5/functions/_kill /usr/share/zsh/5.0.5/functions/_killall /usr/share/zsh/5.0.5/functions/_kld /usr/share/zsh/5.0.5/functions/_knock /usr/share/zsh/5.0.5/functions/_kvno /usr/share/zsh/5.0.5/functions/_last /usr/share/zsh/5.0.5/functions/_ldd /usr/share/zsh/5.0.5/functions/_less /usr/share/zsh/5.0.5/functions/_lha /usr/share/zsh/5.0.5/functions/_lighttpd /usr/share/zsh/5.0.5/functions/_limit /usr/share/zsh/5.0.5/functions/_limits /usr/share/zsh/5.0.5/functions/_links /usr/share/zsh/5.0.5/functions/_lintian /usr/share/zsh/5.0.5/functions/_list /usr/share/zsh/5.0.5/functions/_list_files /usr/share/zsh/5.0.5/functions/_ln /usr/share/zsh/5.0.5/functions/_loadkeys /usr/share/zsh/5.0.5/functions/_locales /usr/share/zsh/5.0.5/functions/_locate /usr/share/zsh/5.0.5/functions/_logical_volumes /usr/share/zsh/5.0.5/functions/_look /usr/share/zsh/5.0.5/functions/_losetup /usr/share/zsh/5.0.5/functions/_lp /usr/share/zsh/5.0.5/functions/_ls /usr/share/zsh/5.0.5/functions/_lscfg /usr/share/zsh/5.0.5/functions/_lsdev /usr/share/zsh/5.0.5/functions/_lslv /usr/share/zsh/5.0.5/functions/_lsof /usr/share/zsh/5.0.5/functions/_lspv /usr/share/zsh/5.0.5/functions/_lsusb /usr/share/zsh/5.0.5/functions/_lsvg /usr/share/zsh/5.0.5/functions/_lynx /usr/share/zsh/5.0.5/functions/_lzop /usr/share/zsh/5.0.5/functions/_mac_applications /usr/share/zsh/5.0.5/functions/_mac_files_for_application /usr/share/zsh/5.0.5/functions/_madison /usr/share/zsh/5.0.5/functions/_mail /usr/share/zsh/5.0.5/functions/_mailboxes /usr/share/zsh/5.0.5/functions/_main_complete /usr/share/zsh/5.0.5/functions/_make /usr/share/zsh/5.0.5/functions/_make-kpkg /usr/share/zsh/5.0.5/functions/_man /usr/share/zsh/5.0.5/functions/_match /usr/share/zsh/5.0.5/functions/_math /usr/share/zsh/5.0.5/functions/_math_params /usr/share/zsh/5.0.5/functions/_matlab /usr/share/zsh/5.0.5/functions/_md5sum /usr/share/zsh/5.0.5/functions/_mdadm /usr/share/zsh/5.0.5/functions/_members /usr/share/zsh/5.0.5/functions/_mencal /usr/share/zsh/5.0.5/functions/_menu /usr/share/zsh/5.0.5/functions/_mere /usr/share/zsh/5.0.5/functions/_mergechanges /usr/share/zsh/5.0.5/functions/_message /usr/share/zsh/5.0.5/functions/_metaflac /usr/share/zsh/5.0.5/functions/_mh /usr/share/zsh/5.0.5/functions/_mii-tool /usr/share/zsh/5.0.5/functions/_mime_types /usr/share/zsh/5.0.5/functions/_mkdir /usr/share/zsh/5.0.5/functions/_mkshortcut /usr/share/zsh/5.0.5/functions/_mkzsh /usr/share/zsh/5.0.5/functions/_module /usr/share/zsh/5.0.5/functions/_module-assistant /usr/share/zsh/5.0.5/functions/_module_math_func /usr/share/zsh/5.0.5/functions/_modutils /usr/share/zsh/5.0.5/functions/_mondo /usr/share/zsh/5.0.5/functions/_monotone /usr/share/zsh/5.0.5/functions/_mosh /usr/share/zsh/5.0.5/functions/_most_recent_file /usr/share/zsh/5.0.5/functions/_mount /usr/share/zsh/5.0.5/functions/_mozilla /usr/share/zsh/5.0.5/functions/_mpc /usr/share/zsh/5.0.5/functions/_mplayer /usr/share/zsh/5.0.5/functions/_mt /usr/share/zsh/5.0.5/functions/_mtools /usr/share/zsh/5.0.5/functions/_mtr /usr/share/zsh/5.0.5/functions/_multi_parts /usr/share/zsh/5.0.5/functions/_mutt /usr/share/zsh/5.0.5/functions/_my_accounts /usr/share/zsh/5.0.5/functions/_mysql_utils /usr/share/zsh/5.0.5/functions/_mysqldiff /usr/share/zsh/5.0.5/functions/_nautilus /usr/share/zsh/5.0.5/functions/_ncftp /usr/share/zsh/5.0.5/functions/_nedit /usr/share/zsh/5.0.5/functions/_net_interfaces /usr/share/zsh/5.0.5/functions/_netcat /usr/share/zsh/5.0.5/functions/_netscape /usr/share/zsh/5.0.5/functions/_netstat /usr/share/zsh/5.0.5/functions/_newsgroups /usr/share/zsh/5.0.5/functions/_next_label /usr/share/zsh/5.0.5/functions/_next_tags /usr/share/zsh/5.0.5/functions/_nice /usr/share/zsh/5.0.5/functions/_nkf /usr/share/zsh/5.0.5/functions/_nm /usr/share/zsh/5.0.5/functions/_nmap /usr/share/zsh/5.0.5/functions/_nmcli /usr/share/zsh/5.0.5/functions/_normal /usr/share/zsh/5.0.5/functions/_nothing /usr/share/zsh/5.0.5/functions/_notmuch /usr/share/zsh/5.0.5/functions/_npm /usr/share/zsh/5.0.5/functions/_nslookup /usr/share/zsh/5.0.5/functions/_object_classes /usr/share/zsh/5.0.5/functions/_okular /usr/share/zsh/5.0.5/functions/_oldlist /usr/share/zsh/5.0.5/functions/_open /usr/share/zsh/5.0.5/functions/_options /usr/share/zsh/5.0.5/functions/_options_set /usr/share/zsh/5.0.5/functions/_options_unset /usr/share/zsh/5.0.5/functions/_osc /usr/share/zsh/5.0.5/functions/_other_accounts /usr/share/zsh/5.0.5/functions/_pack /usr/share/zsh/5.0.5/functions/_parameter /usr/share/zsh/5.0.5/functions/_parameters /usr/share/zsh/5.0.5/functions/_patch /usr/share/zsh/5.0.5/functions/_path_commands /usr/share/zsh/5.0.5/functions/_path_files /usr/share/zsh/5.0.5/functions/_pax /usr/share/zsh/5.0.5/functions/_pbm /usr/share/zsh/5.0.5/functions/_pbuilder /usr/share/zsh/5.0.5/functions/_pdf /usr/share/zsh/5.0.5/functions/_pdftk /usr/share/zsh/5.0.5/functions/_perforce /usr/share/zsh/5.0.5/functions/_perl /usr/share/zsh/5.0.5/functions/_perl_basepods /usr/share/zsh/5.0.5/functions/_perl_modules /usr/share/zsh/5.0.5/functions/_perldoc /usr/share/zsh/5.0.5/functions/_pfctl /usr/share/zsh/5.0.5/functions/_pfexec /usr/share/zsh/5.0.5/functions/_pgrep /usr/share/zsh/5.0.5/functions/_php /usr/share/zsh/5.0.5/functions/_physical_volumes /usr/share/zsh/5.0.5/functions/_pick_variant /usr/share/zsh/5.0.5/functions/_pids /usr/share/zsh/5.0.5/functions/_pine /usr/share/zsh/5.0.5/functions/_ping /usr/share/zsh/5.0.5/functions/_piuparts /usr/share/zsh/5.0.5/functions/_pkg-config /usr/share/zsh/5.0.5/functions/_pkg5 /usr/share/zsh/5.0.5/functions/_pkg_instance /usr/share/zsh/5.0.5/functions/_pkgadd /usr/share/zsh/5.0.5/functions/_pkginfo /usr/share/zsh/5.0.5/functions/_pkgrm /usr/share/zsh/5.0.5/functions/_pkgtool /usr/share/zsh/5.0.5/functions/_pon /usr/share/zsh/5.0.5/functions/_portaudit /usr/share/zsh/5.0.5/functions/_portlint /usr/share/zsh/5.0.5/functions/_portmaster /usr/share/zsh/5.0.5/functions/_ports /usr/share/zsh/5.0.5/functions/_portsnap /usr/share/zsh/5.0.5/functions/_postfix /usr/share/zsh/5.0.5/functions/_postscript /usr/share/zsh/5.0.5/functions/_powerd /usr/share/zsh/5.0.5/functions/_prcs /usr/share/zsh/5.0.5/functions/_precommand /usr/share/zsh/5.0.5/functions/_prefix /usr/share/zsh/5.0.5/functions/_print /usr/share/zsh/5.0.5/functions/_printenv /usr/share/zsh/5.0.5/functions/_printers /usr/share/zsh/5.0.5/functions/_procstat /usr/share/zsh/5.0.5/functions/_prompt /usr/share/zsh/5.0.5/functions/_prove /usr/share/zsh/5.0.5/functions/_prstat /usr/share/zsh/5.0.5/functions/_ps /usr/share/zsh/5.0.5/functions/_ps1234 /usr/share/zsh/5.0.5/functions/_pscp /usr/share/zsh/5.0.5/functions/_pspdf /usr/share/zsh/5.0.5/functions/_psutils /usr/share/zsh/5.0.5/functions/_ptree /usr/share/zsh/5.0.5/functions/_pump /usr/share/zsh/5.0.5/functions/_putclip /usr/share/zsh/5.0.5/functions/_pydoc /usr/share/zsh/5.0.5/functions/_python /usr/share/zsh/5.0.5/functions/_qemu /usr/share/zsh/5.0.5/functions/_qiv /usr/share/zsh/5.0.5/functions/_qtplay /usr/share/zsh/5.0.5/functions/_quilt /usr/share/zsh/5.0.5/functions/_raggle /usr/share/zsh/5.0.5/functions/_rake /usr/share/zsh/5.0.5/functions/_ranlib /usr/share/zsh/5.0.5/functions/_rar /usr/share/zsh/5.0.5/functions/_rcs /usr/share/zsh/5.0.5/functions/_read /usr/share/zsh/5.0.5/functions/_read_comp /usr/share/zsh/5.0.5/functions/_readshortcut /usr/share/zsh/5.0.5/functions/_rebootin /usr/share/zsh/5.0.5/functions/_redirect /usr/share/zsh/5.0.5/functions/_regex_arguments /usr/share/zsh/5.0.5/functions/_regex_words /usr/share/zsh/5.0.5/functions/_remote_files /usr/share/zsh/5.0.5/functions/_renice /usr/share/zsh/5.0.5/functions/_reprepro /usr/share/zsh/5.0.5/functions/_requested /usr/share/zsh/5.0.5/functions/_retrieve_cache /usr/share/zsh/5.0.5/functions/_retrieve_mac_apps /usr/share/zsh/5.0.5/functions/_ri /usr/share/zsh/5.0.5/functions/_rlogin /usr/share/zsh/5.0.5/functions/_rm /usr/share/zsh/5.0.5/functions/_rpm /usr/share/zsh/5.0.5/functions/_rpmbuild /usr/share/zsh/5.0.5/functions/_rrdtool /usr/share/zsh/5.0.5/functions/_rsync /usr/share/zsh/5.0.5/functions/_rubber /usr/share/zsh/5.0.5/functions/_ruby /usr/share/zsh/5.0.5/functions/_run-help /usr/share/zsh/5.0.5/functions/_sablotron /usr/share/zsh/5.0.5/functions/_samba /usr/share/zsh/5.0.5/functions/_savecore /usr/share/zsh/5.0.5/functions/_sccs /usr/share/zsh/5.0.5/functions/_sched /usr/share/zsh/5.0.5/functions/_schedtool /usr/share/zsh/5.0.5/functions/_schroot /usr/share/zsh/5.0.5/functions/_screen /usr/share/zsh/5.0.5/functions/_sed /usr/share/zsh/5.0.5/functions/_sep_parts /usr/share/zsh/5.0.5/functions/_service /usr/share/zsh/5.0.5/functions/_services /usr/share/zsh/5.0.5/functions/_set /usr/share/zsh/5.0.5/functions/_set_command /usr/share/zsh/5.0.5/functions/_setfacl /usr/share/zsh/5.0.5/functions/_setopt /usr/share/zsh/5.0.5/functions/_setup /usr/share/zsh/5.0.5/functions/_setxkbmap /usr/share/zsh/5.0.5/functions/_sh /usr/share/zsh/5.0.5/functions/_showmount /usr/share/zsh/5.0.5/functions/_signals /usr/share/zsh/5.0.5/functions/_sisu /usr/share/zsh/5.0.5/functions/_slrn /usr/share/zsh/5.0.5/functions/_smit /usr/share/zsh/5.0.5/functions/_snoop /usr/share/zsh/5.0.5/functions/_socket /usr/share/zsh/5.0.5/functions/_sockstat /usr/share/zsh/5.0.5/functions/_softwareupdate /usr/share/zsh/5.0.5/functions/_sort /usr/share/zsh/5.0.5/functions/_source /usr/share/zsh/5.0.5/functions/_spamassassin /usr/share/zsh/5.0.5/functions/_sqlite /usr/share/zsh/5.0.5/functions/_sqsh /usr/share/zsh/5.0.5/functions/_ssh /usr/share/zsh/5.0.5/functions/_sshfs /usr/share/zsh/5.0.5/functions/_stat /usr/share/zsh/5.0.5/functions/_stgit /usr/share/zsh/5.0.5/functions/_store_cache /usr/share/zsh/5.0.5/functions/_strace /usr/share/zsh/5.0.5/functions/_strip /usr/share/zsh/5.0.5/functions/_stty /usr/share/zsh/5.0.5/functions/_su /usr/share/zsh/5.0.5/functions/_sub_commands /usr/share/zsh/5.0.5/functions/_subscript /usr/share/zsh/5.0.5/functions/_subversion /usr/share/zsh/5.0.5/functions/_sudo /usr/share/zsh/5.0.5/functions/_suffix_alias_files /usr/share/zsh/5.0.5/functions/_surfraw /usr/share/zsh/5.0.5/functions/_svcadm /usr/share/zsh/5.0.5/functions/_svccfg /usr/share/zsh/5.0.5/functions/_svcprop /usr/share/zsh/5.0.5/functions/_svcs /usr/share/zsh/5.0.5/functions/_svcs_fmri /usr/share/zsh/5.0.5/functions/_svn-buildpackage /usr/share/zsh/5.0.5/functions/_sysctl /usr/share/zsh/5.0.5/functions/_systemd /usr/share/zsh/5.0.5/functions/_tags /usr/share/zsh/5.0.5/functions/_tar /usr/share/zsh/5.0.5/functions/_tar_archive /usr/share/zsh/5.0.5/functions/_tardy /usr/share/zsh/5.0.5/functions/_tcpdump /usr/share/zsh/5.0.5/functions/_tcpsys /usr/share/zsh/5.0.5/functions/_tcptraceroute /usr/share/zsh/5.0.5/functions/_telnet /usr/share/zsh/5.0.5/functions/_terminals /usr/share/zsh/5.0.5/functions/_tex /usr/share/zsh/5.0.5/functions/_texi /usr/share/zsh/5.0.5/functions/_texinfo /usr/share/zsh/5.0.5/functions/_tidy /usr/share/zsh/5.0.5/functions/_tiff /usr/share/zsh/5.0.5/functions/_tilde /usr/share/zsh/5.0.5/functions/_tilde_files /usr/share/zsh/5.0.5/functions/_time_zone /usr/share/zsh/5.0.5/functions/_tin /usr/share/zsh/5.0.5/functions/_tla /usr/share/zsh/5.0.5/functions/_tmux /usr/share/zsh/5.0.5/functions/_todo.sh /usr/share/zsh/5.0.5/functions/_toilet /usr/share/zsh/5.0.5/functions/_toolchain-source /usr/share/zsh/5.0.5/functions/_topgit /usr/share/zsh/5.0.5/functions/_totd /usr/share/zsh/5.0.5/functions/_tpb /usr/share/zsh/5.0.5/functions/_tpconfig /usr/share/zsh/5.0.5/functions/_tracepath /usr/share/zsh/5.0.5/functions/_trap /usr/share/zsh/5.0.5/functions/_tree /usr/share/zsh/5.0.5/functions/_ttyctl /usr/share/zsh/5.0.5/functions/_tune2fs /usr/share/zsh/5.0.5/functions/_twidge /usr/share/zsh/5.0.5/functions/_twisted /usr/share/zsh/5.0.5/functions/_typeset /usr/share/zsh/5.0.5/functions/_ulimit /usr/share/zsh/5.0.5/functions/_uml /usr/share/zsh/5.0.5/functions/_unace /usr/share/zsh/5.0.5/functions/_uname /usr/share/zsh/5.0.5/functions/_unexpand /usr/share/zsh/5.0.5/functions/_unhash /usr/share/zsh/5.0.5/functions/_uniq /usr/share/zsh/5.0.5/functions/_unison /usr/share/zsh/5.0.5/functions/_units /usr/share/zsh/5.0.5/functions/_unsetopt /usr/share/zsh/5.0.5/functions/_update-alternatives /usr/share/zsh/5.0.5/functions/_update-rc.d /usr/share/zsh/5.0.5/functions/_urls /usr/share/zsh/5.0.5/functions/_urpmi /usr/share/zsh/5.0.5/functions/_urxvt /usr/share/zsh/5.0.5/functions/_uscan /usr/share/zsh/5.0.5/functions/_user_admin /usr/share/zsh/5.0.5/functions/_user_at_host /usr/share/zsh/5.0.5/functions/_user_expand /usr/share/zsh/5.0.5/functions/_user_math_func /usr/share/zsh/5.0.5/functions/_users /usr/share/zsh/5.0.5/functions/_users_on /usr/share/zsh/5.0.5/functions/_uzbl /usr/share/zsh/5.0.5/functions/_valgrind /usr/share/zsh/5.0.5/functions/_value /usr/share/zsh/5.0.5/functions/_values /usr/share/zsh/5.0.5/functions/_vared /usr/share/zsh/5.0.5/functions/_vars /usr/share/zsh/5.0.5/functions/_vcsh /usr/share/zsh/5.0.5/functions/_vim /usr/share/zsh/5.0.5/functions/_vim-addons /usr/share/zsh/5.0.5/functions/_vnc /usr/share/zsh/5.0.5/functions/_volume_groups /usr/share/zsh/5.0.5/functions/_vorbis /usr/share/zsh/5.0.5/functions/_vorbiscomment /usr/share/zsh/5.0.5/functions/_vserver /usr/share/zsh/5.0.5/functions/_vux /usr/share/zsh/5.0.5/functions/_w3m /usr/share/zsh/5.0.5/functions/_wait /usr/share/zsh/5.0.5/functions/_wajig /usr/share/zsh/5.0.5/functions/_wakeup_capable_devices /usr/share/zsh/5.0.5/functions/_wanna-build /usr/share/zsh/5.0.5/functions/_wanted /usr/share/zsh/5.0.5/functions/_webbrowser /usr/share/zsh/5.0.5/functions/_wget /usr/share/zsh/5.0.5/functions/_whereis /usr/share/zsh/5.0.5/functions/_which /usr/share/zsh/5.0.5/functions/_whois /usr/share/zsh/5.0.5/functions/_wiggle /usr/share/zsh/5.0.5/functions/_wpa_cli /usr/share/zsh/5.0.5/functions/_x_arguments /usr/share/zsh/5.0.5/functions/_x_borderwidth /usr/share/zsh/5.0.5/functions/_x_color /usr/share/zsh/5.0.5/functions/_x_colormapid /usr/share/zsh/5.0.5/functions/_x_cursor /usr/share/zsh/5.0.5/functions/_x_display /usr/share/zsh/5.0.5/functions/_x_extension /usr/share/zsh/5.0.5/functions/_x_font /usr/share/zsh/5.0.5/functions/_x_geometry /usr/share/zsh/5.0.5/functions/_x_keysym /usr/share/zsh/5.0.5/functions/_x_locale /usr/share/zsh/5.0.5/functions/_x_modifier /usr/share/zsh/5.0.5/functions/_x_name /usr/share/zsh/5.0.5/functions/_x_resource /usr/share/zsh/5.0.5/functions/_x_selection_timeout /usr/share/zsh/5.0.5/functions/_x_title /usr/share/zsh/5.0.5/functions/_x_utils /usr/share/zsh/5.0.5/functions/_x_visual /usr/share/zsh/5.0.5/functions/_x_window /usr/share/zsh/5.0.5/functions/_xargs /usr/share/zsh/5.0.5/functions/_xauth /usr/share/zsh/5.0.5/functions/_xclip /usr/share/zsh/5.0.5/functions/_xdvi /usr/share/zsh/5.0.5/functions/_xfig /usr/share/zsh/5.0.5/functions/_xft_fonts /usr/share/zsh/5.0.5/functions/_xloadimage /usr/share/zsh/5.0.5/functions/_xmlsoft /usr/share/zsh/5.0.5/functions/_xmms2 /usr/share/zsh/5.0.5/functions/_xmodmap /usr/share/zsh/5.0.5/functions/_xournal /usr/share/zsh/5.0.5/functions/_xpdf /usr/share/zsh/5.0.5/functions/_xrandr /usr/share/zsh/5.0.5/functions/_xscreensaver /usr/share/zsh/5.0.5/functions/_xset /usr/share/zsh/5.0.5/functions/_xt_arguments /usr/share/zsh/5.0.5/functions/_xt_session_id /usr/share/zsh/5.0.5/functions/_xterm /usr/share/zsh/5.0.5/functions/_xv /usr/share/zsh/5.0.5/functions/_xwit /usr/share/zsh/5.0.5/functions/_xz /usr/share/zsh/5.0.5/functions/_yafc /usr/share/zsh/5.0.5/functions/_yast /usr/share/zsh/5.0.5/functions/_yast2 /usr/share/zsh/5.0.5/functions/_yodl /usr/share/zsh/5.0.5/functions/_yp /usr/share/zsh/5.0.5/functions/_yum /usr/share/zsh/5.0.5/functions/_zargs /usr/share/zsh/5.0.5/functions/_zattr /usr/share/zsh/5.0.5/functions/_zcalc_line /usr/share/zsh/5.0.5/functions/_zcat /usr/share/zsh/5.0.5/functions/_zcompile /usr/share/zsh/5.0.5/functions/_zdump /usr/share/zsh/5.0.5/functions/_zed /usr/share/zsh/5.0.5/functions/_zfs /usr/share/zsh/5.0.5/functions/_zfs_dataset /usr/share/zsh/5.0.5/functions/_zfs_keysource_props /usr/share/zsh/5.0.5/functions/_zfs_pool /usr/share/zsh/5.0.5/functions/_zftp /usr/share/zsh/5.0.5/functions/_zip /usr/share/zsh/5.0.5/functions/_zle /usr/share/zsh/5.0.5/functions/_zlogin /usr/share/zsh/5.0.5/functions/_zmodload /usr/share/zsh/5.0.5/functions/_zmv /usr/share/zsh/5.0.5/functions/_zoneadm /usr/share/zsh/5.0.5/functions/_zones /usr/share/zsh/5.0.5/functions/_zpool /usr/share/zsh/5.0.5/functions/_zpty /usr/share/zsh/5.0.5/functions/_zsh-mime-handler /usr/share/zsh/5.0.5/functions/_zstyle /usr/share/zsh/5.0.5/functions/_ztodo /usr/share/zsh/5.0.5/functions/_zypper ) 
+compaudit:59> [[ -n /usr/share/zsh/5.0.5/functions ]]
+compaudit:60> [[ 708 -lt 20 || /usr/share/zsh/5.0.5/functions == */Base || -d /usr/share/zsh/5.0.5/functions/Base ]]
+compaudit:81> [[ ign == use ]]
+compaudit:85> local '_i_owners=u0u501'
+compaudit:88> local -a _i_exes
+compaudit:89> _i_exes=( /proc/1369/exe /proc/1369/object/a.out ) 
+compaudit:93> local _i_exe
+compaudit:98> _i_exe=/proc/1369/exe
+compaudit:99> [[ -e /proc/1369/exe ]]
+compaudit:98> _i_exe=/proc/1369/object/a.out
+compaudit:99> [[ -e /proc/1369/object/a.out ]]
+compaudit:120> _i_wdirs=( ) 
+compaudit:129> ((  0  ))
+compaudit:143> [[ -f /etc/debian_version ]]
+compaudit:150> _i_wdirs=( ) 
+compaudit:151> _i_wfiles=( ) 
+compaudit:153> case 0:0 (0:0)
+compaudit:154> _i_q='' 
+compaudit:160> [[ -n '' ]]
+compaudit:167> return 0
+compinit:465> autoload -Uz compdump compinstall
+compinit:469> _i_done='' 
+compinit:471> [[ -f '/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5' ]]
+compinit:472> [[ -n yes ]]
+compinit:473> IFS=' 	' +compinit:473> read -rA _i_line
+compinit:474> [[ _i_autodump -eq 1 && 734 -eq 708 ]]
+compinit:485> [[ -z '' ]]
+compinit:486> typeset -A _i_test
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/z
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/z == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/web-search
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/web-search == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/sudo
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/sudo == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/sublime
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/sublime == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/rvm
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/rvm == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/rsync
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/rsync == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/rbenv
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/rbenv == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/git-remote-branch
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/github
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/github == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/github/_github
+compinit:492> _i_name=_github 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ github == -[pPkK](n|) ]]
+compinit:503> compdef -na _github github
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _github == *=* ]]
+compdef:79> func=_github 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _github
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ github == -N ]]
+compdef:134> [[ github == -p ]]
+compdef:136> [[ github == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ github == *=* ]]
+compdef:159> cmd=github 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_github 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/heroku
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/heroku == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/heroku/_heroku
+compinit:492> _i_name=_heroku 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ heroku == -[pPkK](n|) ]]
+compinit:503> compdef -na _heroku heroku
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _heroku == *=* ]]
+compdef:79> func=_heroku 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _heroku
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ heroku == -N ]]
+compdef:134> [[ heroku == -p ]]
+compdef:136> [[ heroku == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ heroku == *=* ]]
+compdef:159> cmd=heroku 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_heroku 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/meteor
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/meteor == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/meteor/_meteor
+compinit:492> _i_name=_meteor 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ meteor == -[pPkK](n|) ]]
+compinit:503> compdef -na _meteor meteor
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _meteor == *=* ]]
+compdef:79> func=_meteor 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _meteor
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ meteor == -N ]]
+compdef:134> [[ meteor == -p ]]
+compdef:136> [[ meteor == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ meteor == *=* ]]
+compdef:159> cmd=meteor 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_meteor 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/osx
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/osx == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/osx/_man-preview
+compinit:492> _i_name=_man-preview 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ man-preview == -[pPkK](n|) ]]
+compinit:503> compdef -na _man-preview man-preview
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _man-preview == *=* ]]
+compdef:79> func=_man-preview 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _man-preview
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ man-preview == -N ]]
+compdef:134> [[ man-preview == -p ]]
+compdef:136> [[ man-preview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ man-preview == *=* ]]
+compdef:159> cmd=man-preview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_man-preview 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/git-prompt
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/git-prompt == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/git-hubflow
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/git-hubflow == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/git-flow
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/git-flow == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/git-extras
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/git-extras == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/gem
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/gem == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/gem/_gem
+compinit:492> _i_name=_gem 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gem == -[pPkK](n|) ]]
+compinit:503> compdef -na _gem gem
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gem == *=* ]]
+compdef:79> func=_gem 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gem
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gem == -N ]]
+compdef:134> [[ gem == -p ]]
+compdef:136> [[ gem == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gem == *=* ]]
+compdef:159> cmd=gem 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gem 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/common-aliases
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/common-aliases == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/colored-man
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/colored-man == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/coffee
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/coffee == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/coffee/_coffee
+compinit:492> _i_name=_coffee 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ coffee == -[pPkK](n|) ]]
+compinit:503> compdef -na _coffee coffee
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _coffee == *=* ]]
+compdef:79> func=_coffee 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _coffee
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ coffee == -N ]]
+compdef:134> [[ coffee == -p ]]
+compdef:136> [[ coffee == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ coffee == *=* ]]
+compdef:159> cmd=coffee 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_coffee 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/cloudapp
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/cloudapp == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/plugins/git
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/plugins/git == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/git/_git-branch
+compinit:492> _i_name=_git-branch 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ git-branch == -[pPkK](n|) ]]
+compinit:503> compdef -na _git-branch git-branch
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git-branch == *=* ]]
+compdef:79> func=_git-branch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _git-branch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ git-branch == -N ]]
+compdef:134> [[ git-branch == -p ]]
+compdef:136> [[ git-branch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-branch == *=* ]]
+compdef:159> cmd=git-branch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git-branch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/Users/cooperm/.oh-my-zsh/plugins/git/_git-remote
+compinit:492> _i_name=_git-remote 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ git-remote == -[pPkK](n|) ]]
+compinit:503> compdef -na _git-remote git-remote
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git-remote == *=* ]]
+compdef:79> func=_git-remote 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _git-remote
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ git-remote == -N ]]
+compdef:134> [[ git-remote == -p ]]
+compdef:136> [[ git-remote == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-remote == *=* ]]
+compdef:159> cmd=git-remote 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git-remote 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/functions
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/functions == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/Users/cooperm/.oh-my-zsh/completions
+compinit:489> [[ /Users/cooperm/.oh-my-zsh/completions == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/usr/share/zsh/site-functions
+compinit:489> [[ /usr/share/zsh/site-functions == . ]]
+compinit:490> ((  0  ))
+compinit:488> _i_dir=/usr/share/zsh/5.0.5/functions
+compinit:489> [[ /usr/share/zsh/5.0.5/functions == . ]]
+compinit:490> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_SuSEconfig
+compinit:492> _i_name=_SuSEconfig 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ SuSEconfig == -[pPkK](n|) ]]
+compinit:503> compdef -na _SuSEconfig SuSEconfig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _SuSEconfig == *=* ]]
+compdef:79> func=_SuSEconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _SuSEconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ SuSEconfig == -N ]]
+compdef:134> [[ SuSEconfig == -p ]]
+compdef:136> [[ SuSEconfig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ SuSEconfig == *=* ]]
+compdef:159> cmd=SuSEconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_SuSEconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_a2ps
+compinit:492> _i_name=_a2ps 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ a2ps == -[pPkK](n|) ]]
+compinit:503> compdef -na _a2ps a2ps
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _a2ps == *=* ]]
+compdef:79> func=_a2ps 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _a2ps
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ a2ps == -N ]]
+compdef:134> [[ a2ps == -p ]]
+compdef:136> [[ a2ps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2ps == *=* ]]
+compdef:159> cmd=a2ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2ps 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_a2utils
+compinit:492> _i_name=_a2utils 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ a2ensite == -[pPkK](n|) ]]
+compinit:503> compdef -na _a2utils a2ensite a2dissite a2enmod a2dismod
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _a2utils == *=* ]]
+compdef:79> func=_a2utils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _a2utils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ a2ensite == -N ]]
+compdef:134> [[ a2ensite == -p ]]
+compdef:136> [[ a2ensite == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2ensite == *=* ]]
+compdef:159> cmd=a2ensite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ a2dissite == -N ]]
+compdef:134> [[ a2dissite == -p ]]
+compdef:136> [[ a2dissite == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2dissite == *=* ]]
+compdef:159> cmd=a2dissite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ a2enmod == -N ]]
+compdef:134> [[ a2enmod == -p ]]
+compdef:136> [[ a2enmod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2enmod == *=* ]]
+compdef:159> cmd=a2enmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ a2dismod == -N ]]
+compdef:134> [[ a2dismod == -p ]]
+compdef:136> [[ a2dismod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2dismod == *=* ]]
+compdef:159> cmd=a2dismod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_aap
+compinit:492> _i_name=_aap 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ aap == -[pPkK](n|) ]]
+compinit:503> compdef -na _aap aap
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _aap == *=* ]]
+compdef:79> func=_aap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _aap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ aap == -N ]]
+compdef:134> [[ aap == -p ]]
+compdef:136> [[ aap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aap == *=* ]]
+compdef:159> cmd=aap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_aap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_acpi
+compinit:492> _i_name=_acpi 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ acpi == -[pPkK](n|) ]]
+compinit:503> compdef -na _acpi acpi
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _acpi == *=* ]]
+compdef:79> func=_acpi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _acpi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ acpi == -N ]]
+compdef:134> [[ acpi == -p ]]
+compdef:136> [[ acpi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ acpi == *=* ]]
+compdef:159> cmd=acpi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_acpi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_acpitool
+compinit:492> _i_name=_acpitool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ acpitool == -[pPkK](n|) ]]
+compinit:503> compdef -na _acpitool acpitool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _acpitool == *=* ]]
+compdef:79> func=_acpitool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _acpitool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ acpitool == -N ]]
+compdef:134> [[ acpitool == -p ]]
+compdef:136> [[ acpitool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ acpitool == *=* ]]
+compdef:159> cmd=acpitool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_acpitool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_acroread
+compinit:492> _i_name=_acroread 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ acroread == -[pPkK](n|) ]]
+compinit:503> compdef -na _acroread acroread
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _acroread == *=* ]]
+compdef:79> func=_acroread 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _acroread
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ acroread == -N ]]
+compdef:134> [[ acroread == -p ]]
+compdef:136> [[ acroread == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ acroread == *=* ]]
+compdef:159> cmd=acroread 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_acroread 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_adb
+compinit:492> _i_name=_adb 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ adb == -[pPkK](n|) ]]
+compinit:503> compdef -na _adb adb -value-,ADB_TRACE,-default- -value-,ANDROID_SERIAL,-default- -value-,ANDROID_LOG_TAGS,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _adb == *=* ]]
+compdef:79> func=_adb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _adb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ adb == -N ]]
+compdef:134> [[ adb == -p ]]
+compdef:136> [[ adb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ adb == *=* ]]
+compdef:159> cmd=adb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,ADB_TRACE,-default- == -N ]]
+compdef:134> [[ -value-,ADB_TRACE,-default- == -p ]]
+compdef:136> [[ -value-,ADB_TRACE,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ADB_TRACE,-default- == *=* ]]
+compdef:159> cmd=-value-,ADB_TRACE,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,ANDROID_SERIAL,-default- == -N ]]
+compdef:134> [[ -value-,ANDROID_SERIAL,-default- == -p ]]
+compdef:136> [[ -value-,ANDROID_SERIAL,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ANDROID_SERIAL,-default- == *=* ]]
+compdef:159> cmd=-value-,ANDROID_SERIAL,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,ANDROID_LOG_TAGS,-default- == -N ]]
+compdef:134> [[ -value-,ANDROID_LOG_TAGS,-default- == -p ]]
+compdef:136> [[ -value-,ANDROID_LOG_TAGS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ANDROID_LOG_TAGS,-default- == *=* ]]
+compdef:159> cmd=-value-,ANDROID_LOG_TAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_alias
+compinit:492> _i_name=_alias 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ alias == -[pPkK](n|) ]]
+compinit:503> compdef -na _alias alias
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _alias == *=* ]]
+compdef:79> func=_alias 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _alias
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ alias == -N ]]
+compdef:134> [[ alias == -p ]]
+compdef:136> [[ alias == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ alias == *=* ]]
+compdef:159> cmd=alias 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_alias 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_aliases
+compinit:492> _i_name=_aliases 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unalias == -[pPkK](n|) ]]
+compinit:503> compdef -na _aliases unalias
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _aliases == *=* ]]
+compdef:79> func=_aliases 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _aliases
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unalias == -N ]]
+compdef:134> [[ unalias == -p ]]
+compdef:136> [[ unalias == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unalias == *=* ]]
+compdef:159> cmd=unalias 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_aliases 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_all_labels
+compinit:492> _i_name=_all_labels 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _all_labels
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_all_matches
+compinit:492> _i_name=_all_matches 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _all_matches
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_alternative
+compinit:492> _i_name=_alternative 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _alternative
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_analyseplugin
+compinit:492> _i_name=_analyseplugin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ analyseplugin == -[pPkK](n|) ]]
+compinit:503> compdef -na _analyseplugin analyseplugin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _analyseplugin == *=* ]]
+compdef:79> func=_analyseplugin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _analyseplugin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ analyseplugin == -N ]]
+compdef:134> [[ analyseplugin == -p ]]
+compdef:136> [[ analyseplugin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ analyseplugin == *=* ]]
+compdef:159> cmd=analyseplugin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_analyseplugin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ant
+compinit:492> _i_name=_ant 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ant == -[pPkK](n|) ]]
+compinit:503> compdef -na _ant ant -value-,ANT_ARGS,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ant == *=* ]]
+compdef:79> func=_ant 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ant
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ant == -N ]]
+compdef:134> [[ ant == -p ]]
+compdef:136> [[ ant == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ant == *=* ]]
+compdef:159> cmd=ant 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,ANT_ARGS,-default- == -N ]]
+compdef:134> [[ -value-,ANT_ARGS,-default- == -p ]]
+compdef:136> [[ -value-,ANT_ARGS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ANT_ARGS,-default- == *=* ]]
+compdef:159> cmd=-value-,ANT_ARGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_antiword
+compinit:492> _i_name=_antiword 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ antiword == -[pPkK](n|) ]]
+compinit:503> compdef -na _antiword antiword
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _antiword == *=* ]]
+compdef:79> func=_antiword 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _antiword
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ antiword == -N ]]
+compdef:134> [[ antiword == -p ]]
+compdef:136> [[ antiword == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ antiword == *=* ]]
+compdef:159> cmd=antiword 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_antiword 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_apachectl
+compinit:492> _i_name=_apachectl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ apachectl == -[pPkK](n|) ]]
+compinit:503> compdef -na _apachectl apachectl apache2ctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apachectl == *=* ]]
+compdef:79> func=_apachectl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apachectl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ apachectl == -N ]]
+compdef:134> [[ apachectl == -p ]]
+compdef:136> [[ apachectl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apachectl == *=* ]]
+compdef:159> cmd=apachectl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apachectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ apache2ctl == -N ]]
+compdef:134> [[ apache2ctl == -p ]]
+compdef:136> [[ apache2ctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apache2ctl == *=* ]]
+compdef:159> cmd=apache2ctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apachectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_apm
+compinit:492> _i_name=_apm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ apm == -[pPkK](n|) ]]
+compinit:503> compdef -na _apm apm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apm == *=* ]]
+compdef:79> func=_apm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apm == -N ]]
+compdef:134> [[ apm == -p ]]
+compdef:136> [[ apm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apm == *=* ]]
+compdef:159> cmd=apm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_approximate
+compinit:492> _i_name=_approximate 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _approximate
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_apt
+compinit:492> _i_name=_apt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ apt-get == -[pPkK](n|) ]]
+compinit:503> compdef -na _apt apt-get apt-cache apt-cdrom apt-config
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt == *=* ]]
+compdef:79> func=_apt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ apt-get == -N ]]
+compdef:134> [[ apt-get == -p ]]
+compdef:136> [[ apt-get == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-get == *=* ]]
+compdef:159> cmd=apt-get 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ apt-cache == -N ]]
+compdef:134> [[ apt-cache == -p ]]
+compdef:136> [[ apt-cache == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-cache == *=* ]]
+compdef:159> cmd=apt-cache 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ apt-cdrom == -N ]]
+compdef:134> [[ apt-cdrom == -p ]]
+compdef:136> [[ apt-cdrom == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-cdrom == *=* ]]
+compdef:159> cmd=apt-cdrom 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ apt-config == -N ]]
+compdef:134> [[ apt-config == -p ]]
+compdef:136> [[ apt-config == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-config == *=* ]]
+compdef:159> cmd=apt-config 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_apt-file
+compinit:492> _i_name=_apt-file 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ apt-file == -[pPkK](n|) ]]
+compinit:503> compdef -na _apt-file apt-file
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt-file == *=* ]]
+compdef:79> func=_apt-file 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt-file
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apt-file == -N ]]
+compdef:134> [[ apt-file == -p ]]
+compdef:136> [[ apt-file == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-file == *=* ]]
+compdef:159> cmd=apt-file 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt-file 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_apt-move
+compinit:492> _i_name=_apt-move 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ apt-move == -[pPkK](n|) ]]
+compinit:503> compdef -na _apt-move apt-move
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt-move == *=* ]]
+compdef:79> func=_apt-move 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt-move
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apt-move == -N ]]
+compdef:134> [[ apt-move == -p ]]
+compdef:136> [[ apt-move == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-move == *=* ]]
+compdef:159> cmd=apt-move 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt-move 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_apt-show-versions
+compinit:492> _i_name=_apt-show-versions 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ apt-show-versions == -[pPkK](n|) ]]
+compinit:503> compdef -na _apt-show-versions apt-show-versions
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt-show-versions == *=* ]]
+compdef:79> func=_apt-show-versions 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt-show-versions
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apt-show-versions == -N ]]
+compdef:134> [[ apt-show-versions == -p ]]
+compdef:136> [[ apt-show-versions == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-show-versions == *=* ]]
+compdef:159> cmd=apt-show-versions 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt-show-versions 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_aptitude
+compinit:492> _i_name=_aptitude 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ aptitude == -[pPkK](n|) ]]
+compinit:503> compdef -na _aptitude aptitude
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _aptitude == *=* ]]
+compdef:79> func=_aptitude 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _aptitude
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ aptitude == -N ]]
+compdef:134> [[ aptitude == -p ]]
+compdef:136> [[ aptitude == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aptitude == *=* ]]
+compdef:159> cmd=aptitude 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_aptitude 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_arch_archives
+compinit:492> _i_name=_arch_archives 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _arch_archives
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_arch_namespace
+compinit:492> _i_name=_arch_namespace 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _arch_namespace
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_arg_compile
+compinit:492> _i_name=_arg_compile 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _arg_compile
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_arguments
+compinit:492> _i_name=_arguments 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _arguments
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_arp
+compinit:492> _i_name=_arp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ arp == -[pPkK](n|) ]]
+compinit:503> compdef -na _arp arp
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _arp == *=* ]]
+compdef:79> func=_arp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _arp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ arp == -N ]]
+compdef:134> [[ arp == -p ]]
+compdef:136> [[ arp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ arp == *=* ]]
+compdef:159> cmd=arp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_arp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_arping
+compinit:492> _i_name=_arping 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ arping == -[pPkK](n|) ]]
+compinit:503> compdef -na _arping arping
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _arping == *=* ]]
+compdef:79> func=_arping 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _arping
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ arping == -N ]]
+compdef:134> [[ arping == -p ]]
+compdef:136> [[ arping == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ arping == *=* ]]
+compdef:159> cmd=arping 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_arping 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_arrays
+compinit:492> _i_name=_arrays 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ shift == -[pPkK](n|) ]]
+compinit:503> compdef -na _arrays shift
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _arrays == *=* ]]
+compdef:79> func=_arrays 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _arrays
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ shift == -N ]]
+compdef:134> [[ shift == -p ]]
+compdef:136> [[ shift == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ shift == *=* ]]
+compdef:159> cmd=shift 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_arrays 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_assign
+compinit:492> _i_name=_assign 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -assign-parameter- == -[pPkK](n|) ]]
+compinit:503> compdef -na _assign -assign-parameter-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _assign == *=* ]]
+compdef:79> func=_assign 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _assign
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -assign-parameter- == -N ]]
+compdef:134> [[ -assign-parameter- == -p ]]
+compdef:136> [[ -assign-parameter- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -assign-parameter- == *=* ]]
+compdef:159> cmd=-assign-parameter- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_assign 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_at
+compinit:492> _i_name=_at 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ atrm == -[pPkK](n|) ]]
+compinit:503> compdef -na _at atrm atq at batch
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _at == *=* ]]
+compdef:79> func=_at 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _at
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ atrm == -N ]]
+compdef:134> [[ atrm == -p ]]
+compdef:136> [[ atrm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ atrm == *=* ]]
+compdef:159> cmd=atrm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ atq == -N ]]
+compdef:134> [[ atq == -p ]]
+compdef:136> [[ atq == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ atq == *=* ]]
+compdef:159> cmd=atq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ at == -N ]]
+compdef:134> [[ at == -p ]]
+compdef:136> [[ at == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ at == *=* ]]
+compdef:159> cmd=at 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ batch == -N ]]
+compdef:134> [[ batch == -p ]]
+compdef:136> [[ batch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ batch == *=* ]]
+compdef:159> cmd=batch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_attr
+compinit:492> _i_name=_attr 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ attr == -[pPkK](n|) ]]
+compinit:503> compdef -na _attr attr getfattr setfattr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _attr == *=* ]]
+compdef:79> func=_attr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _attr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ attr == -N ]]
+compdef:134> [[ attr == -p ]]
+compdef:136> [[ attr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ attr == *=* ]]
+compdef:159> cmd=attr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_attr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ getfattr == -N ]]
+compdef:134> [[ getfattr == -p ]]
+compdef:136> [[ getfattr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getfattr == *=* ]]
+compdef:159> cmd=getfattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_attr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ setfattr == -N ]]
+compdef:134> [[ setfattr == -p ]]
+compdef:136> [[ setfattr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setfattr == *=* ]]
+compdef:159> cmd=setfattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_attr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_auto-apt
+compinit:492> _i_name=_auto-apt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ auto-apt == -[pPkK](n|) ]]
+compinit:503> compdef -na _auto-apt auto-apt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _auto-apt == *=* ]]
+compdef:79> func=_auto-apt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _auto-apt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ auto-apt == -N ]]
+compdef:134> [[ auto-apt == -p ]]
+compdef:136> [[ auto-apt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ auto-apt == *=* ]]
+compdef:159> cmd=auto-apt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_auto-apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_autocd
+compinit:492> _i_name=_autocd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -command- == -[pPkK](n|) ]]
+compinit:503> compdef -na _autocd -command-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _autocd == *=* ]]
+compdef:79> func=_autocd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _autocd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -command- == -N ]]
+compdef:134> [[ -command- == -p ]]
+compdef:136> [[ -command- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -command- == *=* ]]
+compdef:159> cmd=-command- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_autocd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_awk
+compinit:492> _i_name=_awk 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ awk == -[pPkK](n|) ]]
+compinit:503> compdef -na _awk awk
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _awk == *=* ]]
+compdef:79> func=_awk 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _awk
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ awk == -N ]]
+compdef:134> [[ awk == -p ]]
+compdef:136> [[ awk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ awk == *=* ]]
+compdef:159> cmd=awk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_awk 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_axi-cache
+compinit:492> _i_name=_axi-cache 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ axi-cache == -[pPkK](n|) ]]
+compinit:503> compdef -na _axi-cache axi-cache
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _axi-cache == *=* ]]
+compdef:79> func=_axi-cache 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _axi-cache
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ axi-cache == -N ]]
+compdef:134> [[ axi-cache == -p ]]
+compdef:136> [[ axi-cache == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ axi-cache == *=* ]]
+compdef:159> cmd=axi-cache 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_axi-cache 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bash_completions
+compinit:492> _i_name=_bash_completions 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -K == -[pPkK](n|) ]]
+compinit:501> compdef -Kna _bash_completions _bash_complete-word complete-word '\e~' _bash_list-choices list-choices '^X~'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K == p ]]
+compdef:26> [[ K == P ]]
+compdef:28> [[ K == K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bash_completions == *=* ]]
+compdef:79> func=_bash_completions 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bash_completions
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _bash_complete-word ]]
+compdef:86> [[ 6 -lt 3 ]]
+compdef:90> [[ _bash_complete-word == _* ]]
+compdef:91> [[ complete-word == .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word == .menu-select ]]
+compdef:93> zle -C _bash_complete-word .complete-word _bash_completions
+compdef:94> [[ -n yes ]]
+compdef:95> IFS=' 	' +compdef:95> read -A opt
+compdef:95> bindkey '\e~'
+compdef:96> [[ undefined-key == undefined-key ]]
+compdef:96> bindkey '\e~' _bash_complete-word
+compdef:100> shift 3
+compdef:85> [[ -n _bash_list-choices ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _bash_list-choices == _* ]]
+compdef:91> [[ list-choices == .* ]]
+compdef:91> 2=.list-choices 
+compdef:92> [[ .list-choices == .menu-select ]]
+compdef:93> zle -C _bash_list-choices .list-choices _bash_completions
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '^X~'
+compdef:95> IFS=' 	' +compdef:95> read -A opt
+compdef:96> [[ undefined-key == undefined-key ]]
+compdef:96> bindkey '^X~' _bash_list-choices
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_baz
+compinit:492> _i_name=_baz 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ baz == -[pPkK](n|) ]]
+compinit:503> compdef -na _baz baz
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _baz == *=* ]]
+compdef:79> func=_baz 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _baz
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ baz == -N ]]
+compdef:134> [[ baz == -p ]]
+compdef:136> [[ baz == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ baz == *=* ]]
+compdef:159> cmd=baz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_baz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_be_name
+compinit:492> _i_name=_be_name 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _be_name
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_beadm
+compinit:492> _i_name=_beadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ beadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _beadm beadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _beadm == *=* ]]
+compdef:79> func=_beadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _beadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ beadm == -N ]]
+compdef:134> [[ beadm == -p ]]
+compdef:136> [[ beadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ beadm == *=* ]]
+compdef:159> cmd=beadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_beadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bind_addresses
+compinit:492> _i_name=_bind_addresses 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _bind_addresses
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bindkey
+compinit:492> _i_name=_bindkey 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bindkey == -[pPkK](n|) ]]
+compinit:503> compdef -na _bindkey bindkey
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bindkey == *=* ]]
+compdef:79> func=_bindkey 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bindkey
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bindkey == -N ]]
+compdef:134> [[ bindkey == -p ]]
+compdef:136> [[ bindkey == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bindkey == *=* ]]
+compdef:159> cmd=bindkey 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bindkey 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bison
+compinit:492> _i_name=_bison 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bison == -[pPkK](n|) ]]
+compinit:503> compdef -na _bison bison
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bison == *=* ]]
+compdef:79> func=_bison 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bison
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bison == -N ]]
+compdef:134> [[ bison == -p ]]
+compdef:136> [[ bison == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bison == *=* ]]
+compdef:159> cmd=bison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bittorrent
+compinit:492> _i_name=_bittorrent 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ btdownloadcurses == -[pPkK](n|) ]]
+compinit:503> compdef -na _bittorrent btdownloadcurses btdownloadheadless btdownloadgui btlaunchmany btlaunchmanycurses bttrack btshowmetainfo btreannounce btmakemetafile btrename
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 12  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 11  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bittorrent == *=* ]]
+compdef:79> func=_bittorrent 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bittorrent
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  10  ))
+compdef:132> [[ btdownloadcurses == -N ]]
+compdef:134> [[ btdownloadcurses == -p ]]
+compdef:136> [[ btdownloadcurses == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btdownloadcurses == *=* ]]
+compdef:159> cmd=btdownloadcurses 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ btdownloadheadless == -N ]]
+compdef:134> [[ btdownloadheadless == -p ]]
+compdef:136> [[ btdownloadheadless == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btdownloadheadless == *=* ]]
+compdef:159> cmd=btdownloadheadless 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ btdownloadgui == -N ]]
+compdef:134> [[ btdownloadgui == -p ]]
+compdef:136> [[ btdownloadgui == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btdownloadgui == *=* ]]
+compdef:159> cmd=btdownloadgui 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ btlaunchmany == -N ]]
+compdef:134> [[ btlaunchmany == -p ]]
+compdef:136> [[ btlaunchmany == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btlaunchmany == *=* ]]
+compdef:159> cmd=btlaunchmany 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ btlaunchmanycurses == -N ]]
+compdef:134> [[ btlaunchmanycurses == -p ]]
+compdef:136> [[ btlaunchmanycurses == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btlaunchmanycurses == *=* ]]
+compdef:159> cmd=btlaunchmanycurses 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ bttrack == -N ]]
+compdef:134> [[ bttrack == -p ]]
+compdef:136> [[ bttrack == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bttrack == *=* ]]
+compdef:159> cmd=bttrack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ btshowmetainfo == -N ]]
+compdef:134> [[ btshowmetainfo == -p ]]
+compdef:136> [[ btshowmetainfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btshowmetainfo == *=* ]]
+compdef:159> cmd=btshowmetainfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ btreannounce == -N ]]
+compdef:134> [[ btreannounce == -p ]]
+compdef:136> [[ btreannounce == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btreannounce == *=* ]]
+compdef:159> cmd=btreannounce 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ btmakemetafile == -N ]]
+compdef:134> [[ btmakemetafile == -p ]]
+compdef:136> [[ btmakemetafile == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btmakemetafile == *=* ]]
+compdef:159> cmd=btmakemetafile 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ btrename == -N ]]
+compdef:134> [[ btrename == -p ]]
+compdef:136> [[ btrename == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btrename == *=* ]]
+compdef:159> cmd=btrename 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bogofilter
+compinit:492> _i_name=_bogofilter 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bogoutil == -[pPkK](n|) ]]
+compinit:503> compdef -na _bogofilter bogoutil bogotune bogofilter
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bogofilter == *=* ]]
+compdef:79> func=_bogofilter 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bogofilter
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ bogoutil == -N ]]
+compdef:134> [[ bogoutil == -p ]]
+compdef:136> [[ bogoutil == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bogoutil == *=* ]]
+compdef:159> cmd=bogoutil 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bogofilter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ bogotune == -N ]]
+compdef:134> [[ bogotune == -p ]]
+compdef:136> [[ bogotune == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bogotune == *=* ]]
+compdef:159> cmd=bogotune 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bogofilter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ bogofilter == -N ]]
+compdef:134> [[ bogofilter == -p ]]
+compdef:136> [[ bogofilter == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bogofilter == *=* ]]
+compdef:159> cmd=bogofilter 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bogofilter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_brace_parameter
+compinit:492> _i_name=_brace_parameter 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -brace-parameter- == -[pPkK](n|) ]]
+compinit:503> compdef -na _brace_parameter -brace-parameter-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _brace_parameter == *=* ]]
+compdef:79> func=_brace_parameter 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _brace_parameter
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -brace-parameter- == -N ]]
+compdef:134> [[ -brace-parameter- == -p ]]
+compdef:136> [[ -brace-parameter- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -brace-parameter- == *=* ]]
+compdef:159> cmd=-brace-parameter- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_brace_parameter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_brctl
+compinit:492> _i_name=_brctl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ brctl == -[pPkK](n|) ]]
+compinit:503> compdef -na _brctl brctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _brctl == *=* ]]
+compdef:79> func=_brctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _brctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ brctl == -N ]]
+compdef:134> [[ brctl == -p ]]
+compdef:136> [[ brctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ brctl == *=* ]]
+compdef:159> cmd=brctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_brctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bsd_pkg
+compinit:492> _i_name=_bsd_pkg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pkg_add == -[pPkK](n|) ]]
+compinit:503> compdef -na _bsd_pkg pkg_add pkg_create pkg_delete pkg_info
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bsd_pkg == *=* ]]
+compdef:79> func=_bsd_pkg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bsd_pkg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ pkg_add == -N ]]
+compdef:134> [[ pkg_add == -p ]]
+compdef:136> [[ pkg_add == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_add == *=* ]]
+compdef:159> cmd=pkg_add 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pkg_create == -N ]]
+compdef:134> [[ pkg_create == -p ]]
+compdef:136> [[ pkg_create == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_create == *=* ]]
+compdef:159> cmd=pkg_create 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ pkg_delete == -N ]]
+compdef:134> [[ pkg_delete == -p ]]
+compdef:136> [[ pkg_delete == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_delete == *=* ]]
+compdef:159> cmd=pkg_delete 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pkg_info == -N ]]
+compdef:134> [[ pkg_info == -p ]]
+compdef:136> [[ pkg_info == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_info == *=* ]]
+compdef:159> cmd=pkg_info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_btrfs
+compinit:492> _i_name=_btrfs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ btrfs == -[pPkK](n|) ]]
+compinit:503> compdef -na _btrfs btrfs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _btrfs == *=* ]]
+compdef:79> func=_btrfs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _btrfs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ btrfs == -N ]]
+compdef:134> [[ btrfs == -p ]]
+compdef:136> [[ btrfs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btrfs == *=* ]]
+compdef:159> cmd=btrfs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_btrfs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bts
+compinit:492> _i_name=_bts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bts == -[pPkK](n|) ]]
+compinit:503> compdef -na _bts bts
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bts == *=* ]]
+compdef:79> func=_bts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bts == -N ]]
+compdef:134> [[ bts == -p ]]
+compdef:136> [[ bts == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bts == *=* ]]
+compdef:159> cmd=bts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bug
+compinit:492> _i_name=_bug 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bug == -[pPkK](n|) ]]
+compinit:503> compdef -na _bug bug reportbug querybts
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bug == *=* ]]
+compdef:79> func=_bug 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bug
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ bug == -N ]]
+compdef:134> [[ bug == -p ]]
+compdef:136> [[ bug == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bug == *=* ]]
+compdef:159> cmd=bug 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bug 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ reportbug == -N ]]
+compdef:134> [[ reportbug == -p ]]
+compdef:136> [[ reportbug == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ reportbug == *=* ]]
+compdef:159> cmd=reportbug 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bug 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ querybts == -N ]]
+compdef:134> [[ querybts == -p ]]
+compdef:136> [[ querybts == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ querybts == *=* ]]
+compdef:159> cmd=querybts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bug 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_builtin
+compinit:492> _i_name=_builtin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ builtin == -[pPkK](n|) ]]
+compinit:503> compdef -na _builtin builtin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _builtin == *=* ]]
+compdef:79> func=_builtin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _builtin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ builtin == -N ]]
+compdef:134> [[ builtin == -p ]]
+compdef:136> [[ builtin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ builtin == *=* ]]
+compdef:159> cmd=builtin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_builtin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bzip2
+compinit:492> _i_name=_bzip2 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bzip2 == -[pPkK](n|) ]]
+compinit:503> compdef -na _bzip2 bzip2 bunzip2 'bzcat=bunzip2' bzip2recover '-redirect-,<,bunzip2=bunzip2' '-redirect-,>,bzip2=bunzip2' '-redirect-,<,bzip2=bzip2'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bzip2 == *=* ]]
+compdef:79> func=_bzip2 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bzip2
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ bzip2 == -N ]]
+compdef:134> [[ bzip2 == -p ]]
+compdef:136> [[ bzip2 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bzip2 == *=* ]]
+compdef:159> cmd=bzip2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ bunzip2 == -N ]]
+compdef:134> [[ bunzip2 == -p ]]
+compdef:136> [[ bunzip2 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bunzip2 == *=* ]]
+compdef:159> cmd=bunzip2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 'bzcat=bunzip2' == -N ]]
+compdef:134> [[ 'bzcat=bunzip2' == -p ]]
+compdef:136> [[ 'bzcat=bunzip2' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'bzcat=bunzip2' == *=* ]]
+compdef:156> cmd=bzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bunzip2 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ bzip2recover == -N ]]
+compdef:134> [[ bzip2recover == -p ]]
+compdef:136> [[ bzip2recover == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bzip2recover == *=* ]]
+compdef:159> cmd=bzip2recover 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,<,bunzip2=bunzip2' == -N ]]
+compdef:134> [[ '-redirect-,<,bunzip2=bunzip2' == -p ]]
+compdef:136> [[ '-redirect-,<,bunzip2=bunzip2' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,bunzip2=bunzip2' == *=* ]]
+compdef:156> cmd='-redirect-,<,bunzip2' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bunzip2 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ '-redirect-,>,bzip2=bunzip2' == -N ]]
+compdef:134> [[ '-redirect-,>,bzip2=bunzip2' == -p ]]
+compdef:136> [[ '-redirect-,>,bzip2=bunzip2' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,bzip2=bunzip2' == *=* ]]
+compdef:156> cmd='-redirect-,>,bzip2' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bunzip2 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-redirect-,<,bzip2=bzip2' == -N ]]
+compdef:134> [[ '-redirect-,<,bzip2=bzip2' == -p ]]
+compdef:136> [[ '-redirect-,<,bzip2=bzip2' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,bzip2=bzip2' == *=* ]]
+compdef:156> cmd='-redirect-,<,bzip2' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bzip2 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_bzr
+compinit:492> _i_name=_bzr 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bzr == -[pPkK](n|) ]]
+compinit:503> compdef -na _bzr bzr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bzr == *=* ]]
+compdef:79> func=_bzr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bzr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bzr == -N ]]
+compdef:134> [[ bzr == -p ]]
+compdef:136> [[ bzr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bzr == *=* ]]
+compdef:159> cmd=bzr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cache_invalid
+compinit:492> _i_name=_cache_invalid 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _cache_invalid
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cal
+compinit:492> _i_name=_cal 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cal == -[pPkK](n|) ]]
+compinit:503> compdef -na _cal cal ncal
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cal == *=* ]]
+compdef:79> func=_cal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cal == -N ]]
+compdef:134> [[ cal == -p ]]
+compdef:136> [[ cal == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cal == *=* ]]
+compdef:159> cmd=cal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ncal == -N ]]
+compdef:134> [[ ncal == -p ]]
+compdef:136> [[ ncal == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ncal == *=* ]]
+compdef:159> cmd=ncal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_calendar
+compinit:492> _i_name=_calendar 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ calendar == -[pPkK](n|) ]]
+compinit:503> compdef -na _calendar calendar
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _calendar == *=* ]]
+compdef:79> func=_calendar 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _calendar
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ calendar == -N ]]
+compdef:134> [[ calendar == -p ]]
+compdef:136> [[ calendar == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ calendar == *=* ]]
+compdef:159> cmd=calendar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_calendar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_call_function
+compinit:492> _i_name=_call_function 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _call_function
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_call_program
+compinit:492> _i_name=_call_program 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz +X _call_program
+compinit:508> [[ +X != \ # ]]
+compinit:508> _compautos[${_i_name}]=+X 
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_canonical_paths
+compinit:492> _i_name=_canonical_paths 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _canonical_paths
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cat
+compinit:492> _i_name=_cat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cat == -[pPkK](n|) ]]
+compinit:503> compdef -na _cat cat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cat == *=* ]]
+compdef:79> func=_cat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cat == -N ]]
+compdef:134> [[ cat == -p ]]
+compdef:136> [[ cat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cat == *=* ]]
+compdef:159> cmd=cat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ccal
+compinit:492> _i_name=_ccal 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ccal == -[pPkK](n|) ]]
+compinit:503> compdef -na _ccal ccal
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ccal == *=* ]]
+compdef:79> func=_ccal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ccal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ccal == -N ]]
+compdef:134> [[ ccal == -p ]]
+compdef:136> [[ ccal == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ccal == *=* ]]
+compdef:159> cmd=ccal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ccal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cd
+compinit:492> _i_name=_cd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cd == -[pPkK](n|) ]]
+compinit:503> compdef -na _cd cd chdir pushd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cd == *=* ]]
+compdef:79> func=_cd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ cd == -N ]]
+compdef:134> [[ cd == -p ]]
+compdef:136> [[ cd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cd == *=* ]]
+compdef:159> cmd=cd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ chdir == -N ]]
+compdef:134> [[ chdir == -p ]]
+compdef:136> [[ chdir == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chdir == *=* ]]
+compdef:159> cmd=chdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pushd == -N ]]
+compdef:134> [[ pushd == -p ]]
+compdef:136> [[ pushd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pushd == *=* ]]
+compdef:159> cmd=pushd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cdbs-edit-patch
+compinit:492> _i_name=_cdbs-edit-patch 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cdbs-edit-patch == -[pPkK](n|) ]]
+compinit:503> compdef -na _cdbs-edit-patch cdbs-edit-patch
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdbs-edit-patch == *=* ]]
+compdef:79> func=_cdbs-edit-patch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdbs-edit-patch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdbs-edit-patch == -N ]]
+compdef:134> [[ cdbs-edit-patch == -p ]]
+compdef:136> [[ cdbs-edit-patch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdbs-edit-patch == *=* ]]
+compdef:159> cmd=cdbs-edit-patch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdbs-edit-patch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cdcd
+compinit:492> _i_name=_cdcd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cdcd == -[pPkK](n|) ]]
+compinit:503> compdef -na _cdcd cdcd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdcd == *=* ]]
+compdef:79> func=_cdcd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdcd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdcd == -N ]]
+compdef:134> [[ cdcd == -p ]]
+compdef:136> [[ cdcd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdcd == *=* ]]
+compdef:159> cmd=cdcd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdcd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cdr
+compinit:492> _i_name=_cdr 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cdr == -[pPkK](n|) ]]
+compinit:503> compdef -na _cdr cdr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdr == *=* ]]
+compdef:79> func=_cdr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdr == -N ]]
+compdef:134> [[ cdr == -p ]]
+compdef:136> [[ cdr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdr == *=* ]]
+compdef:159> cmd=cdr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cdrdao
+compinit:492> _i_name=_cdrdao 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cdrdao == -[pPkK](n|) ]]
+compinit:503> compdef -na _cdrdao cdrdao
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdrdao == *=* ]]
+compdef:79> func=_cdrdao 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdrdao
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdrdao == -N ]]
+compdef:134> [[ cdrdao == -p ]]
+compdef:136> [[ cdrdao == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdrdao == *=* ]]
+compdef:159> cmd=cdrdao 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdrdao 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cdrecord
+compinit:492> _i_name=_cdrecord 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cdrecord == -[pPkK](n|) ]]
+compinit:503> compdef -na _cdrecord cdrecord wodim
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdrecord == *=* ]]
+compdef:79> func=_cdrecord 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdrecord
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cdrecord == -N ]]
+compdef:134> [[ cdrecord == -p ]]
+compdef:136> [[ cdrecord == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdrecord == *=* ]]
+compdef:159> cmd=cdrecord 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdrecord 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ wodim == -N ]]
+compdef:134> [[ wodim == -p ]]
+compdef:136> [[ wodim == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wodim == *=* ]]
+compdef:159> cmd=wodim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdrecord 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_chflags
+compinit:492> _i_name=_chflags 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ chflags == -[pPkK](n|) ]]
+compinit:503> compdef -na _chflags chflags
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chflags == *=* ]]
+compdef:79> func=_chflags 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chflags
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ chflags == -N ]]
+compdef:134> [[ chflags == -p ]]
+compdef:136> [[ chflags == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chflags == *=* ]]
+compdef:159> cmd=chflags 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chflags 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_chkconfig
+compinit:492> _i_name=_chkconfig 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ chkconfig == -[pPkK](n|) ]]
+compinit:503> compdef -na _chkconfig chkconfig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chkconfig == *=* ]]
+compdef:79> func=_chkconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chkconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ chkconfig == -N ]]
+compdef:134> [[ chkconfig == -p ]]
+compdef:136> [[ chkconfig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chkconfig == *=* ]]
+compdef:159> cmd=chkconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chkconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_chmod
+compinit:492> _i_name=_chmod 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ chmod == -[pPkK](n|) ]]
+compinit:503> compdef -na _chmod chmod
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chmod == *=* ]]
+compdef:79> func=_chmod 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chmod
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ chmod == -N ]]
+compdef:134> [[ chmod == -p ]]
+compdef:136> [[ chmod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chmod == *=* ]]
+compdef:159> cmd=chmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chmod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_chown
+compinit:492> _i_name=_chown 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ chown == -[pPkK](n|) ]]
+compinit:503> compdef -na _chown chown chgrp
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chown == *=* ]]
+compdef:79> func=_chown 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chown
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ chown == -N ]]
+compdef:134> [[ chown == -p ]]
+compdef:136> [[ chown == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chown == *=* ]]
+compdef:159> cmd=chown 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chown 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ chgrp == -N ]]
+compdef:134> [[ chgrp == -p ]]
+compdef:136> [[ chgrp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chgrp == *=* ]]
+compdef:159> cmd=chgrp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chown 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_chrt
+compinit:492> _i_name=_chrt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ chrt == -[pPkK](n|) ]]
+compinit:503> compdef -na _chrt chrt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chrt == *=* ]]
+compdef:79> func=_chrt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chrt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ chrt == -N ]]
+compdef:134> [[ chrt == -p ]]
+compdef:136> [[ chrt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chrt == *=* ]]
+compdef:159> cmd=chrt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chrt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_clay
+compinit:492> _i_name=_clay 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ clay == -[pPkK](n|) ]]
+compinit:503> compdef -na _clay clay
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _clay == *=* ]]
+compdef:79> func=_clay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _clay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ clay == -N ]]
+compdef:134> [[ clay == -p ]]
+compdef:136> [[ clay == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clay == *=* ]]
+compdef:159> cmd=clay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_clay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_combination
+compinit:492> _i_name=_combination 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _combination
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_comm
+compinit:492> _i_name=_comm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ comm == -[pPkK](n|) ]]
+compinit:503> compdef -na _comm comm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _comm == *=* ]]
+compdef:79> func=_comm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _comm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ comm == -N ]]
+compdef:134> [[ comm == -p ]]
+compdef:136> [[ comm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ comm == *=* ]]
+compdef:159> cmd=comm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_comm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_command
+compinit:492> _i_name=_command 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ command == -[pPkK](n|) ]]
+compinit:503> compdef -na _command command
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _command == *=* ]]
+compdef:79> func=_command 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _command
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ command == -N ]]
+compdef:134> [[ command == -p ]]
+compdef:136> [[ command == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ command == *=* ]]
+compdef:159> cmd=command 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_command 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_command_names
+compinit:492> _i_name=_command_names 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _command_names
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_comp_locale
+compinit:492> _i_name=_comp_locale 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _comp_locale
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_compdef
+compinit:492> _i_name=_compdef 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ compdef == -[pPkK](n|) ]]
+compinit:503> compdef -na _compdef compdef
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _compdef == *=* ]]
+compdef:79> func=_compdef 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _compdef
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ compdef == -N ]]
+compdef:134> [[ compdef == -p ]]
+compdef:136> [[ compdef == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ compdef == *=* ]]
+compdef:159> cmd=compdef 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compdef 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_complete
+compinit:492> _i_name=_complete 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _complete
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_complete_debug
+compinit:492> _i_name=_complete_debug 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _complete_debug complete-word '\C-x?'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _complete_debug == *=* ]]
+compdef:79> func=_complete_debug 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _complete_debug
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word == .* ]]
+compdef:114> [[ complete-word == menu-select ]]
+compdef:115> zle -C _complete_debug .complete-word _complete_debug
+compdef:117> shift
+compdef:120> i=\C-x?
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-x?'
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-x?' _complete_debug
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_complete_help
+compinit:492> _i_name=_complete_help 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _complete_help complete-word '\C-xh'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _complete_help == *=* ]]
+compdef:79> func=_complete_help 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _complete_help
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word == .* ]]
+compdef:114> [[ complete-word == menu-select ]]
+compdef:115> zle -C _complete_help .complete-word _complete_help
+compdef:117> shift
+compdef:120> i=\C-xh
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xh'
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-xh' _complete_help
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_complete_help_generic
+compinit:492> _i_name=_complete_help_generic 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _complete_help_generic
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_complete_tag
+compinit:492> _i_name=_complete_tag 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _complete_tag complete-word '\C-xt'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _complete_tag == *=* ]]
+compdef:79> func=_complete_tag 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _complete_tag
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word == .* ]]
+compdef:114> [[ complete-word == menu-select ]]
+compdef:115> zle -C _complete_tag .complete-word _complete_tag
+compdef:117> shift
+compdef:120> i=\C-xt
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xt'
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-xt' _complete_tag
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_compress
+compinit:492> _i_name=_compress 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ compress == -[pPkK](n|) ]]
+compinit:503> compdef -na _compress compress uncompress '-redirect-,<,uncompress=uncompress' '-redirect-,>,compress=uncompress' '-redirect-,<,compress=compress'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _compress == *=* ]]
+compdef:79> func=_compress 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _compress
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ compress == -N ]]
+compdef:134> [[ compress == -p ]]
+compdef:136> [[ compress == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ compress == *=* ]]
+compdef:159> cmd=compress 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ uncompress == -N ]]
+compdef:134> [[ uncompress == -p ]]
+compdef:136> [[ uncompress == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uncompress == *=* ]]
+compdef:159> cmd=uncompress 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,<,uncompress=uncompress' == -N ]]
+compdef:134> [[ '-redirect-,<,uncompress=uncompress' == -p ]]
+compdef:136> [[ '-redirect-,<,uncompress=uncompress' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,uncompress=uncompress' == *=* ]]
+compdef:156> cmd='-redirect-,<,uncompress' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=uncompress 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ '-redirect-,>,compress=uncompress' == -N ]]
+compdef:134> [[ '-redirect-,>,compress=uncompress' == -p ]]
+compdef:136> [[ '-redirect-,>,compress=uncompress' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,compress=uncompress' == *=* ]]
+compdef:156> cmd='-redirect-,>,compress' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=uncompress 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-redirect-,<,compress=compress' == -N ]]
+compdef:134> [[ '-redirect-,<,compress=compress' == -p ]]
+compdef:136> [[ '-redirect-,<,compress=compress' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,compress=compress' == *=* ]]
+compdef:156> cmd='-redirect-,<,compress' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=compress 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_condition
+compinit:492> _i_name=_condition 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -condition- == -[pPkK](n|) ]]
+compinit:503> compdef -na _condition -condition-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _condition == *=* ]]
+compdef:79> func=_condition 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _condition
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -condition- == -N ]]
+compdef:134> [[ -condition- == -p ]]
+compdef:136> [[ -condition- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -condition- == *=* ]]
+compdef:159> cmd=-condition- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_condition 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_configure
+compinit:492> _i_name=_configure 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ configure == -[pPkK](n|) ]]
+compinit:503> compdef -na _configure configure config.status
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _configure == *=* ]]
+compdef:79> func=_configure 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _configure
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ configure == -N ]]
+compdef:134> [[ configure == -p ]]
+compdef:136> [[ configure == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ configure == *=* ]]
+compdef:159> cmd=configure 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_configure 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ config.status == -N ]]
+compdef:134> [[ config.status == -p ]]
+compdef:136> [[ config.status == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ config.status == *=* ]]
+compdef:159> cmd=config.status 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_configure 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_coreadm
+compinit:492> _i_name=_coreadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ coreadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _coreadm coreadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _coreadm == *=* ]]
+compdef:79> func=_coreadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _coreadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ coreadm == -N ]]
+compdef:134> [[ coreadm == -p ]]
+compdef:136> [[ coreadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ coreadm == *=* ]]
+compdef:159> cmd=coreadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_coreadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_correct
+compinit:492> _i_name=_correct 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _correct
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_correct_filename
+compinit:492> _i_name=_correct_filename 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _correct_filename complete-word '\C-xC'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _correct_filename == *=* ]]
+compdef:79> func=_correct_filename 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _correct_filename
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word == .* ]]
+compdef:114> [[ complete-word == menu-select ]]
+compdef:115> zle -C _correct_filename .complete-word _correct_filename
+compdef:117> shift
+compdef:120> i=\C-xC
+compdef:121> [[ -n yes ]]
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:122> bindkey '\C-xC'
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-xC' _correct_filename
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_correct_word
+compinit:492> _i_name=_correct_word 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _correct_word complete-word '\C-xc'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _correct_word == *=* ]]
+compdef:79> func=_correct_word 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _correct_word
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word == .* ]]
+compdef:114> [[ complete-word == menu-select ]]
+compdef:115> zle -C _correct_word .complete-word _correct_word
+compdef:117> shift
+compdef:120> i=\C-xc
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xc'
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-xc' _correct_word
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cowsay
+compinit:492> _i_name=_cowsay 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cowsay == -[pPkK](n|) ]]
+compinit:503> compdef -na _cowsay cowsay cowthink
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cowsay == *=* ]]
+compdef:79> func=_cowsay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cowsay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cowsay == -N ]]
+compdef:134> [[ cowsay == -p ]]
+compdef:136> [[ cowsay == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cowsay == *=* ]]
+compdef:159> cmd=cowsay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cowsay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cowthink == -N ]]
+compdef:134> [[ cowthink == -p ]]
+compdef:136> [[ cowthink == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cowthink == *=* ]]
+compdef:159> cmd=cowthink 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cowsay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cp
+compinit:492> _i_name=_cp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cp == -[pPkK](n|) ]]
+compinit:503> compdef -na _cp cp
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cp == *=* ]]
+compdef:79> func=_cp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cp == -N ]]
+compdef:134> [[ cp == -p ]]
+compdef:136> [[ cp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cp == *=* ]]
+compdef:159> cmd=cp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cpio
+compinit:492> _i_name=_cpio 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cpio == -[pPkK](n|) ]]
+compinit:503> compdef -na _cpio cpio
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cpio == *=* ]]
+compdef:79> func=_cpio 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cpio
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cpio == -N ]]
+compdef:134> [[ cpio == -p ]]
+compdef:136> [[ cpio == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cpio == *=* ]]
+compdef:159> cmd=cpio 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cpio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cplay
+compinit:492> _i_name=_cplay 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cplay == -[pPkK](n|) ]]
+compinit:503> compdef -na _cplay cplay
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cplay == *=* ]]
+compdef:79> func=_cplay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cplay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cplay == -N ]]
+compdef:134> [[ cplay == -p ]]
+compdef:136> [[ cplay == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cplay == *=* ]]
+compdef:159> cmd=cplay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cplay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cryptsetup
+compinit:492> _i_name=_cryptsetup 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cryptsetup == -[pPkK](n|) ]]
+compinit:503> compdef -na _cryptsetup cryptsetup
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cryptsetup == *=* ]]
+compdef:79> func=_cryptsetup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cryptsetup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cryptsetup == -N ]]
+compdef:134> [[ cryptsetup == -p ]]
+compdef:136> [[ cryptsetup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cryptsetup == *=* ]]
+compdef:159> cmd=cryptsetup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cryptsetup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cssh
+compinit:492> _i_name=_cssh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cssh == -[pPkK](n|) ]]
+compinit:503> compdef -na _cssh cssh crsh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cssh == *=* ]]
+compdef:79> func=_cssh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cssh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cssh == -N ]]
+compdef:134> [[ cssh == -p ]]
+compdef:136> [[ cssh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cssh == *=* ]]
+compdef:159> cmd=cssh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ crsh == -N ]]
+compdef:134> [[ crsh == -p ]]
+compdef:136> [[ crsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ crsh == *=* ]]
+compdef:159> cmd=crsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_csup
+compinit:492> _i_name=_csup 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ csup == -[pPkK](n|) ]]
+compinit:503> compdef -na _csup csup
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _csup == *=* ]]
+compdef:79> func=_csup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _csup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ csup == -N ]]
+compdef:134> [[ csup == -p ]]
+compdef:136> [[ csup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ csup == *=* ]]
+compdef:159> cmd=csup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_csup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ctags_tags
+compinit:492> _i_name=_ctags_tags 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _ctags_tags
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cut
+compinit:492> _i_name=_cut 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cut == -[pPkK](n|) ]]
+compinit:503> compdef -na _cut cut
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cut == *=* ]]
+compdef:79> func=_cut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cut == -N ]]
+compdef:134> [[ cut == -p ]]
+compdef:136> [[ cut == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cut == *=* ]]
+compdef:159> cmd=cut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cvs
+compinit:492> _i_name=_cvs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cvs == -[pPkK](n|) ]]
+compinit:503> compdef -na _cvs cvs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cvs == *=* ]]
+compdef:79> func=_cvs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cvs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cvs == -N ]]
+compdef:134> [[ cvs == -p ]]
+compdef:136> [[ cvs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cvs == *=* ]]
+compdef:159> cmd=cvs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cvs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cvsup
+compinit:492> _i_name=_cvsup 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cvsup == -[pPkK](n|) ]]
+compinit:503> compdef -na _cvsup cvsup
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cvsup == *=* ]]
+compdef:79> func=_cvsup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cvsup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cvsup == -N ]]
+compdef:134> [[ cvsup == -p ]]
+compdef:136> [[ cvsup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cvsup == *=* ]]
+compdef:159> cmd=cvsup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cvsup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cygcheck
+compinit:492> _i_name=_cygcheck 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cygcheck == -[pPkK](n|) ]]
+compinit:503> compdef -na _cygcheck cygcheck cygcheck.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygcheck == *=* ]]
+compdef:79> func=_cygcheck 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygcheck
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygcheck == -N ]]
+compdef:134> [[ cygcheck == -p ]]
+compdef:136> [[ cygcheck == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygcheck == *=* ]]
+compdef:159> cmd=cygcheck 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygcheck 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygcheck.exe == -N ]]
+compdef:134> [[ cygcheck.exe == -p ]]
+compdef:136> [[ cygcheck.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygcheck.exe == *=* ]]
+compdef:159> cmd=cygcheck.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygcheck 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cygpath
+compinit:492> _i_name=_cygpath 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cygpath == -[pPkK](n|) ]]
+compinit:503> compdef -na _cygpath cygpath cygpath.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygpath == *=* ]]
+compdef:79> func=_cygpath 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygpath
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygpath == -N ]]
+compdef:134> [[ cygpath == -p ]]
+compdef:136> [[ cygpath == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygpath == *=* ]]
+compdef:159> cmd=cygpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygpath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygpath.exe == -N ]]
+compdef:134> [[ cygpath.exe == -p ]]
+compdef:136> [[ cygpath.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygpath.exe == *=* ]]
+compdef:159> cmd=cygpath.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygpath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cygrunsrv
+compinit:492> _i_name=_cygrunsrv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cygrunsrv == -[pPkK](n|) ]]
+compinit:503> compdef -na _cygrunsrv cygrunsrv cygrunsrv.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygrunsrv == *=* ]]
+compdef:79> func=_cygrunsrv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygrunsrv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygrunsrv == -N ]]
+compdef:134> [[ cygrunsrv == -p ]]
+compdef:136> [[ cygrunsrv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygrunsrv == *=* ]]
+compdef:159> cmd=cygrunsrv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygrunsrv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygrunsrv.exe == -N ]]
+compdef:134> [[ cygrunsrv.exe == -p ]]
+compdef:136> [[ cygrunsrv.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygrunsrv.exe == *=* ]]
+compdef:159> cmd=cygrunsrv.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygrunsrv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cygserver
+compinit:492> _i_name=_cygserver 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cygserver == -[pPkK](n|) ]]
+compinit:503> compdef -na _cygserver cygserver cygserver.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygserver == *=* ]]
+compdef:79> func=_cygserver 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygserver
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygserver == -N ]]
+compdef:134> [[ cygserver == -p ]]
+compdef:136> [[ cygserver == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygserver == *=* ]]
+compdef:159> cmd=cygserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygserver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygserver.exe == -N ]]
+compdef:134> [[ cygserver.exe == -p ]]
+compdef:136> [[ cygserver.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygserver.exe == *=* ]]
+compdef:159> cmd=cygserver.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygserver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_cygstart
+compinit:492> _i_name=_cygstart 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ cygstart == -[pPkK](n|) ]]
+compinit:503> compdef -na _cygstart cygstart cygstart.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygstart == *=* ]]
+compdef:79> func=_cygstart 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygstart
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygstart == -N ]]
+compdef:134> [[ cygstart == -p ]]
+compdef:136> [[ cygstart == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygstart == *=* ]]
+compdef:159> cmd=cygstart 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygstart 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygstart.exe == -N ]]
+compdef:134> [[ cygstart.exe == -p ]]
+compdef:136> [[ cygstart.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygstart.exe == *=* ]]
+compdef:159> cmd=cygstart.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygstart 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dak
+compinit:492> _i_name=_dak 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dak == -[pPkK](n|) ]]
+compinit:503> compdef -na _dak dak
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dak == *=* ]]
+compdef:79> func=_dak 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dak
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dak == -N ]]
+compdef:134> [[ dak == -p ]]
+compdef:136> [[ dak == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dak == *=* ]]
+compdef:159> cmd=dak 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dak 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_darcs
+compinit:492> _i_name=_darcs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ darcs == -[pPkK](n|) ]]
+compinit:503> compdef -na _darcs darcs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _darcs == *=* ]]
+compdef:79> func=_darcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _darcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ darcs == -N ]]
+compdef:134> [[ darcs == -p ]]
+compdef:136> [[ darcs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ darcs == *=* ]]
+compdef:159> cmd=darcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_darcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_date
+compinit:492> _i_name=_date 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ date == -[pPkK](n|) ]]
+compinit:503> compdef -na _date date
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _date == *=* ]]
+compdef:79> func=_date 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _date
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ date == -N ]]
+compdef:134> [[ date == -p ]]
+compdef:136> [[ date == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ date == *=* ]]
+compdef:159> cmd=date 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_date 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dbus
+compinit:492> _i_name=_dbus 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dbus-send == -[pPkK](n|) ]]
+compinit:503> compdef -na _dbus dbus-send dbus-monitor
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dbus == *=* ]]
+compdef:79> func=_dbus 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dbus
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dbus-send == -N ]]
+compdef:134> [[ dbus-send == -p ]]
+compdef:136> [[ dbus-send == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dbus-send == *=* ]]
+compdef:159> cmd=dbus-send 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dbus 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dbus-monitor == -N ]]
+compdef:134> [[ dbus-monitor == -p ]]
+compdef:136> [[ dbus-monitor == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dbus-monitor == *=* ]]
+compdef:159> cmd=dbus-monitor 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dbus 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dchroot
+compinit:492> _i_name=_dchroot 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dchroot == -[pPkK](n|) ]]
+compinit:503> compdef -na _dchroot dchroot
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dchroot == *=* ]]
+compdef:79> func=_dchroot 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dchroot
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dchroot == -N ]]
+compdef:134> [[ dchroot == -p ]]
+compdef:136> [[ dchroot == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dchroot == *=* ]]
+compdef:159> cmd=dchroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dchroot 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dchroot-dsa
+compinit:492> _i_name=_dchroot-dsa 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dchroot-dsa == -[pPkK](n|) ]]
+compinit:503> compdef -na _dchroot-dsa dchroot-dsa
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dchroot-dsa == *=* ]]
+compdef:79> func=_dchroot-dsa 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dchroot-dsa
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dchroot-dsa == -N ]]
+compdef:134> [[ dchroot-dsa == -p ]]
+compdef:136> [[ dchroot-dsa == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dchroot-dsa == *=* ]]
+compdef:159> cmd=dchroot-dsa 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dchroot-dsa 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dcop
+compinit:492> _i_name=_dcop 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dcop == -[pPkK](n|) ]]
+compinit:503> compdef -na _dcop dcop dcopstart dcopfind dcopref dcopclient dcopobject
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dcop == *=* ]]
+compdef:79> func=_dcop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dcop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ dcop == -N ]]
+compdef:134> [[ dcop == -p ]]
+compdef:136> [[ dcop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcop == *=* ]]
+compdef:159> cmd=dcop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ dcopstart == -N ]]
+compdef:134> [[ dcopstart == -p ]]
+compdef:136> [[ dcopstart == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopstart == *=* ]]
+compdef:159> cmd=dcopstart 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ dcopfind == -N ]]
+compdef:134> [[ dcopfind == -p ]]
+compdef:136> [[ dcopfind == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopfind == *=* ]]
+compdef:159> cmd=dcopfind 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dcopref == -N ]]
+compdef:134> [[ dcopref == -p ]]
+compdef:136> [[ dcopref == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopref == *=* ]]
+compdef:159> cmd=dcopref 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ dcopclient == -N ]]
+compdef:134> [[ dcopclient == -p ]]
+compdef:136> [[ dcopclient == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopclient == *=* ]]
+compdef:159> cmd=dcopclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dcopobject == -N ]]
+compdef:134> [[ dcopobject == -p ]]
+compdef:136> [[ dcopobject == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopobject == *=* ]]
+compdef:159> cmd=dcopobject 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dcut
+compinit:492> _i_name=_dcut 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dcut == -[pPkK](n|) ]]
+compinit:503> compdef -na _dcut dcut
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dcut == *=* ]]
+compdef:79> func=_dcut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dcut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dcut == -N ]]
+compdef:134> [[ dcut == -p ]]
+compdef:136> [[ dcut == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcut == *=* ]]
+compdef:159> cmd=dcut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dd
+compinit:492> _i_name=_dd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dd == -[pPkK](n|) ]]
+compinit:503> compdef -na _dd dd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dd == *=* ]]
+compdef:79> func=_dd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dd == -N ]]
+compdef:134> [[ dd == -p ]]
+compdef:136> [[ dd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dd == *=* ]]
+compdef:159> cmd=dd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_deb_packages
+compinit:492> _i_name=_deb_packages 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _deb_packages
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_debchange
+compinit:492> _i_name=_debchange 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ debchange == -[pPkK](n|) ]]
+compinit:503> compdef -na _debchange debchange 'dch=debchange'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debchange == *=* ]]
+compdef:79> func=_debchange 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debchange
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ debchange == -N ]]
+compdef:134> [[ debchange == -p ]]
+compdef:136> [[ debchange == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debchange == *=* ]]
+compdef:159> cmd=debchange 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debchange 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'dch=debchange' == -N ]]
+compdef:134> [[ 'dch=debchange' == -p ]]
+compdef:136> [[ 'dch=debchange' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'dch=debchange' == *=* ]]
+compdef:156> cmd=dch 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debchange 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=debchange 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_debdiff
+compinit:492> _i_name=_debdiff 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ debdiff == -[pPkK](n|) ]]
+compinit:503> compdef -na _debdiff debdiff
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debdiff == *=* ]]
+compdef:79> func=_debdiff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debdiff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ debdiff == -N ]]
+compdef:134> [[ debdiff == -p ]]
+compdef:136> [[ debdiff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debdiff == *=* ]]
+compdef:159> cmd=debdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debdiff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_debfoster
+compinit:492> _i_name=_debfoster 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ debfoster == -[pPkK](n|) ]]
+compinit:503> compdef -na _debfoster debfoster
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debfoster == *=* ]]
+compdef:79> func=_debfoster 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debfoster
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ debfoster == -N ]]
+compdef:134> [[ debfoster == -p ]]
+compdef:136> [[ debfoster == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debfoster == *=* ]]
+compdef:159> cmd=debfoster 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debfoster 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_debsign
+compinit:492> _i_name=_debsign 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ debsign == -[pPkK](n|) ]]
+compinit:503> compdef -na _debsign debsign
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debsign == *=* ]]
+compdef:79> func=_debsign 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debsign
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ debsign == -N ]]
+compdef:134> [[ debsign == -p ]]
+compdef:136> [[ debsign == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debsign == *=* ]]
+compdef:159> cmd=debsign 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debsign 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_default
+compinit:492> _i_name=_default 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _default -default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _default == *=* ]]
+compdef:79> func=_default 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _default
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -default- == -N ]]
+compdef:134> [[ -default- == -p ]]
+compdef:136> [[ -default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -default- == *=* ]]
+compdef:159> cmd=-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_default 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_defaults
+compinit:492> _i_name=_defaults 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ defaults == -[pPkK](n|) ]]
+compinit:503> compdef -na _defaults defaults
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _defaults == *=* ]]
+compdef:79> func=_defaults 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _defaults
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ defaults == -N ]]
+compdef:134> [[ defaults == -p ]]
+compdef:136> [[ defaults == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ defaults == *=* ]]
+compdef:159> cmd=defaults 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_defaults 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_delimiters
+compinit:492> _i_name=_delimiters 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _delimiters
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_describe
+compinit:492> _i_name=_describe 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _describe
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_description
+compinit:492> _i_name=_description 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _description
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_devtodo
+compinit:492> _i_name=_devtodo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ devtodo == -[pPkK](n|) ]]
+compinit:503> compdef -na _devtodo devtodo todo tda tde tdd tdr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _devtodo == *=* ]]
+compdef:79> func=_devtodo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _devtodo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ devtodo == -N ]]
+compdef:134> [[ devtodo == -p ]]
+compdef:136> [[ devtodo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ devtodo == *=* ]]
+compdef:159> cmd=devtodo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ todo == -N ]]
+compdef:134> [[ todo == -p ]]
+compdef:136> [[ todo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ todo == *=* ]]
+compdef:159> cmd=todo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ tda == -N ]]
+compdef:134> [[ tda == -p ]]
+compdef:136> [[ tda == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tda == *=* ]]
+compdef:159> cmd=tda 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tde == -N ]]
+compdef:134> [[ tde == -p ]]
+compdef:136> [[ tde == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tde == *=* ]]
+compdef:159> cmd=tde 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tdd == -N ]]
+compdef:134> [[ tdd == -p ]]
+compdef:136> [[ tdd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tdd == *=* ]]
+compdef:159> cmd=tdd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tdr == -N ]]
+compdef:134> [[ tdr == -p ]]
+compdef:136> [[ tdr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tdr == *=* ]]
+compdef:159> cmd=tdr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_df
+compinit:492> _i_name=_df 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ df == -[pPkK](n|) ]]
+compinit:503> compdef -na _df df
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _df == *=* ]]
+compdef:79> func=_df 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _df
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ df == -N ]]
+compdef:134> [[ df == -p ]]
+compdef:136> [[ df == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ df == *=* ]]
+compdef:159> cmd=df 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_df 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dhclient
+compinit:492> _i_name=_dhclient 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dhclient == -[pPkK](n|) ]]
+compinit:503> compdef -na _dhclient dhclient dhclient3
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dhclient == *=* ]]
+compdef:79> func=_dhclient 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dhclient
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dhclient == -N ]]
+compdef:134> [[ dhclient == -p ]]
+compdef:136> [[ dhclient == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dhclient == *=* ]]
+compdef:159> cmd=dhclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dhclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dhclient3 == -N ]]
+compdef:134> [[ dhclient3 == -p ]]
+compdef:136> [[ dhclient3 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dhclient3 == *=* ]]
+compdef:159> cmd=dhclient3 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dhclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dhcpinfo
+compinit:492> _i_name=_dhcpinfo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dhcpinfo == -[pPkK](n|) ]]
+compinit:503> compdef -na _dhcpinfo dhcpinfo
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dhcpinfo == *=* ]]
+compdef:79> func=_dhcpinfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dhcpinfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dhcpinfo == -N ]]
+compdef:134> [[ dhcpinfo == -p ]]
+compdef:136> [[ dhcpinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dhcpinfo == *=* ]]
+compdef:159> cmd=dhcpinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dhcpinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dict
+compinit:492> _i_name=_dict 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dict == -[pPkK](n|) ]]
+compinit:503> compdef -na _dict dict
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dict == *=* ]]
+compdef:79> func=_dict 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dict
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dict == -N ]]
+compdef:134> [[ dict == -p ]]
+compdef:136> [[ dict == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dict == *=* ]]
+compdef:159> cmd=dict 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dict 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dict_words
+compinit:492> _i_name=_dict_words 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _dict_words
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_diff
+compinit:492> _i_name=_diff 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ diff == -[pPkK](n|) ]]
+compinit:503> compdef -na _diff diff gdiff
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _diff == *=* ]]
+compdef:79> func=_diff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _diff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ diff == -N ]]
+compdef:134> [[ diff == -p ]]
+compdef:136> [[ diff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ diff == *=* ]]
+compdef:159> cmd=diff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_diff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gdiff == -N ]]
+compdef:134> [[ gdiff == -p ]]
+compdef:136> [[ gdiff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gdiff == *=* ]]
+compdef:159> cmd=gdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_diff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_diff_options
+compinit:492> _i_name=_diff_options 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _diff_options
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_diffstat
+compinit:492> _i_name=_diffstat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ diffstat == -[pPkK](n|) ]]
+compinit:503> compdef -na _diffstat diffstat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _diffstat == *=* ]]
+compdef:79> func=_diffstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _diffstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ diffstat == -N ]]
+compdef:134> [[ diffstat == -p ]]
+compdef:136> [[ diffstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ diffstat == *=* ]]
+compdef:159> cmd=diffstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_diffstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dir_list
+compinit:492> _i_name=_dir_list 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -value-,TERMINFO_DIRS,-default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _dir_list -value-,TERMINFO_DIRS,-default- -P '-value-,*PATH,-default-'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dir_list == *=* ]]
+compdef:79> func=_dir_list 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dir_list
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,TERMINFO_DIRS,-default- == -N ]]
+compdef:134> [[ -value-,TERMINFO_DIRS,-default- == -p ]]
+compdef:136> [[ -value-,TERMINFO_DIRS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,TERMINFO_DIRS,-default- == *=* ]]
+compdef:159> cmd=-value-,TERMINFO_DIRS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dir_list 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P == -N ]]
+compdef:134> [[ -P == -p ]]
+compdef:136> [[ -P == -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,*PATH,-default-' == -N ]]
+compdef:134> [[ '-value-,*PATH,-default-' == -p ]]
+compdef:136> [[ '-value-,*PATH,-default-' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,*PATH,-default-' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_dir_list 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_directories
+compinit:492> _i_name=_directories 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rmdir == -[pPkK](n|) ]]
+compinit:503> compdef -na _directories rmdir df dircmp -P '-value-,*path,-default-'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _directories == *=* ]]
+compdef:79> func=_directories 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _directories
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ rmdir == -N ]]
+compdef:134> [[ rmdir == -p ]]
+compdef:136> [[ rmdir == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmdir == *=* ]]
+compdef:159> cmd=rmdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_directories 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ df == -N ]]
+compdef:134> [[ df == -p ]]
+compdef:136> [[ df == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ df == *=* ]]
+compdef:159> cmd=df 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z _df ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dircmp == -N ]]
+compdef:134> [[ dircmp == -p ]]
+compdef:136> [[ dircmp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dircmp == *=* ]]
+compdef:159> cmd=dircmp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_directories 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P == -N ]]
+compdef:134> [[ -P == -p ]]
+compdef:136> [[ -P == -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,*path,-default-' == -N ]]
+compdef:134> [[ '-value-,*path,-default-' == -p ]]
+compdef:136> [[ '-value-,*path,-default-' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,*path,-default-' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_directories 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_directory_stack
+compinit:492> _i_name=_directory_stack 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ popd == -[pPkK](n|) ]]
+compinit:503> compdef -na _directory_stack popd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _directory_stack == *=* ]]
+compdef:79> func=_directory_stack 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _directory_stack
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ popd == -N ]]
+compdef:134> [[ popd == -p ]]
+compdef:136> [[ popd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ popd == *=* ]]
+compdef:159> cmd=popd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_directory_stack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dirs
+compinit:492> _i_name=_dirs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dirs == -[pPkK](n|) ]]
+compinit:503> compdef -na _dirs dirs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dirs == *=* ]]
+compdef:79> func=_dirs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dirs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dirs == -N ]]
+compdef:134> [[ dirs == -p ]]
+compdef:136> [[ dirs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dirs == *=* ]]
+compdef:159> cmd=dirs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dirs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_disable
+compinit:492> _i_name=_disable 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ disable == -[pPkK](n|) ]]
+compinit:503> compdef -na _disable disable
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _disable == *=* ]]
+compdef:79> func=_disable 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _disable
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ disable == -N ]]
+compdef:134> [[ disable == -p ]]
+compdef:136> [[ disable == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ disable == *=* ]]
+compdef:159> cmd=disable 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_disable 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dispatch
+compinit:492> _i_name=_dispatch 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _dispatch
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_django
+compinit:492> _i_name=_django 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ django-admin.py == -[pPkK](n|) ]]
+compinit:503> compdef -na _django django-admin.py django-admin manage.py
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _django == *=* ]]
+compdef:79> func=_django 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _django
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ django-admin.py == -N ]]
+compdef:134> [[ django-admin.py == -p ]]
+compdef:136> [[ django-admin.py == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ django-admin.py == *=* ]]
+compdef:159> cmd=django-admin.py 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_django 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ django-admin == -N ]]
+compdef:134> [[ django-admin == -p ]]
+compdef:136> [[ django-admin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ django-admin == *=* ]]
+compdef:159> cmd=django-admin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_django 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ manage.py == -N ]]
+compdef:134> [[ manage.py == -p ]]
+compdef:136> [[ manage.py == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ manage.py == *=* ]]
+compdef:159> cmd=manage.py 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_django 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dladm
+compinit:492> _i_name=_dladm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dladm == -[pPkK](n|) ]]
+compinit:503> compdef -na _dladm dladm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dladm == *=* ]]
+compdef:79> func=_dladm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dladm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dladm == -N ]]
+compdef:134> [[ dladm == -p ]]
+compdef:136> [[ dladm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dladm == *=* ]]
+compdef:159> cmd=dladm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dladm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dlocate
+compinit:492> _i_name=_dlocate 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dlocate == -[pPkK](n|) ]]
+compinit:503> compdef -na _dlocate dlocate
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dlocate == *=* ]]
+compdef:79> func=_dlocate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dlocate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dlocate == -N ]]
+compdef:134> [[ dlocate == -p ]]
+compdef:136> [[ dlocate == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dlocate == *=* ]]
+compdef:159> cmd=dlocate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dlocate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dmidecode
+compinit:492> _i_name=_dmidecode 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dmidecode == -[pPkK](n|) ]]
+compinit:503> compdef -na _dmidecode dmidecode
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dmidecode == *=* ]]
+compdef:79> func=_dmidecode 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dmidecode
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dmidecode == -N ]]
+compdef:134> [[ dmidecode == -p ]]
+compdef:136> [[ dmidecode == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dmidecode == *=* ]]
+compdef:159> cmd=dmidecode 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dmidecode 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_domains
+compinit:492> _i_name=_domains 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _domains
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dpatch-edit-patch
+compinit:492> _i_name=_dpatch-edit-patch 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dpatch-edit-patch == -[pPkK](n|) ]]
+compinit:503> compdef -na _dpatch-edit-patch dpatch-edit-patch
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpatch-edit-patch == *=* ]]
+compdef:79> func=_dpatch-edit-patch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpatch-edit-patch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpatch-edit-patch == -N ]]
+compdef:134> [[ dpatch-edit-patch == -p ]]
+compdef:136> [[ dpatch-edit-patch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpatch-edit-patch == *=* ]]
+compdef:159> cmd=dpatch-edit-patch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpatch-edit-patch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dpkg
+compinit:492> _i_name=_dpkg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dpkg == -[pPkK](n|) ]]
+compinit:503> compdef -na _dpkg dpkg dpkg-deb dpkg-query dpkg-reconfigure
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg == *=* ]]
+compdef:79> func=_dpkg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ dpkg == -N ]]
+compdef:134> [[ dpkg == -p ]]
+compdef:136> [[ dpkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg == *=* ]]
+compdef:159> cmd=dpkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dpkg-deb == -N ]]
+compdef:134> [[ dpkg-deb == -p ]]
+compdef:136> [[ dpkg-deb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-deb == *=* ]]
+compdef:159> cmd=dpkg-deb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ dpkg-query == -N ]]
+compdef:134> [[ dpkg-query == -p ]]
+compdef:136> [[ dpkg-query == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-query == *=* ]]
+compdef:159> cmd=dpkg-query 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-reconfigure == -N ]]
+compdef:134> [[ dpkg-reconfigure == -p ]]
+compdef:136> [[ dpkg-reconfigure == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-reconfigure == *=* ]]
+compdef:159> cmd=dpkg-reconfigure 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dpkg-buildpackage
+compinit:492> _i_name=_dpkg-buildpackage 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dpkg-buildpackage == -[pPkK](n|) ]]
+compinit:503> compdef -na _dpkg-buildpackage dpkg-buildpackage
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg-buildpackage == *=* ]]
+compdef:79> func=_dpkg-buildpackage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg-buildpackage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-buildpackage == -N ]]
+compdef:134> [[ dpkg-buildpackage == -p ]]
+compdef:136> [[ dpkg-buildpackage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-buildpackage == *=* ]]
+compdef:159> cmd=dpkg-buildpackage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg-buildpackage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dpkg-cross
+compinit:492> _i_name=_dpkg-cross 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dpkg-cross == -[pPkK](n|) ]]
+compinit:503> compdef -na _dpkg-cross dpkg-cross
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg-cross == *=* ]]
+compdef:79> func=_dpkg-cross 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg-cross
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-cross == -N ]]
+compdef:134> [[ dpkg-cross == -p ]]
+compdef:136> [[ dpkg-cross == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-cross == *=* ]]
+compdef:159> cmd=dpkg-cross 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg-cross 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dpkg-repack
+compinit:492> _i_name=_dpkg-repack 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dpkg-repack == -[pPkK](n|) ]]
+compinit:503> compdef -na _dpkg-repack dpkg-repack
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg-repack == *=* ]]
+compdef:79> func=_dpkg-repack 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg-repack
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-repack == -N ]]
+compdef:134> [[ dpkg-repack == -p ]]
+compdef:136> [[ dpkg-repack == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-repack == *=* ]]
+compdef:159> cmd=dpkg-repack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg-repack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dpkg_source
+compinit:492> _i_name=_dpkg_source 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dpkg-source == -[pPkK](n|) ]]
+compinit:503> compdef -na _dpkg_source dpkg-source
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg_source == *=* ]]
+compdef:79> func=_dpkg_source 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg_source
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-source == -N ]]
+compdef:134> [[ dpkg-source == -p ]]
+compdef:136> [[ dpkg-source == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-source == *=* ]]
+compdef:159> cmd=dpkg-source 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg_source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dput
+compinit:492> _i_name=_dput 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dput == -[pPkK](n|) ]]
+compinit:503> compdef -na _dput dput
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dput == *=* ]]
+compdef:79> func=_dput 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dput
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dput == -N ]]
+compdef:134> [[ dput == -p ]]
+compdef:136> [[ dput == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dput == *=* ]]
+compdef:159> cmd=dput 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dput 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dtrace
+compinit:492> _i_name=_dtrace 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dtrace == -[pPkK](n|) ]]
+compinit:503> compdef -na _dtrace dtrace
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dtrace == *=* ]]
+compdef:79> func=_dtrace 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dtrace
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dtrace == -N ]]
+compdef:134> [[ dtrace == -p ]]
+compdef:136> [[ dtrace == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dtrace == *=* ]]
+compdef:159> cmd=dtrace 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dtrace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_du
+compinit:492> _i_name=_du 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ du == -[pPkK](n|) ]]
+compinit:503> compdef -na _du du
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _du == *=* ]]
+compdef:79> func=_du 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _du
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ du == -N ]]
+compdef:134> [[ du == -p ]]
+compdef:136> [[ du == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ du == *=* ]]
+compdef:159> cmd=du 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_du 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dumpadm
+compinit:492> _i_name=_dumpadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dumpadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _dumpadm dumpadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dumpadm == *=* ]]
+compdef:79> func=_dumpadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dumpadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dumpadm == -N ]]
+compdef:134> [[ dumpadm == -p ]]
+compdef:136> [[ dumpadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dumpadm == *=* ]]
+compdef:159> cmd=dumpadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dumpadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dumper
+compinit:492> _i_name=_dumper 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dumper == -[pPkK](n|) ]]
+compinit:503> compdef -na _dumper dumper dumper.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dumper == *=* ]]
+compdef:79> func=_dumper 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dumper
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dumper == -N ]]
+compdef:134> [[ dumper == -p ]]
+compdef:136> [[ dumper == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dumper == *=* ]]
+compdef:159> cmd=dumper 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dumper 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dumper.exe == -N ]]
+compdef:134> [[ dumper.exe == -p ]]
+compdef:136> [[ dumper.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dumper.exe == *=* ]]
+compdef:159> cmd=dumper.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dumper 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dupload
+compinit:492> _i_name=_dupload 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dupload == -[pPkK](n|) ]]
+compinit:503> compdef -na _dupload dupload
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dupload == *=* ]]
+compdef:79> func=_dupload 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dupload
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dupload == -N ]]
+compdef:134> [[ dupload == -p ]]
+compdef:136> [[ dupload == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dupload == *=* ]]
+compdef:159> cmd=dupload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dupload 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dvi
+compinit:492> _i_name=_dvi 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dvips == -[pPkK](n|) ]]
+compinit:503> compdef -na _dvi dvips dvibook dviconcat dvicopy dvidvi dviselect dvitodvi dvitype
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dvi == *=* ]]
+compdef:79> func=_dvi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dvi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ dvips == -N ]]
+compdef:134> [[ dvips == -p ]]
+compdef:136> [[ dvips == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvips == *=* ]]
+compdef:159> cmd=dvips 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ dvibook == -N ]]
+compdef:134> [[ dvibook == -p ]]
+compdef:136> [[ dvibook == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvibook == *=* ]]
+compdef:159> cmd=dvibook 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ dviconcat == -N ]]
+compdef:134> [[ dviconcat == -p ]]
+compdef:136> [[ dviconcat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dviconcat == *=* ]]
+compdef:159> cmd=dviconcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ dvicopy == -N ]]
+compdef:134> [[ dvicopy == -p ]]
+compdef:136> [[ dvicopy == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvicopy == *=* ]]
+compdef:159> cmd=dvicopy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ dvidvi == -N ]]
+compdef:134> [[ dvidvi == -p ]]
+compdef:136> [[ dvidvi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvidvi == *=* ]]
+compdef:159> cmd=dvidvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dviselect == -N ]]
+compdef:134> [[ dviselect == -p ]]
+compdef:136> [[ dviselect == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dviselect == *=* ]]
+compdef:159> cmd=dviselect 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ dvitodvi == -N ]]
+compdef:134> [[ dvitodvi == -p ]]
+compdef:136> [[ dvitodvi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvitodvi == *=* ]]
+compdef:159> cmd=dvitodvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dvitype == -N ]]
+compdef:134> [[ dvitype == -p ]]
+compdef:136> [[ dvitype == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvitype == *=* ]]
+compdef:159> cmd=dvitype 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_dynamic_directory_name
+compinit:492> _i_name=_dynamic_directory_name 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _dynamic_directory_name
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ecasound
+compinit:492> _i_name=_ecasound 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ecasound == -[pPkK](n|) ]]
+compinit:503> compdef -na _ecasound ecasound
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ecasound == *=* ]]
+compdef:79> func=_ecasound 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ecasound
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ecasound == -N ]]
+compdef:134> [[ ecasound == -p ]]
+compdef:136> [[ ecasound == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ecasound == *=* ]]
+compdef:159> cmd=ecasound 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ecasound 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_echotc
+compinit:492> _i_name=_echotc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ echotc == -[pPkK](n|) ]]
+compinit:503> compdef -na _echotc echotc
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _echotc == *=* ]]
+compdef:79> func=_echotc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _echotc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ echotc == -N ]]
+compdef:134> [[ echotc == -p ]]
+compdef:136> [[ echotc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ echotc == *=* ]]
+compdef:159> cmd=echotc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_echotc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_echoti
+compinit:492> _i_name=_echoti 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ echoti == -[pPkK](n|) ]]
+compinit:503> compdef -na _echoti echoti
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _echoti == *=* ]]
+compdef:79> func=_echoti 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _echoti
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ echoti == -N ]]
+compdef:134> [[ echoti == -p ]]
+compdef:136> [[ echoti == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ echoti == *=* ]]
+compdef:159> cmd=echoti 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_echoti 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_elinks
+compinit:492> _i_name=_elinks 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ elinks == -[pPkK](n|) ]]
+compinit:503> compdef -na _elinks elinks
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _elinks == *=* ]]
+compdef:79> func=_elinks 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _elinks
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ elinks == -N ]]
+compdef:134> [[ elinks == -p ]]
+compdef:136> [[ elinks == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ elinks == *=* ]]
+compdef:159> cmd=elinks 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_elinks 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_elm
+compinit:492> _i_name=_elm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ elm == -[pPkK](n|) ]]
+compinit:503> compdef -na _elm elm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _elm == *=* ]]
+compdef:79> func=_elm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _elm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ elm == -N ]]
+compdef:134> [[ elm == -p ]]
+compdef:136> [[ elm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ elm == *=* ]]
+compdef:159> cmd=elm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_elm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_email_addresses
+compinit:492> _i_name=_email_addresses 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _email_addresses
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_emulate
+compinit:492> _i_name=_emulate 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ emulate == -[pPkK](n|) ]]
+compinit:503> compdef -na _emulate emulate
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _emulate == *=* ]]
+compdef:79> func=_emulate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _emulate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ emulate == -N ]]
+compdef:134> [[ emulate == -p ]]
+compdef:136> [[ emulate == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ emulate == *=* ]]
+compdef:159> cmd=emulate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_emulate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_enable
+compinit:492> _i_name=_enable 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ enable == -[pPkK](n|) ]]
+compinit:503> compdef -na _enable enable
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _enable == *=* ]]
+compdef:79> func=_enable 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _enable
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ enable == -N ]]
+compdef:134> [[ enable == -p ]]
+compdef:136> [[ enable == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ enable == *=* ]]
+compdef:159> cmd=enable 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_enable 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_enscript
+compinit:492> _i_name=_enscript 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ enscript == -[pPkK](n|) ]]
+compinit:503> compdef -na _enscript enscript
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _enscript == *=* ]]
+compdef:79> func=_enscript 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _enscript
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ enscript == -N ]]
+compdef:134> [[ enscript == -p ]]
+compdef:136> [[ enscript == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ enscript == *=* ]]
+compdef:159> cmd=enscript 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_enscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_env
+compinit:492> _i_name=_env 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ env == -[pPkK](n|) ]]
+compinit:503> compdef -na _env env
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _env == *=* ]]
+compdef:79> func=_env 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _env
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ env == -N ]]
+compdef:134> [[ env == -p ]]
+compdef:136> [[ env == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ env == *=* ]]
+compdef:159> cmd=env 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_env 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_equal
+compinit:492> _i_name=_equal 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -equal- == -[pPkK](n|) ]]
+compinit:503> compdef -na _equal -equal-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _equal == *=* ]]
+compdef:79> func=_equal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _equal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -equal- == -N ]]
+compdef:134> [[ -equal- == -p ]]
+compdef:136> [[ -equal- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -equal- == *=* ]]
+compdef:159> cmd=-equal- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_equal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_espeak
+compinit:492> _i_name=_espeak 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ espeak == -[pPkK](n|) ]]
+compinit:503> compdef -na _espeak espeak
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _espeak == *=* ]]
+compdef:79> func=_espeak 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _espeak
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ espeak == -N ]]
+compdef:134> [[ espeak == -p ]]
+compdef:136> [[ espeak == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ espeak == *=* ]]
+compdef:159> cmd=espeak 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_espeak 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_etags
+compinit:492> _i_name=_etags 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ etags == -[pPkK](n|) ]]
+compinit:503> compdef -na _etags etags
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _etags == *=* ]]
+compdef:79> func=_etags 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _etags
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ etags == -N ]]
+compdef:134> [[ etags == -p ]]
+compdef:136> [[ etags == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ etags == *=* ]]
+compdef:159> cmd=etags 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_etags 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ethtool
+compinit:492> _i_name=_ethtool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ethtool == -[pPkK](n|) ]]
+compinit:503> compdef -na _ethtool ethtool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ethtool == *=* ]]
+compdef:79> func=_ethtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ethtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ethtool == -N ]]
+compdef:134> [[ ethtool == -p ]]
+compdef:136> [[ ethtool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ethtool == *=* ]]
+compdef:159> cmd=ethtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ethtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_expand
+compinit:492> _i_name=_expand 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _expand
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_expand_alias
+compinit:492> _i_name=_expand_alias 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -K == -[pPkK](n|) ]]
+compinit:501> compdef -Kna _expand_alias _expand_alias complete-word '\C-xa'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K == p ]]
+compdef:26> [[ K == P ]]
+compdef:28> [[ K == K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _expand_alias == *=* ]]
+compdef:79> func=_expand_alias 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _expand_alias
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _expand_alias ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _expand_alias == _* ]]
+compdef:91> [[ complete-word == .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word == .menu-select ]]
+compdef:93> zle -C _expand_alias .complete-word _expand_alias
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\C-xa'
+compdef:95> IFS=' 	' +compdef:95> read -A opt
+compdef:96> [[ undefined-key == undefined-key ]]
+compdef:96> bindkey '\C-xa' _expand_alias
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_expand_word
+compinit:492> _i_name=_expand_word 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -K == -[pPkK](n|) ]]
+compinit:501> compdef -Kna _expand_word _expand_word complete-word '\C-xe' _list_expansions list-choices '\C-xd'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K == p ]]
+compdef:26> [[ K == P ]]
+compdef:28> [[ K == K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _expand_word == *=* ]]
+compdef:79> func=_expand_word 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _expand_word
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _expand_word ]]
+compdef:86> [[ 6 -lt 3 ]]
+compdef:90> [[ _expand_word == _* ]]
+compdef:91> [[ complete-word == .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word == .menu-select ]]
+compdef:93> zle -C _expand_word .complete-word _expand_word
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\C-xe'
+compdef:95> IFS=' 	' +compdef:95> read -A opt
+compdef:96> [[ undefined-key == undefined-key ]]
+compdef:96> bindkey '\C-xe' _expand_word
+compdef:100> shift 3
+compdef:85> [[ -n _list_expansions ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _list_expansions == _* ]]
+compdef:91> [[ list-choices == .* ]]
+compdef:91> 2=.list-choices 
+compdef:92> [[ .list-choices == .menu-select ]]
+compdef:93> zle -C _list_expansions .list-choices _expand_word
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\C-xd'
+compdef:95> IFS=' 	' +compdef:95> read -A opt
+compdef:96> [[ undefined-key == undefined-key ]]
+compdef:96> bindkey '\C-xd' _list_expansions
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fakeroot
+compinit:492> _i_name=_fakeroot 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fakeroot == -[pPkK](n|) ]]
+compinit:503> compdef -na _fakeroot fakeroot
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fakeroot == *=* ]]
+compdef:79> func=_fakeroot 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fakeroot
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fakeroot == -N ]]
+compdef:134> [[ fakeroot == -p ]]
+compdef:136> [[ fakeroot == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fakeroot == *=* ]]
+compdef:159> cmd=fakeroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fakeroot 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fc
+compinit:492> _i_name=_fc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fc == -[pPkK](n|) ]]
+compinit:503> compdef -na _fc fc history r
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fc == *=* ]]
+compdef:79> func=_fc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ fc == -N ]]
+compdef:134> [[ fc == -p ]]
+compdef:136> [[ fc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fc == *=* ]]
+compdef:159> cmd=fc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ history == -N ]]
+compdef:134> [[ history == -p ]]
+compdef:136> [[ history == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ history == *=* ]]
+compdef:159> cmd=history 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ r == -N ]]
+compdef:134> [[ r == -p ]]
+compdef:136> [[ r == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ r == *=* ]]
+compdef:159> cmd=r 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_feh
+compinit:492> _i_name=_feh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ feh == -[pPkK](n|) ]]
+compinit:503> compdef -na _feh feh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _feh == *=* ]]
+compdef:79> func=_feh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _feh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ feh == -N ]]
+compdef:134> [[ feh == -p ]]
+compdef:136> [[ feh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ feh == *=* ]]
+compdef:159> cmd=feh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_feh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fetch
+compinit:492> _i_name=_fetch 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fetch == -[pPkK](n|) ]]
+compinit:503> compdef -na _fetch fetch
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fetch == *=* ]]
+compdef:79> func=_fetch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fetch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fetch == -N ]]
+compdef:134> [[ fetch == -p ]]
+compdef:136> [[ fetch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fetch == *=* ]]
+compdef:159> cmd=fetch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fetch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fetchmail
+compinit:492> _i_name=_fetchmail 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fetchmail == -[pPkK](n|) ]]
+compinit:503> compdef -na _fetchmail fetchmail
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fetchmail == *=* ]]
+compdef:79> func=_fetchmail 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fetchmail
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fetchmail == -N ]]
+compdef:134> [[ fetchmail == -p ]]
+compdef:136> [[ fetchmail == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fetchmail == *=* ]]
+compdef:159> cmd=fetchmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fetchmail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ffmpeg
+compinit:492> _i_name=_ffmpeg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ffmpeg == -[pPkK](n|) ]]
+compinit:503> compdef -na _ffmpeg ffmpeg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ffmpeg == *=* ]]
+compdef:79> func=_ffmpeg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ffmpeg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ffmpeg == -N ]]
+compdef:134> [[ ffmpeg == -p ]]
+compdef:136> [[ ffmpeg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ffmpeg == *=* ]]
+compdef:159> cmd=ffmpeg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ffmpeg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_figlet
+compinit:492> _i_name=_figlet 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ figlet == -[pPkK](n|) ]]
+compinit:503> compdef -na _figlet figlet
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _figlet == *=* ]]
+compdef:79> func=_figlet 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _figlet
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ figlet == -N ]]
+compdef:134> [[ figlet == -p ]]
+compdef:136> [[ figlet == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ figlet == *=* ]]
+compdef:159> cmd=figlet 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_figlet 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_file_descriptors
+compinit:492> _i_name=_file_descriptors 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _file_descriptors
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_file_systems
+compinit:492> _i_name=_file_systems 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _file_systems
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_files
+compinit:492> _i_name=_files 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -redirect-,-default-,-default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _files -redirect-,-default-,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _files == *=* ]]
+compdef:79> func=_files 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _files
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -redirect-,-default-,-default- == -N ]]
+compdef:134> [[ -redirect-,-default-,-default- == -p ]]
+compdef:136> [[ -redirect-,-default-,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -redirect-,-default-,-default- == *=* ]]
+compdef:159> cmd=-redirect-,-default-,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_files 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_find
+compinit:492> _i_name=_find 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ find == -[pPkK](n|) ]]
+compinit:503> compdef -na _find find
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _find == *=* ]]
+compdef:79> func=_find 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _find
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ find == -N ]]
+compdef:134> [[ find == -p ]]
+compdef:136> [[ find == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ find == *=* ]]
+compdef:159> cmd=find 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_find 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_finger
+compinit:492> _i_name=_finger 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ finger == -[pPkK](n|) ]]
+compinit:503> compdef -na _finger finger
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _finger == *=* ]]
+compdef:79> func=_finger 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _finger
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ finger == -N ]]
+compdef:134> [[ finger == -p ]]
+compdef:136> [[ finger == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ finger == *=* ]]
+compdef:159> cmd=finger 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_finger 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fink
+compinit:492> _i_name=_fink 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fink == -[pPkK](n|) ]]
+compinit:503> compdef -na _fink fink
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fink == *=* ]]
+compdef:79> func=_fink 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fink
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fink == -N ]]
+compdef:134> [[ fink == -p ]]
+compdef:136> [[ fink == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fink == *=* ]]
+compdef:159> cmd=fink 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fink 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_first
+compinit:492> _i_name=_first 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -first- == -[pPkK](n|) ]]
+compinit:503> compdef -na _first -first-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _first == *=* ]]
+compdef:79> func=_first 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _first
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -first- == -N ]]
+compdef:134> [[ -first- == -p ]]
+compdef:136> [[ -first- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -first- == *=* ]]
+compdef:159> cmd=-first- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_first 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_flasher
+compinit:492> _i_name=_flasher 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ flasher == -[pPkK](n|) ]]
+compinit:503> compdef -na _flasher flasher
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _flasher == *=* ]]
+compdef:79> func=_flasher 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _flasher
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ flasher == -N ]]
+compdef:134> [[ flasher == -p ]]
+compdef:136> [[ flasher == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flasher == *=* ]]
+compdef:159> cmd=flasher 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_flasher 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_flex
+compinit:492> _i_name=_flex 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ flex == -[pPkK](n|) ]]
+compinit:503> compdef -na _flex flex
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _flex == *=* ]]
+compdef:79> func=_flex 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _flex
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ flex == -N ]]
+compdef:134> [[ flex == -p ]]
+compdef:136> [[ flex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flex == *=* ]]
+compdef:159> cmd=flex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_flex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_floppy
+compinit:492> _i_name=_floppy 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ dosread == -[pPkK](n|) ]]
+compinit:503> compdef -na _floppy dosread dosdel
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _floppy == *=* ]]
+compdef:79> func=_floppy 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _floppy
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dosread == -N ]]
+compdef:134> [[ dosread == -p ]]
+compdef:136> [[ dosread == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dosread == *=* ]]
+compdef:159> cmd=dosread 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_floppy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dosdel == -N ]]
+compdef:134> [[ dosdel == -p ]]
+compdef:136> [[ dosdel == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dosdel == *=* ]]
+compdef:159> cmd=dosdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_floppy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_flowadm
+compinit:492> _i_name=_flowadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ flowadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _flowadm flowadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _flowadm == *=* ]]
+compdef:79> func=_flowadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _flowadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ flowadm == -N ]]
+compdef:134> [[ flowadm == -p ]]
+compdef:136> [[ flowadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flowadm == *=* ]]
+compdef:159> cmd=flowadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_flowadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fmadm
+compinit:492> _i_name=_fmadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fmadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _fmadm fmadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fmadm == *=* ]]
+compdef:79> func=_fmadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fmadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fmadm == -N ]]
+compdef:134> [[ fmadm == -p ]]
+compdef:136> [[ fmadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fmadm == *=* ]]
+compdef:159> cmd=fmadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fmadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fortune
+compinit:492> _i_name=_fortune 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fortune == -[pPkK](n|) ]]
+compinit:503> compdef -na _fortune fortune
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fortune == *=* ]]
+compdef:79> func=_fortune 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fortune
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fortune == -N ]]
+compdef:134> [[ fortune == -p ]]
+compdef:136> [[ fortune == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fortune == *=* ]]
+compdef:159> cmd=fortune 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fortune 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_freebsd-update
+compinit:492> _i_name=_freebsd-update 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ freebsd-update == -[pPkK](n|) ]]
+compinit:503> compdef -na _freebsd-update freebsd-update
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _freebsd-update == *=* ]]
+compdef:79> func=_freebsd-update 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _freebsd-update
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ freebsd-update == -N ]]
+compdef:134> [[ freebsd-update == -p ]]
+compdef:136> [[ freebsd-update == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ freebsd-update == *=* ]]
+compdef:159> cmd=freebsd-update 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_freebsd-update 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fsh
+compinit:492> _i_name=_fsh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fsh == -[pPkK](n|) ]]
+compinit:503> compdef -na _fsh fsh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fsh == *=* ]]
+compdef:79> func=_fsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fsh == -N ]]
+compdef:134> [[ fsh == -p ]]
+compdef:136> [[ fsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fsh == *=* ]]
+compdef:159> cmd=fsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fstat
+compinit:492> _i_name=_fstat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fstat == -[pPkK](n|) ]]
+compinit:503> compdef -na _fstat fstat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fstat == *=* ]]
+compdef:79> func=_fstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fstat == -N ]]
+compdef:134> [[ fstat == -p ]]
+compdef:136> [[ fstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fstat == *=* ]]
+compdef:159> cmd=fstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_functions
+compinit:492> _i_name=_functions 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unfunction == -[pPkK](n|) ]]
+compinit:503> compdef -na _functions unfunction
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _functions == *=* ]]
+compdef:79> func=_functions 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _functions
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unfunction == -N ]]
+compdef:134> [[ unfunction == -p ]]
+compdef:136> [[ unfunction == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unfunction == *=* ]]
+compdef:159> cmd=unfunction 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_functions 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fuse_arguments
+compinit:492> _i_name=_fuse_arguments 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _fuse_arguments
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fuse_values
+compinit:492> _i_name=_fuse_values 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _fuse_values
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fuser
+compinit:492> _i_name=_fuser 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fuser == -[pPkK](n|) ]]
+compinit:503> compdef -na _fuser fuser
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fuser == *=* ]]
+compdef:79> func=_fuser 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fuser
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fuser == -N ]]
+compdef:134> [[ fuser == -p ]]
+compdef:136> [[ fuser == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fuser == *=* ]]
+compdef:159> cmd=fuser 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fuser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_fusermount
+compinit:492> _i_name=_fusermount 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fusermount == -[pPkK](n|) ]]
+compinit:503> compdef -na _fusermount fusermount
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fusermount == *=* ]]
+compdef:79> func=_fusermount 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fusermount
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fusermount == -N ]]
+compdef:134> [[ fusermount == -p ]]
+compdef:136> [[ fusermount == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fusermount == *=* ]]
+compdef:159> cmd=fusermount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fusermount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gcc
+compinit:492> _i_name=_gcc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gcc == -[pPkK](n|) ]]
+compinit:503> compdef -na _gcc gcc g++ cc c++ llvm-gcc llvm-g++ clang clang++ -value-,LDFLAGS,-default- -value-,CFLAGS,-default- -value-,CPPFLAGS,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 13  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 12  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gcc == *=* ]]
+compdef:79> func=_gcc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gcc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  11  ))
+compdef:132> [[ gcc == -N ]]
+compdef:134> [[ gcc == -p ]]
+compdef:136> [[ gcc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcc == *=* ]]
+compdef:159> cmd=gcc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ g++ == -N ]]
+compdef:134> [[ g++ == -p ]]
+compdef:136> [[ g++ == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ g++ == *=* ]]
+compdef:159> cmd=g++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ cc == -N ]]
+compdef:134> [[ cc == -p ]]
+compdef:136> [[ cc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cc == *=* ]]
+compdef:159> cmd=cc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ c++ == -N ]]
+compdef:134> [[ c++ == -p ]]
+compdef:136> [[ c++ == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ c++ == *=* ]]
+compdef:159> cmd=c++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ llvm-gcc == -N ]]
+compdef:134> [[ llvm-gcc == -p ]]
+compdef:136> [[ llvm-gcc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ llvm-gcc == *=* ]]
+compdef:159> cmd=llvm-gcc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ llvm-g++ == -N ]]
+compdef:134> [[ llvm-g++ == -p ]]
+compdef:136> [[ llvm-g++ == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ llvm-g++ == *=* ]]
+compdef:159> cmd=llvm-g++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ clang == -N ]]
+compdef:134> [[ clang == -p ]]
+compdef:136> [[ clang == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clang == *=* ]]
+compdef:159> cmd=clang 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ clang++ == -N ]]
+compdef:134> [[ clang++ == -p ]]
+compdef:136> [[ clang++ == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clang++ == *=* ]]
+compdef:159> cmd=clang++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,LDFLAGS,-default- == -N ]]
+compdef:134> [[ -value-,LDFLAGS,-default- == -p ]]
+compdef:136> [[ -value-,LDFLAGS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LDFLAGS,-default- == *=* ]]
+compdef:159> cmd=-value-,LDFLAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,CFLAGS,-default- == -N ]]
+compdef:134> [[ -value-,CFLAGS,-default- == -p ]]
+compdef:136> [[ -value-,CFLAGS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,CFLAGS,-default- == *=* ]]
+compdef:159> cmd=-value-,CFLAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,CPPFLAGS,-default- == -N ]]
+compdef:134> [[ -value-,CPPFLAGS,-default- == -p ]]
+compdef:136> [[ -value-,CPPFLAGS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,CPPFLAGS,-default- == *=* ]]
+compdef:159> cmd=-value-,CPPFLAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gcore
+compinit:492> _i_name=_gcore 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gcore == -[pPkK](n|) ]]
+compinit:503> compdef -na _gcore gcore
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gcore == *=* ]]
+compdef:79> func=_gcore 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gcore
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gcore == -N ]]
+compdef:134> [[ gcore == -p ]]
+compdef:136> [[ gcore == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcore == *=* ]]
+compdef:159> cmd=gcore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcore 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gdb
+compinit:492> _i_name=_gdb 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gdb == -[pPkK](n|) ]]
+compinit:503> compdef -na _gdb gdb
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gdb == *=* ]]
+compdef:79> func=_gdb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gdb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gdb == -N ]]
+compdef:134> [[ gdb == -p ]]
+compdef:136> [[ gdb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gdb == *=* ]]
+compdef:159> cmd=gdb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gdb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_generic
+compinit:492> _i_name=_generic 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _generic
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_genisoimage
+compinit:492> _i_name=_genisoimage 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ genisoimage == -[pPkK](n|) ]]
+compinit:503> compdef -na _genisoimage genisoimage
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _genisoimage == *=* ]]
+compdef:79> func=_genisoimage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _genisoimage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ genisoimage == -N ]]
+compdef:134> [[ genisoimage == -p ]]
+compdef:136> [[ genisoimage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ genisoimage == *=* ]]
+compdef:159> cmd=genisoimage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_genisoimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_getclip
+compinit:492> _i_name=_getclip 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ getclip == -[pPkK](n|) ]]
+compinit:503> compdef -na _getclip getclip getclip.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getclip == *=* ]]
+compdef:79> func=_getclip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getclip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ getclip == -N ]]
+compdef:134> [[ getclip == -p ]]
+compdef:136> [[ getclip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getclip == *=* ]]
+compdef:159> cmd=getclip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ getclip.exe == -N ]]
+compdef:134> [[ getclip.exe == -p ]]
+compdef:136> [[ getclip.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getclip.exe == *=* ]]
+compdef:159> cmd=getclip.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_getconf
+compinit:492> _i_name=_getconf 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ getconf == -[pPkK](n|) ]]
+compinit:503> compdef -na _getconf getconf
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getconf == *=* ]]
+compdef:79> func=_getconf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getconf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ getconf == -N ]]
+compdef:134> [[ getconf == -p ]]
+compdef:136> [[ getconf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getconf == *=* ]]
+compdef:159> cmd=getconf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getconf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_getent
+compinit:492> _i_name=_getent 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ getent == -[pPkK](n|) ]]
+compinit:503> compdef -na _getent getent
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getent == *=* ]]
+compdef:79> func=_getent 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getent
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ getent == -N ]]
+compdef:134> [[ getent == -p ]]
+compdef:136> [[ getent == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getent == *=* ]]
+compdef:159> cmd=getent 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_getfacl
+compinit:492> _i_name=_getfacl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ getfacl == -[pPkK](n|) ]]
+compinit:503> compdef -na _getfacl getfacl getfacl.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getfacl == *=* ]]
+compdef:79> func=_getfacl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getfacl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ getfacl == -N ]]
+compdef:134> [[ getfacl == -p ]]
+compdef:136> [[ getfacl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getfacl == *=* ]]
+compdef:159> cmd=getfacl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ getfacl.exe == -N ]]
+compdef:134> [[ getfacl.exe == -p ]]
+compdef:136> [[ getfacl.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getfacl.exe == *=* ]]
+compdef:159> cmd=getfacl.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_getmail
+compinit:492> _i_name=_getmail 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ getmail == -[pPkK](n|) ]]
+compinit:503> compdef -na _getmail getmail
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getmail == *=* ]]
+compdef:79> func=_getmail 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getmail
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ getmail == -N ]]
+compdef:134> [[ getmail == -p ]]
+compdef:136> [[ getmail == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getmail == *=* ]]
+compdef:159> cmd=getmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getmail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_git
+compinit:492> _i_name=_git 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ git == -[pPkK](n|) ]]
+compinit:503> compdef -na _git git git-cvsserver git-receive-pack git-upload-archive git-upload-pack git-shell gitk tig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _git
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ git == -N ]]
+compdef:134> [[ git == -p ]]
+compdef:136> [[ git == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git == *=* ]]
+compdef:159> cmd=git 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ git-cvsserver == -N ]]
+compdef:134> [[ git-cvsserver == -p ]]
+compdef:136> [[ git-cvsserver == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-cvsserver == *=* ]]
+compdef:159> cmd=git-cvsserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ git-receive-pack == -N ]]
+compdef:134> [[ git-receive-pack == -p ]]
+compdef:136> [[ git-receive-pack == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-receive-pack == *=* ]]
+compdef:159> cmd=git-receive-pack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ git-upload-archive == -N ]]
+compdef:134> [[ git-upload-archive == -p ]]
+compdef:136> [[ git-upload-archive == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-upload-archive == *=* ]]
+compdef:159> cmd=git-upload-archive 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ git-upload-pack == -N ]]
+compdef:134> [[ git-upload-pack == -p ]]
+compdef:136> [[ git-upload-pack == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-upload-pack == *=* ]]
+compdef:159> cmd=git-upload-pack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ git-shell == -N ]]
+compdef:134> [[ git-shell == -p ]]
+compdef:136> [[ git-shell == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-shell == *=* ]]
+compdef:159> cmd=git-shell 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gitk == -N ]]
+compdef:134> [[ gitk == -p ]]
+compdef:136> [[ gitk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gitk == *=* ]]
+compdef:159> cmd=gitk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tig == -N ]]
+compdef:134> [[ tig == -p ]]
+compdef:136> [[ tig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tig == *=* ]]
+compdef:159> cmd=tig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_git-buildpackage
+compinit:492> _i_name=_git-buildpackage 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ git-buildpackage == -[pPkK](n|) ]]
+compinit:503> compdef -na _git-buildpackage git-buildpackage
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git-buildpackage == *=* ]]
+compdef:79> func=_git-buildpackage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _git-buildpackage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ git-buildpackage == -N ]]
+compdef:134> [[ git-buildpackage == -p ]]
+compdef:136> [[ git-buildpackage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-buildpackage == *=* ]]
+compdef:159> cmd=git-buildpackage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git-buildpackage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_global
+compinit:492> _i_name=_global 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ global == -[pPkK](n|) ]]
+compinit:503> compdef -na _global global
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _global == *=* ]]
+compdef:79> func=_global 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _global
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ global == -N ]]
+compdef:134> [[ global == -p ]]
+compdef:136> [[ global == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ global == *=* ]]
+compdef:159> cmd=global 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_global 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_global_tags
+compinit:492> _i_name=_global_tags 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _global_tags
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_globflags
+compinit:492> _i_name=_globflags 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _globflags
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_globqual_delims
+compinit:492> _i_name=_globqual_delims 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _globqual_delims
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_globquals
+compinit:492> _i_name=_globquals 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _globquals
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gnome-gv
+compinit:492> _i_name=_gnome-gv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gnome-gv == -[pPkK](n|) ]]
+compinit:503> compdef -na _gnome-gv gnome-gv ggv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gnome-gv == *=* ]]
+compdef:79> func=_gnome-gv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gnome-gv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ gnome-gv == -N ]]
+compdef:134> [[ gnome-gv == -p ]]
+compdef:136> [[ gnome-gv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnome-gv == *=* ]]
+compdef:159> cmd=gnome-gv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnome-gv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ggv == -N ]]
+compdef:134> [[ ggv == -p ]]
+compdef:136> [[ ggv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ggv == *=* ]]
+compdef:159> cmd=ggv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnome-gv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gnu_generic
+compinit:492> _i_name=_gnu_generic 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _gnu_generic
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gnupod
+compinit:492> _i_name=_gnupod 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gnupod_addsong == -[pPkK](n|) ]]
+compinit:503> compdef -na _gnupod gnupod_addsong 'gnupod_addsong.pl=gnupod_addsong' gnupod_check 'gnupod_check.pl=gnupod_check' gnupod_INIT 'gnupod_INIT.pl=gnupod_INIT' gnupod_search 'gnupod_search.pl=gnupod_search' mktunes 'mktunes.pl=mktunes' tunes2pod 'tunes2pod.pl=tunes2pod'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gnupod == *=* ]]
+compdef:79> func=_gnupod 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gnupod
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ gnupod_addsong == -N ]]
+compdef:134> [[ gnupod_addsong == -p ]]
+compdef:136> [[ gnupod_addsong == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_addsong == *=* ]]
+compdef:159> cmd=gnupod_addsong 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ 'gnupod_addsong.pl=gnupod_addsong' == -N ]]
+compdef:134> [[ 'gnupod_addsong.pl=gnupod_addsong' == -p ]]
+compdef:136> [[ 'gnupod_addsong.pl=gnupod_addsong' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_addsong.pl=gnupod_addsong' == *=* ]]
+compdef:156> cmd=gnupod_addsong.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_addsong 
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ gnupod_check == -N ]]
+compdef:134> [[ gnupod_check == -p ]]
+compdef:136> [[ gnupod_check == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_check == *=* ]]
+compdef:159> cmd=gnupod_check 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ 'gnupod_check.pl=gnupod_check' == -N ]]
+compdef:134> [[ 'gnupod_check.pl=gnupod_check' == -p ]]
+compdef:136> [[ 'gnupod_check.pl=gnupod_check' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_check.pl=gnupod_check' == *=* ]]
+compdef:156> cmd=gnupod_check.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_check 
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ gnupod_INIT == -N ]]
+compdef:134> [[ gnupod_INIT == -p ]]
+compdef:136> [[ gnupod_INIT == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_INIT == *=* ]]
+compdef:159> cmd=gnupod_INIT 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ 'gnupod_INIT.pl=gnupod_INIT' == -N ]]
+compdef:134> [[ 'gnupod_INIT.pl=gnupod_INIT' == -p ]]
+compdef:136> [[ 'gnupod_INIT.pl=gnupod_INIT' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_INIT.pl=gnupod_INIT' == *=* ]]
+compdef:156> cmd=gnupod_INIT.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_INIT 
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ gnupod_search == -N ]]
+compdef:134> [[ gnupod_search == -p ]]
+compdef:136> [[ gnupod_search == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_search == *=* ]]
+compdef:159> cmd=gnupod_search 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 'gnupod_search.pl=gnupod_search' == -N ]]
+compdef:134> [[ 'gnupod_search.pl=gnupod_search' == -p ]]
+compdef:136> [[ 'gnupod_search.pl=gnupod_search' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_search.pl=gnupod_search' == *=* ]]
+compdef:156> cmd=gnupod_search.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_search 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mktunes == -N ]]
+compdef:134> [[ mktunes == -p ]]
+compdef:136> [[ mktunes == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mktunes == *=* ]]
+compdef:159> cmd=mktunes 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ 'mktunes.pl=mktunes' == -N ]]
+compdef:134> [[ 'mktunes.pl=mktunes' == -p ]]
+compdef:136> [[ 'mktunes.pl=mktunes' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'mktunes.pl=mktunes' == *=* ]]
+compdef:156> cmd=mktunes.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mktunes 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tunes2pod == -N ]]
+compdef:134> [[ tunes2pod == -p ]]
+compdef:136> [[ tunes2pod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tunes2pod == *=* ]]
+compdef:159> cmd=tunes2pod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'tunes2pod.pl=tunes2pod' == -N ]]
+compdef:134> [[ 'tunes2pod.pl=tunes2pod' == -p ]]
+compdef:136> [[ 'tunes2pod.pl=tunes2pod' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'tunes2pod.pl=tunes2pod' == *=* ]]
+compdef:156> cmd=tunes2pod.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=tunes2pod 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gnutls
+compinit:492> _i_name=_gnutls 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gnutls-cli == -[pPkK](n|) ]]
+compinit:503> compdef -na _gnutls gnutls-cli gnutls-cli-debug certtool srptool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gnutls == *=* ]]
+compdef:79> func=_gnutls 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gnutls
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ gnutls-cli == -N ]]
+compdef:134> [[ gnutls-cli == -p ]]
+compdef:136> [[ gnutls-cli == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnutls-cli == *=* ]]
+compdef:159> cmd=gnutls-cli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ gnutls-cli-debug == -N ]]
+compdef:134> [[ gnutls-cli-debug == -p ]]
+compdef:136> [[ gnutls-cli-debug == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnutls-cli-debug == *=* ]]
+compdef:159> cmd=gnutls-cli-debug 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ certtool == -N ]]
+compdef:134> [[ certtool == -p ]]
+compdef:136> [[ certtool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ certtool == *=* ]]
+compdef:159> cmd=certtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ srptool == -N ]]
+compdef:134> [[ srptool == -p ]]
+compdef:136> [[ srptool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ srptool == *=* ]]
+compdef:159> cmd=srptool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_go
+compinit:492> _i_name=_go 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gccgo == -[pPkK](n|) ]]
+compinit:503> compdef -na _go gccgo gofmt 5l 6l 8l 5g 6g 8g
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _go == *=* ]]
+compdef:79> func=_go 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _go
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ gccgo == -N ]]
+compdef:134> [[ gccgo == -p ]]
+compdef:136> [[ gccgo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gccgo == *=* ]]
+compdef:159> cmd=gccgo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ gofmt == -N ]]
+compdef:134> [[ gofmt == -p ]]
+compdef:136> [[ gofmt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gofmt == *=* ]]
+compdef:159> cmd=gofmt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ 5l == -N ]]
+compdef:134> [[ 5l == -p ]]
+compdef:136> [[ 5l == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 5l == *=* ]]
+compdef:159> cmd=5l 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 6l == -N ]]
+compdef:134> [[ 6l == -p ]]
+compdef:136> [[ 6l == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 6l == *=* ]]
+compdef:159> cmd=6l 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ 8l == -N ]]
+compdef:134> [[ 8l == -p ]]
+compdef:136> [[ 8l == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 8l == *=* ]]
+compdef:159> cmd=8l 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ 5g == -N ]]
+compdef:134> [[ 5g == -p ]]
+compdef:136> [[ 5g == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 5g == *=* ]]
+compdef:159> cmd=5g 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 6g == -N ]]
+compdef:134> [[ 6g == -p ]]
+compdef:136> [[ 6g == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 6g == *=* ]]
+compdef:159> cmd=6g 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 8g == -N ]]
+compdef:134> [[ 8g == -p ]]
+compdef:136> [[ 8g == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 8g == *=* ]]
+compdef:159> cmd=8g 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gpg
+compinit:492> _i_name=_gpg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gpg == -[pPkK](n|) ]]
+compinit:503> compdef -na _gpg gpg gpgv gpg-zip
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gpg == *=* ]]
+compdef:79> func=_gpg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gpg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ gpg == -N ]]
+compdef:134> [[ gpg == -p ]]
+compdef:136> [[ gpg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpg == *=* ]]
+compdef:159> cmd=gpg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gpgv == -N ]]
+compdef:134> [[ gpgv == -p ]]
+compdef:136> [[ gpgv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpgv == *=* ]]
+compdef:159> cmd=gpgv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gpg-zip == -N ]]
+compdef:134> [[ gpg-zip == -p ]]
+compdef:136> [[ gpg-zip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpg-zip == *=* ]]
+compdef:159> cmd=gpg-zip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gphoto2
+compinit:492> _i_name=_gphoto2 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gphoto2 == -[pPkK](n|) ]]
+compinit:503> compdef -na _gphoto2 gphoto2
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gphoto2 == *=* ]]
+compdef:79> func=_gphoto2 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gphoto2
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gphoto2 == -N ]]
+compdef:134> [[ gphoto2 == -p ]]
+compdef:136> [[ gphoto2 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gphoto2 == *=* ]]
+compdef:159> cmd=gphoto2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gphoto2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gprof
+compinit:492> _i_name=_gprof 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gprof == -[pPkK](n|) ]]
+compinit:503> compdef -na _gprof gprof
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gprof == *=* ]]
+compdef:79> func=_gprof 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gprof
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gprof == -N ]]
+compdef:134> [[ gprof == -p ]]
+compdef:136> [[ gprof == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gprof == *=* ]]
+compdef:159> cmd=gprof 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gprof 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gqview
+compinit:492> _i_name=_gqview 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gqview == -[pPkK](n|) ]]
+compinit:503> compdef -na _gqview gqview
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gqview == *=* ]]
+compdef:79> func=_gqview 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gqview
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gqview == -N ]]
+compdef:134> [[ gqview == -p ]]
+compdef:136> [[ gqview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gqview == *=* ]]
+compdef:159> cmd=gqview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gqview 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gradle
+compinit:492> _i_name=_gradle 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gradle == -[pPkK](n|) ]]
+compinit:503> compdef -na _gradle gradle gradlew
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gradle == *=* ]]
+compdef:79> func=_gradle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gradle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ gradle == -N ]]
+compdef:134> [[ gradle == -p ]]
+compdef:136> [[ gradle == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gradle == *=* ]]
+compdef:159> cmd=gradle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gradle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gradlew == -N ]]
+compdef:134> [[ gradlew == -p ]]
+compdef:136> [[ gradlew == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gradlew == *=* ]]
+compdef:159> cmd=gradlew 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gradle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_graphicsmagick
+compinit:492> _i_name=_graphicsmagick 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gm == -[pPkK](n|) ]]
+compinit:503> compdef -na _graphicsmagick gm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _graphicsmagick == *=* ]]
+compdef:79> func=_graphicsmagick 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _graphicsmagick
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gm == -N ]]
+compdef:134> [[ gm == -p ]]
+compdef:136> [[ gm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gm == *=* ]]
+compdef:159> cmd=gm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_graphicsmagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_grep
+compinit:492> _i_name=_grep 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ grep == -[pPkK](n|) ]]
+compinit:503> compdef -na _grep grep egrep fgrep -value-,GREP_OPTIONS,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _grep == *=* ]]
+compdef:79> func=_grep 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _grep
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ grep == -N ]]
+compdef:134> [[ grep == -p ]]
+compdef:136> [[ grep == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grep == *=* ]]
+compdef:159> cmd=grep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ egrep == -N ]]
+compdef:134> [[ egrep == -p ]]
+compdef:136> [[ egrep == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ egrep == *=* ]]
+compdef:159> cmd=egrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ fgrep == -N ]]
+compdef:134> [[ fgrep == -p ]]
+compdef:136> [[ fgrep == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fgrep == *=* ]]
+compdef:159> cmd=fgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,GREP_OPTIONS,-default- == -N ]]
+compdef:134> [[ -value-,GREP_OPTIONS,-default- == -p ]]
+compdef:136> [[ -value-,GREP_OPTIONS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,GREP_OPTIONS,-default- == *=* ]]
+compdef:159> cmd=-value-,GREP_OPTIONS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_grep-excuses
+compinit:492> _i_name=_grep-excuses 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ grep-excuses == -[pPkK](n|) ]]
+compinit:503> compdef -na _grep-excuses grep-excuses
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _grep-excuses == *=* ]]
+compdef:79> func=_grep-excuses 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _grep-excuses
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ grep-excuses == -N ]]
+compdef:134> [[ grep-excuses == -p ]]
+compdef:136> [[ grep-excuses == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grep-excuses == *=* ]]
+compdef:159> cmd=grep-excuses 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep-excuses 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_groff
+compinit:492> _i_name=_groff 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ groff == -[pPkK](n|) ]]
+compinit:503> compdef -na _groff groff
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _groff == *=* ]]
+compdef:79> func=_groff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _groff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ groff == -N ]]
+compdef:134> [[ groff == -p ]]
+compdef:136> [[ groff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groff == *=* ]]
+compdef:159> cmd=groff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_groff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_groups
+compinit:492> _i_name=_groups 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ newgrp == -[pPkK](n|) ]]
+compinit:503> compdef -na _groups newgrp groupdel
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _groups == *=* ]]
+compdef:79> func=_groups 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _groups
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ newgrp == -N ]]
+compdef:134> [[ newgrp == -p ]]
+compdef:136> [[ newgrp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ newgrp == *=* ]]
+compdef:159> cmd=newgrp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_groups 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ groupdel == -N ]]
+compdef:134> [[ groupdel == -p ]]
+compdef:136> [[ groupdel == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groupdel == *=* ]]
+compdef:159> cmd=groupdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_groups 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_growisofs
+compinit:492> _i_name=_growisofs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mkisofs == -[pPkK](n|) ]]
+compinit:503> compdef -na _growisofs mkisofs growisofs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _growisofs == *=* ]]
+compdef:79> func=_growisofs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _growisofs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mkisofs == -N ]]
+compdef:134> [[ mkisofs == -p ]]
+compdef:136> [[ mkisofs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkisofs == *=* ]]
+compdef:159> cmd=mkisofs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_growisofs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ growisofs == -N ]]
+compdef:134> [[ growisofs == -p ]]
+compdef:136> [[ growisofs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ growisofs == *=* ]]
+compdef:159> cmd=growisofs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_growisofs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gs
+compinit:492> _i_name=_gs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gs == -[pPkK](n|) ]]
+compinit:503> compdef -na _gs gs ghostscript
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gs == *=* ]]
+compdef:79> func=_gs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ gs == -N ]]
+compdef:134> [[ gs == -p ]]
+compdef:136> [[ gs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gs == *=* ]]
+compdef:159> cmd=gs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ghostscript == -N ]]
+compdef:134> [[ ghostscript == -p ]]
+compdef:136> [[ ghostscript == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ghostscript == *=* ]]
+compdef:159> cmd=ghostscript 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_guard
+compinit:492> _i_name=_guard 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _guard
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_guilt
+compinit:492> _i_name=_guilt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ guilt == -[pPkK](n|) ]]
+compinit:503> compdef -na _guilt guilt guilt-add guilt-applied guilt-delete guilt-files guilt-fold guilt-fork guilt-header guilt-help guilt-import-commit guilt-import guilt-init guilt-new guilt-next guilt-patchbomb guilt-pop guilt-prev guilt-push guilt-rebase guilt-refresh guilt-rm guilt-series guilt-status guilt-top guilt-unapplied
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 27  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 26  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _guilt == *=* ]]
+compdef:79> func=_guilt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _guilt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  25  ))
+compdef:132> [[ guilt == -N ]]
+compdef:134> [[ guilt == -p ]]
+compdef:136> [[ guilt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt == *=* ]]
+compdef:159> cmd=guilt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  24  ))
+compdef:132> [[ guilt-add == -N ]]
+compdef:134> [[ guilt-add == -p ]]
+compdef:136> [[ guilt-add == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-add == *=* ]]
+compdef:159> cmd=guilt-add 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  23  ))
+compdef:132> [[ guilt-applied == -N ]]
+compdef:134> [[ guilt-applied == -p ]]
+compdef:136> [[ guilt-applied == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-applied == *=* ]]
+compdef:159> cmd=guilt-applied 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  22  ))
+compdef:132> [[ guilt-delete == -N ]]
+compdef:134> [[ guilt-delete == -p ]]
+compdef:136> [[ guilt-delete == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-delete == *=* ]]
+compdef:159> cmd=guilt-delete 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  21  ))
+compdef:132> [[ guilt-files == -N ]]
+compdef:134> [[ guilt-files == -p ]]
+compdef:136> [[ guilt-files == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-files == *=* ]]
+compdef:159> cmd=guilt-files 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ guilt-fold == -N ]]
+compdef:134> [[ guilt-fold == -p ]]
+compdef:136> [[ guilt-fold == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-fold == *=* ]]
+compdef:159> cmd=guilt-fold 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ guilt-fork == -N ]]
+compdef:134> [[ guilt-fork == -p ]]
+compdef:136> [[ guilt-fork == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-fork == *=* ]]
+compdef:159> cmd=guilt-fork 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ guilt-header == -N ]]
+compdef:134> [[ guilt-header == -p ]]
+compdef:136> [[ guilt-header == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-header == *=* ]]
+compdef:159> cmd=guilt-header 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ guilt-help == -N ]]
+compdef:134> [[ guilt-help == -p ]]
+compdef:136> [[ guilt-help == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-help == *=* ]]
+compdef:159> cmd=guilt-help 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ guilt-import-commit == -N ]]
+compdef:134> [[ guilt-import-commit == -p ]]
+compdef:136> [[ guilt-import-commit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-import-commit == *=* ]]
+compdef:159> cmd=guilt-import-commit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ guilt-import == -N ]]
+compdef:134> [[ guilt-import == -p ]]
+compdef:136> [[ guilt-import == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-import == *=* ]]
+compdef:159> cmd=guilt-import 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ guilt-init == -N ]]
+compdef:134> [[ guilt-init == -p ]]
+compdef:136> [[ guilt-init == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-init == *=* ]]
+compdef:159> cmd=guilt-init 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ guilt-new == -N ]]
+compdef:134> [[ guilt-new == -p ]]
+compdef:136> [[ guilt-new == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-new == *=* ]]
+compdef:159> cmd=guilt-new 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ guilt-next == -N ]]
+compdef:134> [[ guilt-next == -p ]]
+compdef:136> [[ guilt-next == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-next == *=* ]]
+compdef:159> cmd=guilt-next 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ guilt-patchbomb == -N ]]
+compdef:134> [[ guilt-patchbomb == -p ]]
+compdef:136> [[ guilt-patchbomb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-patchbomb == *=* ]]
+compdef:159> cmd=guilt-patchbomb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ guilt-pop == -N ]]
+compdef:134> [[ guilt-pop == -p ]]
+compdef:136> [[ guilt-pop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-pop == *=* ]]
+compdef:159> cmd=guilt-pop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ guilt-prev == -N ]]
+compdef:134> [[ guilt-prev == -p ]]
+compdef:136> [[ guilt-prev == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-prev == *=* ]]
+compdef:159> cmd=guilt-prev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ guilt-push == -N ]]
+compdef:134> [[ guilt-push == -p ]]
+compdef:136> [[ guilt-push == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-push == *=* ]]
+compdef:159> cmd=guilt-push 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ guilt-rebase == -N ]]
+compdef:134> [[ guilt-rebase == -p ]]
+compdef:136> [[ guilt-rebase == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-rebase == *=* ]]
+compdef:159> cmd=guilt-rebase 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ guilt-refresh == -N ]]
+compdef:134> [[ guilt-refresh == -p ]]
+compdef:136> [[ guilt-refresh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-refresh == *=* ]]
+compdef:159> cmd=guilt-refresh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ guilt-rm == -N ]]
+compdef:134> [[ guilt-rm == -p ]]
+compdef:136> [[ guilt-rm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-rm == *=* ]]
+compdef:159> cmd=guilt-rm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ guilt-series == -N ]]
+compdef:134> [[ guilt-series == -p ]]
+compdef:136> [[ guilt-series == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-series == *=* ]]
+compdef:159> cmd=guilt-series 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ guilt-status == -N ]]
+compdef:134> [[ guilt-status == -p ]]
+compdef:136> [[ guilt-status == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-status == *=* ]]
+compdef:159> cmd=guilt-status 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ guilt-top == -N ]]
+compdef:134> [[ guilt-top == -p ]]
+compdef:136> [[ guilt-top == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-top == *=* ]]
+compdef:159> cmd=guilt-top 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ guilt-unapplied == -N ]]
+compdef:134> [[ guilt-unapplied == -p ]]
+compdef:136> [[ guilt-unapplied == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-unapplied == *=* ]]
+compdef:159> cmd=guilt-unapplied 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gv
+compinit:492> _i_name=_gv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gv == -[pPkK](n|) ]]
+compinit:503> compdef -na _gv gv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gv == *=* ]]
+compdef:79> func=_gv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gv == -N ]]
+compdef:134> [[ gv == -p ]]
+compdef:136> [[ gv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gv == *=* ]]
+compdef:159> cmd=gv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_gzip
+compinit:492> _i_name=_gzip 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ gzip == -[pPkK](n|) ]]
+compinit:503> compdef -na _gzip gzip gunzip 'gzcat=gunzip' '-redirect-,<,gunzip=gunzip' '-redirect-,>,gzip=gunzip' '-redirect-,<,gzip=gzip' -value-,GZIP,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gzip == *=* ]]
+compdef:79> func=_gzip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gzip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ gzip == -N ]]
+compdef:134> [[ gzip == -p ]]
+compdef:136> [[ gzip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gzip == *=* ]]
+compdef:159> cmd=gzip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ gunzip == -N ]]
+compdef:134> [[ gunzip == -p ]]
+compdef:136> [[ gunzip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gunzip == *=* ]]
+compdef:159> cmd=gunzip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 'gzcat=gunzip' == -N ]]
+compdef:134> [[ 'gzcat=gunzip' == -p ]]
+compdef:136> [[ 'gzcat=gunzip' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gzcat=gunzip' == *=* ]]
+compdef:156> cmd=gzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gunzip 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ '-redirect-,<,gunzip=gunzip' == -N ]]
+compdef:134> [[ '-redirect-,<,gunzip=gunzip' == -p ]]
+compdef:136> [[ '-redirect-,<,gunzip=gunzip' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,gunzip=gunzip' == *=* ]]
+compdef:156> cmd='-redirect-,<,gunzip' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gunzip 
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,>,gzip=gunzip' == -N ]]
+compdef:134> [[ '-redirect-,>,gzip=gunzip' == -p ]]
+compdef:136> [[ '-redirect-,>,gzip=gunzip' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,gzip=gunzip' == *=* ]]
+compdef:156> cmd='-redirect-,>,gzip' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gunzip 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ '-redirect-,<,gzip=gzip' == -N ]]
+compdef:134> [[ '-redirect-,<,gzip=gzip' == -p ]]
+compdef:136> [[ '-redirect-,<,gzip=gzip' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,gzip=gzip' == *=* ]]
+compdef:156> cmd='-redirect-,<,gzip' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gzip 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,GZIP,-default- == -N ]]
+compdef:134> [[ -value-,GZIP,-default- == -p ]]
+compdef:136> [[ -value-,GZIP,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,GZIP,-default- == *=* ]]
+compdef:159> cmd=-value-,GZIP,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_hash
+compinit:492> _i_name=_hash 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ hash == -[pPkK](n|) ]]
+compinit:503> compdef -na _hash hash rehash
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hash == *=* ]]
+compdef:79> func=_hash 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hash
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ hash == -N ]]
+compdef:134> [[ hash == -p ]]
+compdef:136> [[ hash == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hash == *=* ]]
+compdef:159> cmd=hash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hash 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rehash == -N ]]
+compdef:134> [[ rehash == -p ]]
+compdef:136> [[ rehash == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rehash == *=* ]]
+compdef:159> cmd=rehash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hash 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_have_glob_qual
+compinit:492> _i_name=_have_glob_qual 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _have_glob_qual
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_hdiutil
+compinit:492> _i_name=_hdiutil 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ hdiutil == -[pPkK](n|) ]]
+compinit:503> compdef -na _hdiutil hdiutil
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hdiutil == *=* ]]
+compdef:79> func=_hdiutil 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hdiutil
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ hdiutil == -N ]]
+compdef:134> [[ hdiutil == -p ]]
+compdef:136> [[ hdiutil == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hdiutil == *=* ]]
+compdef:159> cmd=hdiutil 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hdiutil 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_hg
+compinit:492> _i_name=_hg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ hg == -[pPkK](n|) ]]
+compinit:503> compdef -na _hg hg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hg == *=* ]]
+compdef:79> func=_hg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ hg == -N ]]
+compdef:134> [[ hg == -p ]]
+compdef:136> [[ hg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hg == *=* ]]
+compdef:159> cmd=hg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_history
+compinit:492> _i_name=_history 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _history
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_history_complete_word
+compinit:492> _i_name=_history_complete_word 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -K == -[pPkK](n|) ]]
+compinit:501> compdef -Kna _history_complete_word _history-complete-older complete-word '\e/' _history-complete-newer complete-word '\e,'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K == p ]]
+compdef:26> [[ K == P ]]
+compdef:28> [[ K == K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _history_complete_word == *=* ]]
+compdef:79> func=_history_complete_word 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _history_complete_word
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _history-complete-older ]]
+compdef:86> [[ 6 -lt 3 ]]
+compdef:90> [[ _history-complete-older == _* ]]
+compdef:91> [[ complete-word == .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word == .menu-select ]]
+compdef:93> zle -C _history-complete-older .complete-word _history_complete_word
+compdef:94> [[ -n yes ]]
+compdef:95> IFS=' 	' +compdef:95> read -A opt
+compdef:95> bindkey '\e/'
+compdef:96> [[ undefined-key == undefined-key ]]
+compdef:96> bindkey '\e/' _history-complete-older
+compdef:100> shift 3
+compdef:85> [[ -n _history-complete-newer ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _history-complete-newer == _* ]]
+compdef:91> [[ complete-word == .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word == .menu-select ]]
+compdef:93> zle -C _history-complete-newer .complete-word _history_complete_word
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\e,'
+compdef:95> IFS=' 	' +compdef:95> read -A opt
+compdef:96> [[ undefined-key == undefined-key ]]
+compdef:96> bindkey '\e,' _history-complete-newer
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_history_modifiers
+compinit:492> _i_name=_history_modifiers 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _history_modifiers
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_hosts
+compinit:492> _i_name=_hosts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ftp == -[pPkK](n|) ]]
+compinit:503> compdef -na _hosts ftp rwho rup xping traceroute host aaaa zone mx ns soa txt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hosts == *=* ]]
+compdef:79> func=_hosts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hosts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ ftp == -N ]]
+compdef:134> [[ ftp == -p ]]
+compdef:136> [[ ftp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ftp == *=* ]]
+compdef:159> cmd=ftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ rwho == -N ]]
+compdef:134> [[ rwho == -p ]]
+compdef:136> [[ rwho == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rwho == *=* ]]
+compdef:159> cmd=rwho 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ rup == -N ]]
+compdef:134> [[ rup == -p ]]
+compdef:136> [[ rup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rup == *=* ]]
+compdef:159> cmd=rup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ xping == -N ]]
+compdef:134> [[ xping == -p ]]
+compdef:136> [[ xping == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xping == *=* ]]
+compdef:159> cmd=xping 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ traceroute == -N ]]
+compdef:134> [[ traceroute == -p ]]
+compdef:136> [[ traceroute == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ traceroute == *=* ]]
+compdef:159> cmd=traceroute 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ host == -N ]]
+compdef:134> [[ host == -p ]]
+compdef:136> [[ host == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ host == *=* ]]
+compdef:159> cmd=host 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ aaaa == -N ]]
+compdef:134> [[ aaaa == -p ]]
+compdef:136> [[ aaaa == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aaaa == *=* ]]
+compdef:159> cmd=aaaa 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ zone == -N ]]
+compdef:134> [[ zone == -p ]]
+compdef:136> [[ zone == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zone == *=* ]]
+compdef:159> cmd=zone 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mx == -N ]]
+compdef:134> [[ mx == -p ]]
+compdef:136> [[ mx == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mx == *=* ]]
+compdef:159> cmd=mx 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ns == -N ]]
+compdef:134> [[ ns == -p ]]
+compdef:136> [[ ns == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ns == *=* ]]
+compdef:159> cmd=ns 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ soa == -N ]]
+compdef:134> [[ soa == -p ]]
+compdef:136> [[ soa == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ soa == *=* ]]
+compdef:159> cmd=soa 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ txt == -N ]]
+compdef:134> [[ txt == -p ]]
+compdef:136> [[ txt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ txt == *=* ]]
+compdef:159> cmd=txt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_hwinfo
+compinit:492> _i_name=_hwinfo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ hwinfo == -[pPkK](n|) ]]
+compinit:503> compdef -na _hwinfo hwinfo
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hwinfo == *=* ]]
+compdef:79> func=_hwinfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hwinfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ hwinfo == -N ]]
+compdef:134> [[ hwinfo == -p ]]
+compdef:136> [[ hwinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hwinfo == *=* ]]
+compdef:159> cmd=hwinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hwinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_iconv
+compinit:492> _i_name=_iconv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ iconv == -[pPkK](n|) ]]
+compinit:503> compdef -na _iconv iconv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iconv == *=* ]]
+compdef:79> func=_iconv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iconv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iconv == -N ]]
+compdef:134> [[ iconv == -p ]]
+compdef:136> [[ iconv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iconv == *=* ]]
+compdef:159> cmd=iconv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iconv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_id
+compinit:492> _i_name=_id 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ id == -[pPkK](n|) ]]
+compinit:503> compdef -na _id id
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _id == *=* ]]
+compdef:79> func=_id 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _id
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ id == -N ]]
+compdef:134> [[ id == -p ]]
+compdef:136> [[ id == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ id == *=* ]]
+compdef:159> cmd=id 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_id 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ifconfig
+compinit:492> _i_name=_ifconfig 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ifconfig == -[pPkK](n|) ]]
+compinit:503> compdef -na _ifconfig ifconfig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ifconfig == *=* ]]
+compdef:79> func=_ifconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ifconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ifconfig == -N ]]
+compdef:134> [[ ifconfig == -p ]]
+compdef:136> [[ ifconfig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ifconfig == *=* ]]
+compdef:159> cmd=ifconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ifconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_iftop
+compinit:492> _i_name=_iftop 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ iftop == -[pPkK](n|) ]]
+compinit:503> compdef -na _iftop iftop
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iftop == *=* ]]
+compdef:79> func=_iftop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iftop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iftop == -N ]]
+compdef:134> [[ iftop == -p ]]
+compdef:136> [[ iftop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iftop == *=* ]]
+compdef:159> cmd=iftop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iftop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ignored
+compinit:492> _i_name=_ignored 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _ignored
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_imagemagick
+compinit:492> _i_name=_imagemagick 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ animate == -[pPkK](n|) ]]
+compinit:503> compdef -na _imagemagick animate composite combine convert display identify import mogrify montage xtp
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 12  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 11  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _imagemagick == *=* ]]
+compdef:79> func=_imagemagick 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _imagemagick
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  10  ))
+compdef:132> [[ animate == -N ]]
+compdef:134> [[ animate == -p ]]
+compdef:136> [[ animate == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ animate == *=* ]]
+compdef:159> cmd=animate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ composite == -N ]]
+compdef:134> [[ composite == -p ]]
+compdef:136> [[ composite == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ composite == *=* ]]
+compdef:159> cmd=composite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ combine == -N ]]
+compdef:134> [[ combine == -p ]]
+compdef:136> [[ combine == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ combine == *=* ]]
+compdef:159> cmd=combine 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ convert == -N ]]
+compdef:134> [[ convert == -p ]]
+compdef:136> [[ convert == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ convert == *=* ]]
+compdef:159> cmd=convert 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ display == -N ]]
+compdef:134> [[ display == -p ]]
+compdef:136> [[ display == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ display == *=* ]]
+compdef:159> cmd=display 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ identify == -N ]]
+compdef:134> [[ identify == -p ]]
+compdef:136> [[ identify == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ identify == *=* ]]
+compdef:159> cmd=identify 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ import == -N ]]
+compdef:134> [[ import == -p ]]
+compdef:136> [[ import == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ import == *=* ]]
+compdef:159> cmd=import 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mogrify == -N ]]
+compdef:134> [[ mogrify == -p ]]
+compdef:136> [[ mogrify == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mogrify == *=* ]]
+compdef:159> cmd=mogrify 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ montage == -N ]]
+compdef:134> [[ montage == -p ]]
+compdef:136> [[ montage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ montage == *=* ]]
+compdef:159> cmd=montage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xtp == -N ]]
+compdef:134> [[ xtp == -p ]]
+compdef:136> [[ xtp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xtp == *=* ]]
+compdef:159> cmd=xtp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_in_vared
+compinit:492> _i_name=_in_vared 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -vared- == -[pPkK](n|) ]]
+compinit:503> compdef -na _in_vared -vared-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _in_vared == *=* ]]
+compdef:79> func=_in_vared 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _in_vared
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -vared- == -N ]]
+compdef:134> [[ -vared- == -p ]]
+compdef:136> [[ -vared- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -vared- == *=* ]]
+compdef:159> cmd=-vared- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_in_vared 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_inetadm
+compinit:492> _i_name=_inetadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ inetadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _inetadm inetadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _inetadm == *=* ]]
+compdef:79> func=_inetadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _inetadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ inetadm == -N ]]
+compdef:134> [[ inetadm == -p ]]
+compdef:136> [[ inetadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ inetadm == *=* ]]
+compdef:159> cmd=inetadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_inetadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_init_d
+compinit:492> _i_name=_init_d 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -p == -[pPkK](n|) ]]
+compinit:501> compdef -pna _init_d '*/(init|rc[0-9S]#).d/*'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case p (a)
+compdef:15> case p (n)
+compdef:15> case p ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ p == p ]]
+compdef:25> type=pattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _init_d == *=* ]]
+compdef:79> func=_init_d 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _init_d
+compdef:81> shift
+compdef:83> case pattern (widgetkey)
+compdef:83> case pattern (key)
+compdef:83> case pattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '*/(init|rc[0-9S]#).d/*' == -N ]]
+compdef:134> [[ '*/(init|rc[0-9S]#).d/*' == -p ]]
+compdef:136> [[ '*/(init|rc[0-9S]#).d/*' == -P ]]
+compdef:139> case pattern (pattern)
+compdef:141> [[ '*/(init|rc[0-9S]#).d/*' == (#b)(*)=(*) ]]
+compdef:144> _patcomps[$1]=_init_d 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_initctl
+compinit:492> _i_name=_initctl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ initctl == -[pPkK](n|) ]]
+compinit:503> compdef -na _initctl initctl start stop restart reload status
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _initctl == *=* ]]
+compdef:79> func=_initctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _initctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ initctl == -N ]]
+compdef:134> [[ initctl == -p ]]
+compdef:136> [[ initctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ initctl == *=* ]]
+compdef:159> cmd=initctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ start == -N ]]
+compdef:134> [[ start == -p ]]
+compdef:136> [[ start == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ start == *=* ]]
+compdef:159> cmd=start 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ stop == -N ]]
+compdef:134> [[ stop == -p ]]
+compdef:136> [[ stop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stop == *=* ]]
+compdef:159> cmd=stop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ restart == -N ]]
+compdef:134> [[ restart == -p ]]
+compdef:136> [[ restart == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ restart == *=* ]]
+compdef:159> cmd=restart 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ reload == -N ]]
+compdef:134> [[ reload == -p ]]
+compdef:136> [[ reload == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ reload == *=* ]]
+compdef:159> cmd=reload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ status == -N ]]
+compdef:134> [[ status == -p ]]
+compdef:136> [[ status == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ status == *=* ]]
+compdef:159> cmd=status 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_invoke-rc.d
+compinit:492> _i_name=_invoke-rc.d 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ invoke-rc.d == -[pPkK](n|) ]]
+compinit:503> compdef -na _invoke-rc.d invoke-rc.d
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _invoke-rc.d == *=* ]]
+compdef:79> func=_invoke-rc.d 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _invoke-rc.d
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ invoke-rc.d == -N ]]
+compdef:134> [[ invoke-rc.d == -p ]]
+compdef:136> [[ invoke-rc.d == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ invoke-rc.d == *=* ]]
+compdef:159> cmd=invoke-rc.d 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_invoke-rc.d 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ionice
+compinit:492> _i_name=_ionice 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ionice == -[pPkK](n|) ]]
+compinit:503> compdef -na _ionice ionice
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ionice == *=* ]]
+compdef:79> func=_ionice 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ionice
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ionice == -N ]]
+compdef:134> [[ ionice == -p ]]
+compdef:136> [[ ionice == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ionice == *=* ]]
+compdef:159> cmd=ionice 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ionice 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ip
+compinit:492> _i_name=_ip 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ip == -[pPkK](n|) ]]
+compinit:503> compdef -na _ip ip
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ip == *=* ]]
+compdef:79> func=_ip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ip == -N ]]
+compdef:134> [[ ip == -p ]]
+compdef:136> [[ ip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ip == *=* ]]
+compdef:159> cmd=ip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ipadm
+compinit:492> _i_name=_ipadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ipadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _ipadm ipadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ipadm == *=* ]]
+compdef:79> func=_ipadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ipadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ipadm == -N ]]
+compdef:134> [[ ipadm == -p ]]
+compdef:136> [[ ipadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ipadm == *=* ]]
+compdef:159> cmd=ipadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ipadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ipset
+compinit:492> _i_name=_ipset 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ipset == -[pPkK](n|) ]]
+compinit:503> compdef -na _ipset ipset
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ipset == *=* ]]
+compdef:79> func=_ipset 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ipset
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ipset == -N ]]
+compdef:134> [[ ipset == -p ]]
+compdef:136> [[ ipset == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ipset == *=* ]]
+compdef:159> cmd=ipset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ipset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_iptables
+compinit:492> _i_name=_iptables 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ iptables == -[pPkK](n|) ]]
+compinit:503> compdef -na _iptables iptables iptables-save iptables-restore
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iptables == *=* ]]
+compdef:79> func=_iptables 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iptables
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ iptables == -N ]]
+compdef:134> [[ iptables == -p ]]
+compdef:136> [[ iptables == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iptables == *=* ]]
+compdef:159> cmd=iptables 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iptables 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ iptables-save == -N ]]
+compdef:134> [[ iptables-save == -p ]]
+compdef:136> [[ iptables-save == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iptables-save == *=* ]]
+compdef:159> cmd=iptables-save 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iptables 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ iptables-restore == -N ]]
+compdef:134> [[ iptables-restore == -p ]]
+compdef:136> [[ iptables-restore == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iptables-restore == *=* ]]
+compdef:159> cmd=iptables-restore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iptables 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_irssi
+compinit:492> _i_name=_irssi 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ irssi == -[pPkK](n|) ]]
+compinit:503> compdef -na _irssi irssi
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _irssi == *=* ]]
+compdef:79> func=_irssi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _irssi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ irssi == -N ]]
+compdef:134> [[ irssi == -p ]]
+compdef:136> [[ irssi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ irssi == *=* ]]
+compdef:159> cmd=irssi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_irssi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ispell
+compinit:492> _i_name=_ispell 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ispell == -[pPkK](n|) ]]
+compinit:503> compdef -na _ispell ispell buildhash munchlist findaffix tryaffix icombine ijoin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ispell == *=* ]]
+compdef:79> func=_ispell 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ispell
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ ispell == -N ]]
+compdef:134> [[ ispell == -p ]]
+compdef:136> [[ ispell == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ispell == *=* ]]
+compdef:159> cmd=ispell 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ buildhash == -N ]]
+compdef:134> [[ buildhash == -p ]]
+compdef:136> [[ buildhash == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ buildhash == *=* ]]
+compdef:159> cmd=buildhash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ munchlist == -N ]]
+compdef:134> [[ munchlist == -p ]]
+compdef:136> [[ munchlist == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ munchlist == *=* ]]
+compdef:159> cmd=munchlist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ findaffix == -N ]]
+compdef:134> [[ findaffix == -p ]]
+compdef:136> [[ findaffix == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ findaffix == *=* ]]
+compdef:159> cmd=findaffix 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tryaffix == -N ]]
+compdef:134> [[ tryaffix == -p ]]
+compdef:136> [[ tryaffix == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tryaffix == *=* ]]
+compdef:159> cmd=tryaffix 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ icombine == -N ]]
+compdef:134> [[ icombine == -p ]]
+compdef:136> [[ icombine == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ icombine == *=* ]]
+compdef:159> cmd=icombine 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ijoin == -N ]]
+compdef:134> [[ ijoin == -p ]]
+compdef:136> [[ ijoin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ijoin == *=* ]]
+compdef:159> cmd=ijoin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_iwconfig
+compinit:492> _i_name=_iwconfig 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ iwconfig == -[pPkK](n|) ]]
+compinit:503> compdef -na _iwconfig iwconfig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iwconfig == *=* ]]
+compdef:79> func=_iwconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iwconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iwconfig == -N ]]
+compdef:134> [[ iwconfig == -p ]]
+compdef:136> [[ iwconfig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iwconfig == *=* ]]
+compdef:159> cmd=iwconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iwconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_java
+compinit:492> _i_name=_java 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ javac == -[pPkK](n|) ]]
+compinit:503> compdef -na _java javac java javadoc appletviewer jar jdb javah javap extcheck rmic rmiregistry rmid serialver native2ascii keytool jarsigner policytool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 19  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 18  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _java == *=* ]]
+compdef:79> func=_java 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _java
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  17  ))
+compdef:132> [[ javac == -N ]]
+compdef:134> [[ javac == -p ]]
+compdef:136> [[ javac == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javac == *=* ]]
+compdef:159> cmd=javac 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ java == -N ]]
+compdef:134> [[ java == -p ]]
+compdef:136> [[ java == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ java == *=* ]]
+compdef:159> cmd=java 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ javadoc == -N ]]
+compdef:134> [[ javadoc == -p ]]
+compdef:136> [[ javadoc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javadoc == *=* ]]
+compdef:159> cmd=javadoc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ appletviewer == -N ]]
+compdef:134> [[ appletviewer == -p ]]
+compdef:136> [[ appletviewer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ appletviewer == *=* ]]
+compdef:159> cmd=appletviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ jar == -N ]]
+compdef:134> [[ jar == -p ]]
+compdef:136> [[ jar == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jar == *=* ]]
+compdef:159> cmd=jar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ jdb == -N ]]
+compdef:134> [[ jdb == -p ]]
+compdef:136> [[ jdb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jdb == *=* ]]
+compdef:159> cmd=jdb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ javah == -N ]]
+compdef:134> [[ javah == -p ]]
+compdef:136> [[ javah == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javah == *=* ]]
+compdef:159> cmd=javah 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ javap == -N ]]
+compdef:134> [[ javap == -p ]]
+compdef:136> [[ javap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javap == *=* ]]
+compdef:159> cmd=javap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ extcheck == -N ]]
+compdef:134> [[ extcheck == -p ]]
+compdef:136> [[ extcheck == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ extcheck == *=* ]]
+compdef:159> cmd=extcheck 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ rmic == -N ]]
+compdef:134> [[ rmic == -p ]]
+compdef:136> [[ rmic == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmic == *=* ]]
+compdef:159> cmd=rmic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ rmiregistry == -N ]]
+compdef:134> [[ rmiregistry == -p ]]
+compdef:136> [[ rmiregistry == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmiregistry == *=* ]]
+compdef:159> cmd=rmiregistry 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rmid == -N ]]
+compdef:134> [[ rmid == -p ]]
+compdef:136> [[ rmid == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmid == *=* ]]
+compdef:159> cmd=rmid 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ serialver == -N ]]
+compdef:134> [[ serialver == -p ]]
+compdef:136> [[ serialver == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ serialver == *=* ]]
+compdef:159> cmd=serialver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ native2ascii == -N ]]
+compdef:134> [[ native2ascii == -p ]]
+compdef:136> [[ native2ascii == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ native2ascii == *=* ]]
+compdef:159> cmd=native2ascii 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ keytool == -N ]]
+compdef:134> [[ keytool == -p ]]
+compdef:136> [[ keytool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ keytool == *=* ]]
+compdef:159> cmd=keytool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ jarsigner == -N ]]
+compdef:134> [[ jarsigner == -p ]]
+compdef:136> [[ jarsigner == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jarsigner == *=* ]]
+compdef:159> cmd=jarsigner 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ policytool == -N ]]
+compdef:134> [[ policytool == -p ]]
+compdef:136> [[ policytool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ policytool == *=* ]]
+compdef:159> cmd=policytool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_java_class
+compinit:492> _i_name=_java_class 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _java_class
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_jobs
+compinit:492> _i_name=_jobs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _jobs
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_jobs_bg
+compinit:492> _i_name=_jobs_bg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ bg == -[pPkK](n|) ]]
+compinit:503> compdef -na _jobs_bg bg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jobs_bg == *=* ]]
+compdef:79> func=_jobs_bg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jobs_bg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bg == -N ]]
+compdef:134> [[ bg == -p ]]
+compdef:136> [[ bg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bg == *=* ]]
+compdef:159> cmd=bg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_bg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_jobs_builtin
+compinit:492> _i_name=_jobs_builtin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ jobs == -[pPkK](n|) ]]
+compinit:503> compdef -na _jobs_builtin jobs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jobs_builtin == *=* ]]
+compdef:79> func=_jobs_builtin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jobs_builtin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ jobs == -N ]]
+compdef:134> [[ jobs == -p ]]
+compdef:136> [[ jobs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jobs == *=* ]]
+compdef:159> cmd=jobs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_builtin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_jobs_fg
+compinit:492> _i_name=_jobs_fg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ disown == -[pPkK](n|) ]]
+compinit:503> compdef -na _jobs_fg disown fg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jobs_fg == *=* ]]
+compdef:79> func=_jobs_fg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jobs_fg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ disown == -N ]]
+compdef:134> [[ disown == -p ]]
+compdef:136> [[ disown == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ disown == *=* ]]
+compdef:159> cmd=disown 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_fg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fg == -N ]]
+compdef:134> [[ fg == -p ]]
+compdef:136> [[ fg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fg == *=* ]]
+compdef:159> cmd=fg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_fg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_joe
+compinit:492> _i_name=_joe 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ joe == -[pPkK](n|) ]]
+compinit:503> compdef -na _joe joe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _joe == *=* ]]
+compdef:79> func=_joe 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _joe
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ joe == -N ]]
+compdef:134> [[ joe == -p ]]
+compdef:136> [[ joe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ joe == *=* ]]
+compdef:159> cmd=joe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_joe 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_join
+compinit:492> _i_name=_join 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ join == -[pPkK](n|) ]]
+compinit:503> compdef -na _join join
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _join == *=* ]]
+compdef:79> func=_join 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _join
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ join == -N ]]
+compdef:134> [[ join == -p ]]
+compdef:136> [[ join == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ join == *=* ]]
+compdef:159> cmd=join 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_join 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_kfmclient
+compinit:492> _i_name=_kfmclient 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ kfmclient == -[pPkK](n|) ]]
+compinit:503> compdef -na _kfmclient kfmclient kioclient
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kfmclient == *=* ]]
+compdef:79> func=_kfmclient 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kfmclient
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ kfmclient == -N ]]
+compdef:134> [[ kfmclient == -p ]]
+compdef:136> [[ kfmclient == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kfmclient == *=* ]]
+compdef:159> cmd=kfmclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kfmclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ kioclient == -N ]]
+compdef:134> [[ kioclient == -p ]]
+compdef:136> [[ kioclient == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kioclient == *=* ]]
+compdef:159> cmd=kioclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kfmclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_kill
+compinit:492> _i_name=_kill 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ kill == -[pPkK](n|) ]]
+compinit:503> compdef -na _kill kill
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kill == *=* ]]
+compdef:79> func=_kill 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kill
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ kill == -N ]]
+compdef:134> [[ kill == -p ]]
+compdef:136> [[ kill == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kill == *=* ]]
+compdef:159> cmd=kill 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kill 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_killall
+compinit:492> _i_name=_killall 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ killall == -[pPkK](n|) ]]
+compinit:503> compdef -na _killall killall killall5
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _killall == *=* ]]
+compdef:79> func=_killall 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _killall
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ killall == -N ]]
+compdef:134> [[ killall == -p ]]
+compdef:136> [[ killall == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ killall == *=* ]]
+compdef:159> cmd=killall 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_killall 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ killall5 == -N ]]
+compdef:134> [[ killall5 == -p ]]
+compdef:136> [[ killall5 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ killall5 == *=* ]]
+compdef:159> cmd=killall5 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_killall 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_kld
+compinit:492> _i_name=_kld 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ kldload == -[pPkK](n|) ]]
+compinit:503> compdef -na _kld kldload kldunload
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kld == *=* ]]
+compdef:79> func=_kld 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kld
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ kldload == -N ]]
+compdef:134> [[ kldload == -p ]]
+compdef:136> [[ kldload == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kldload == *=* ]]
+compdef:159> cmd=kldload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kld 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ kldunload == -N ]]
+compdef:134> [[ kldunload == -p ]]
+compdef:136> [[ kldunload == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kldunload == *=* ]]
+compdef:159> cmd=kldunload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kld 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_knock
+compinit:492> _i_name=_knock 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ knock == -[pPkK](n|) ]]
+compinit:503> compdef -na _knock knock
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _knock == *=* ]]
+compdef:79> func=_knock 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _knock
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ knock == -N ]]
+compdef:134> [[ knock == -p ]]
+compdef:136> [[ knock == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ knock == *=* ]]
+compdef:159> cmd=knock 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_knock 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_kvno
+compinit:492> _i_name=_kvno 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ kvno == -[pPkK](n|) ]]
+compinit:503> compdef -na _kvno kvno
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kvno == *=* ]]
+compdef:79> func=_kvno 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kvno
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ kvno == -N ]]
+compdef:134> [[ kvno == -p ]]
+compdef:136> [[ kvno == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kvno == *=* ]]
+compdef:159> cmd=kvno 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kvno 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_last
+compinit:492> _i_name=_last 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ last == -[pPkK](n|) ]]
+compinit:503> compdef -na _last last lastb
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _last == *=* ]]
+compdef:79> func=_last 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _last
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ last == -N ]]
+compdef:134> [[ last == -p ]]
+compdef:136> [[ last == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ last == *=* ]]
+compdef:159> cmd=last 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_last 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lastb == -N ]]
+compdef:134> [[ lastb == -p ]]
+compdef:136> [[ lastb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lastb == *=* ]]
+compdef:159> cmd=lastb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_last 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ldd
+compinit:492> _i_name=_ldd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ldd == -[pPkK](n|) ]]
+compinit:503> compdef -na _ldd ldd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ldd == *=* ]]
+compdef:79> func=_ldd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ldd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ldd == -N ]]
+compdef:134> [[ ldd == -p ]]
+compdef:136> [[ ldd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ldd == *=* ]]
+compdef:159> cmd=ldd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ldd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_less
+compinit:492> _i_name=_less 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ less == -[pPkK](n|) ]]
+compinit:503> compdef -na _less less -value-,LESS,-default- -value-,LESSCHARSET,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _less == *=* ]]
+compdef:79> func=_less 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _less
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ less == -N ]]
+compdef:134> [[ less == -p ]]
+compdef:136> [[ less == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ less == *=* ]]
+compdef:159> cmd=less 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_less 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,LESS,-default- == -N ]]
+compdef:134> [[ -value-,LESS,-default- == -p ]]
+compdef:136> [[ -value-,LESS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LESS,-default- == *=* ]]
+compdef:159> cmd=-value-,LESS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_less 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,LESSCHARSET,-default- == -N ]]
+compdef:134> [[ -value-,LESSCHARSET,-default- == -p ]]
+compdef:136> [[ -value-,LESSCHARSET,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LESSCHARSET,-default- == *=* ]]
+compdef:159> cmd=-value-,LESSCHARSET,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_less 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lha
+compinit:492> _i_name=_lha 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lha == -[pPkK](n|) ]]
+compinit:503> compdef -na _lha lha
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lha == *=* ]]
+compdef:79> func=_lha 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lha
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lha == -N ]]
+compdef:134> [[ lha == -p ]]
+compdef:136> [[ lha == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lha == *=* ]]
+compdef:159> cmd=lha 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lha 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lighttpd
+compinit:492> _i_name=_lighttpd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lighty-enable-mod == -[pPkK](n|) ]]
+compinit:503> compdef -na _lighttpd lighty-enable-mod lighty-disable-mod
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lighttpd == *=* ]]
+compdef:79> func=_lighttpd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lighttpd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ lighty-enable-mod == -N ]]
+compdef:134> [[ lighty-enable-mod == -p ]]
+compdef:136> [[ lighty-enable-mod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lighty-enable-mod == *=* ]]
+compdef:159> cmd=lighty-enable-mod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lighttpd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lighty-disable-mod == -N ]]
+compdef:134> [[ lighty-disable-mod == -p ]]
+compdef:136> [[ lighty-disable-mod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lighty-disable-mod == *=* ]]
+compdef:159> cmd=lighty-disable-mod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lighttpd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_limit
+compinit:492> _i_name=_limit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ limit == -[pPkK](n|) ]]
+compinit:503> compdef -na _limit limit
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _limit == *=* ]]
+compdef:79> func=_limit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _limit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ limit == -N ]]
+compdef:134> [[ limit == -p ]]
+compdef:136> [[ limit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ limit == *=* ]]
+compdef:159> cmd=limit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_limit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_limits
+compinit:492> _i_name=_limits 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unlimit == -[pPkK](n|) ]]
+compinit:503> compdef -na _limits unlimit
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _limits == *=* ]]
+compdef:79> func=_limits 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _limits
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unlimit == -N ]]
+compdef:134> [[ unlimit == -p ]]
+compdef:136> [[ unlimit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unlimit == *=* ]]
+compdef:159> cmd=unlimit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_limits 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_links
+compinit:492> _i_name=_links 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ links == -[pPkK](n|) ]]
+compinit:503> compdef -na _links links
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _links == *=* ]]
+compdef:79> func=_links 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _links
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ links == -N ]]
+compdef:134> [[ links == -p ]]
+compdef:136> [[ links == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ links == *=* ]]
+compdef:159> cmd=links 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_links 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lintian
+compinit:492> _i_name=_lintian 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lintian == -[pPkK](n|) ]]
+compinit:503> compdef -na _lintian lintian lintian-info
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lintian == *=* ]]
+compdef:79> func=_lintian 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lintian
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ lintian == -N ]]
+compdef:134> [[ lintian == -p ]]
+compdef:136> [[ lintian == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lintian == *=* ]]
+compdef:159> cmd=lintian 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lintian 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lintian-info == -N ]]
+compdef:134> [[ lintian-info == -p ]]
+compdef:136> [[ lintian-info == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lintian-info == *=* ]]
+compdef:159> cmd=lintian-info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lintian 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_list
+compinit:492> _i_name=_list 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _list
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_list_files
+compinit:492> _i_name=_list_files 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _list_files
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ln
+compinit:492> _i_name=_ln 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ln == -[pPkK](n|) ]]
+compinit:503> compdef -na _ln ln gln
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ln == *=* ]]
+compdef:79> func=_ln 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ln
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ln == -N ]]
+compdef:134> [[ ln == -p ]]
+compdef:136> [[ ln == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ln == *=* ]]
+compdef:159> cmd=ln 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ln 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gln == -N ]]
+compdef:134> [[ gln == -p ]]
+compdef:136> [[ gln == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gln == *=* ]]
+compdef:159> cmd=gln 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ln 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_loadkeys
+compinit:492> _i_name=_loadkeys 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ loadkeys == -[pPkK](n|) ]]
+compinit:503> compdef -na _loadkeys loadkeys
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _loadkeys == *=* ]]
+compdef:79> func=_loadkeys 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _loadkeys
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ loadkeys == -N ]]
+compdef:134> [[ loadkeys == -p ]]
+compdef:136> [[ loadkeys == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ loadkeys == *=* ]]
+compdef:159> cmd=loadkeys 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_loadkeys 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_locales
+compinit:492> _i_name=_locales 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -value-,LANG,-default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _locales -value-,LANG,-default- -value-,LANGUAGE,-default- -P '-value-,LC_*,-default-'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _locales == *=* ]]
+compdef:79> func=_locales 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _locales
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ -value-,LANG,-default- == -N ]]
+compdef:134> [[ -value-,LANG,-default- == -p ]]
+compdef:136> [[ -value-,LANG,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LANG,-default- == *=* ]]
+compdef:159> cmd=-value-,LANG,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locales 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,LANGUAGE,-default- == -N ]]
+compdef:134> [[ -value-,LANGUAGE,-default- == -p ]]
+compdef:136> [[ -value-,LANGUAGE,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LANGUAGE,-default- == *=* ]]
+compdef:159> cmd=-value-,LANGUAGE,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locales 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P == -N ]]
+compdef:134> [[ -P == -p ]]
+compdef:136> [[ -P == -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,LC_*,-default-' == -N ]]
+compdef:134> [[ '-value-,LC_*,-default-' == -p ]]
+compdef:136> [[ '-value-,LC_*,-default-' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,LC_*,-default-' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_locales 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_locate
+compinit:492> _i_name=_locate 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ locate == -[pPkK](n|) ]]
+compinit:503> compdef -na _locate locate mlocate slocate
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _locate == *=* ]]
+compdef:79> func=_locate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _locate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ locate == -N ]]
+compdef:134> [[ locate == -p ]]
+compdef:136> [[ locate == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ locate == *=* ]]
+compdef:159> cmd=locate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ mlocate == -N ]]
+compdef:134> [[ mlocate == -p ]]
+compdef:136> [[ mlocate == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mlocate == *=* ]]
+compdef:159> cmd=mlocate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ slocate == -N ]]
+compdef:134> [[ slocate == -p ]]
+compdef:136> [[ slocate == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ slocate == *=* ]]
+compdef:159> cmd=slocate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_logical_volumes
+compinit:492> _i_name=_logical_volumes 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _logical_volumes
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_look
+compinit:492> _i_name=_look 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ look == -[pPkK](n|) ]]
+compinit:503> compdef -na _look look
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _look == *=* ]]
+compdef:79> func=_look 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _look
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ look == -N ]]
+compdef:134> [[ look == -p ]]
+compdef:136> [[ look == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ look == *=* ]]
+compdef:159> cmd=look 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_look 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_losetup
+compinit:492> _i_name=_losetup 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ losetup == -[pPkK](n|) ]]
+compinit:503> compdef -na _losetup losetup
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _losetup == *=* ]]
+compdef:79> func=_losetup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _losetup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ losetup == -N ]]
+compdef:134> [[ losetup == -p ]]
+compdef:136> [[ losetup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ losetup == *=* ]]
+compdef:159> cmd=losetup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_losetup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lp
+compinit:492> _i_name=_lp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lp == -[pPkK](n|) ]]
+compinit:503> compdef -na _lp lp lpr lpq lprm lpoptions lpstat lpinfo lpadmin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lp == *=* ]]
+compdef:79> func=_lp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ lp == -N ]]
+compdef:134> [[ lp == -p ]]
+compdef:136> [[ lp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lp == *=* ]]
+compdef:159> cmd=lp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ lpr == -N ]]
+compdef:134> [[ lpr == -p ]]
+compdef:136> [[ lpr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpr == *=* ]]
+compdef:159> cmd=lpr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ lpq == -N ]]
+compdef:134> [[ lpq == -p ]]
+compdef:136> [[ lpq == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpq == *=* ]]
+compdef:159> cmd=lpq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ lprm == -N ]]
+compdef:134> [[ lprm == -p ]]
+compdef:136> [[ lprm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lprm == *=* ]]
+compdef:159> cmd=lprm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ lpoptions == -N ]]
+compdef:134> [[ lpoptions == -p ]]
+compdef:136> [[ lpoptions == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpoptions == *=* ]]
+compdef:159> cmd=lpoptions 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ lpstat == -N ]]
+compdef:134> [[ lpstat == -p ]]
+compdef:136> [[ lpstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpstat == *=* ]]
+compdef:159> cmd=lpstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ lpinfo == -N ]]
+compdef:134> [[ lpinfo == -p ]]
+compdef:136> [[ lpinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpinfo == *=* ]]
+compdef:159> cmd=lpinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lpadmin == -N ]]
+compdef:134> [[ lpadmin == -p ]]
+compdef:136> [[ lpadmin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpadmin == *=* ]]
+compdef:159> cmd=lpadmin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ls
+compinit:492> _i_name=_ls 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ls == -[pPkK](n|) ]]
+compinit:503> compdef -na _ls ls gls
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ls == *=* ]]
+compdef:79> func=_ls 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ls
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ls == -N ]]
+compdef:134> [[ ls == -p ]]
+compdef:136> [[ ls == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ls == *=* ]]
+compdef:159> cmd=ls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gls == -N ]]
+compdef:134> [[ gls == -p ]]
+compdef:136> [[ gls == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gls == *=* ]]
+compdef:159> cmd=gls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lscfg
+compinit:492> _i_name=_lscfg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lscfg == -[pPkK](n|) ]]
+compinit:503> compdef -na _lscfg lscfg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lscfg == *=* ]]
+compdef:79> func=_lscfg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lscfg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lscfg == -N ]]
+compdef:134> [[ lscfg == -p ]]
+compdef:136> [[ lscfg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lscfg == *=* ]]
+compdef:159> cmd=lscfg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lscfg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lsdev
+compinit:492> _i_name=_lsdev 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lsdev == -[pPkK](n|) ]]
+compinit:503> compdef -na _lsdev lsdev
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsdev == *=* ]]
+compdef:79> func=_lsdev 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsdev
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsdev == -N ]]
+compdef:134> [[ lsdev == -p ]]
+compdef:136> [[ lsdev == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsdev == *=* ]]
+compdef:159> cmd=lsdev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsdev 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lslv
+compinit:492> _i_name=_lslv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lslv == -[pPkK](n|) ]]
+compinit:503> compdef -na _lslv lslv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lslv == *=* ]]
+compdef:79> func=_lslv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lslv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lslv == -N ]]
+compdef:134> [[ lslv == -p ]]
+compdef:136> [[ lslv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lslv == *=* ]]
+compdef:159> cmd=lslv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lslv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lsof
+compinit:492> _i_name=_lsof 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lsof == -[pPkK](n|) ]]
+compinit:503> compdef -na _lsof lsof
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsof == *=* ]]
+compdef:79> func=_lsof 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsof
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsof == -N ]]
+compdef:134> [[ lsof == -p ]]
+compdef:136> [[ lsof == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsof == *=* ]]
+compdef:159> cmd=lsof 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsof 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lspv
+compinit:492> _i_name=_lspv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lspv == -[pPkK](n|) ]]
+compinit:503> compdef -na _lspv lspv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lspv == *=* ]]
+compdef:79> func=_lspv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lspv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lspv == -N ]]
+compdef:134> [[ lspv == -p ]]
+compdef:136> [[ lspv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lspv == *=* ]]
+compdef:159> cmd=lspv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lspv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lsusb
+compinit:492> _i_name=_lsusb 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lsusb == -[pPkK](n|) ]]
+compinit:503> compdef -na _lsusb lsusb
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsusb == *=* ]]
+compdef:79> func=_lsusb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsusb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsusb == -N ]]
+compdef:134> [[ lsusb == -p ]]
+compdef:136> [[ lsusb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsusb == *=* ]]
+compdef:159> cmd=lsusb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsusb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lsvg
+compinit:492> _i_name=_lsvg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lsvg == -[pPkK](n|) ]]
+compinit:503> compdef -na _lsvg lsvg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsvg == *=* ]]
+compdef:79> func=_lsvg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsvg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsvg == -N ]]
+compdef:134> [[ lsvg == -p ]]
+compdef:136> [[ lsvg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsvg == *=* ]]
+compdef:159> cmd=lsvg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsvg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lynx
+compinit:492> _i_name=_lynx 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lynx == -[pPkK](n|) ]]
+compinit:503> compdef -na _lynx lynx
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lynx == *=* ]]
+compdef:79> func=_lynx 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lynx
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lynx == -N ]]
+compdef:134> [[ lynx == -p ]]
+compdef:136> [[ lynx == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lynx == *=* ]]
+compdef:159> cmd=lynx 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lynx 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_lzop
+compinit:492> _i_name=_lzop 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lzop == -[pPkK](n|) ]]
+compinit:503> compdef -na _lzop lzop
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lzop == *=* ]]
+compdef:79> func=_lzop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lzop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lzop == -N ]]
+compdef:134> [[ lzop == -p ]]
+compdef:136> [[ lzop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lzop == *=* ]]
+compdef:159> cmd=lzop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lzop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mac_applications
+compinit:492> _i_name=_mac_applications 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _mac_applications
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mac_files_for_application
+compinit:492> _i_name=_mac_files_for_application 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _mac_files_for_application
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_madison
+compinit:492> _i_name=_madison 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ madison == -[pPkK](n|) ]]
+compinit:503> compdef -na _madison madison rmadison
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _madison == *=* ]]
+compdef:79> func=_madison 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _madison
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ madison == -N ]]
+compdef:134> [[ madison == -p ]]
+compdef:136> [[ madison == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ madison == *=* ]]
+compdef:159> cmd=madison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_madison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rmadison == -N ]]
+compdef:134> [[ rmadison == -p ]]
+compdef:136> [[ rmadison == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmadison == *=* ]]
+compdef:159> cmd=rmadison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_madison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mail
+compinit:492> _i_name=_mail 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mail == -[pPkK](n|) ]]
+compinit:503> compdef -na _mail mail 'mailx=mail' 'Mail=mail' mush zmail 'nail=mail'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mail == *=* ]]
+compdef:79> func=_mail 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mail
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ mail == -N ]]
+compdef:134> [[ mail == -p ]]
+compdef:136> [[ mail == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mail == *=* ]]
+compdef:159> cmd=mail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 'mailx=mail' == -N ]]
+compdef:134> [[ 'mailx=mail' == -p ]]
+compdef:136> [[ 'mailx=mail' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'mailx=mail' == *=* ]]
+compdef:156> cmd=mailx 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mail 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ 'Mail=mail' == -N ]]
+compdef:134> [[ 'Mail=mail' == -p ]]
+compdef:136> [[ 'Mail=mail' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'Mail=mail' == *=* ]]
+compdef:156> cmd=Mail 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mail 
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mush == -N ]]
+compdef:134> [[ mush == -p ]]
+compdef:136> [[ mush == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mush == *=* ]]
+compdef:159> cmd=mush 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ zmail == -N ]]
+compdef:134> [[ zmail == -p ]]
+compdef:136> [[ zmail == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zmail == *=* ]]
+compdef:159> cmd=zmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'nail=mail' == -N ]]
+compdef:134> [[ 'nail=mail' == -p ]]
+compdef:136> [[ 'nail=mail' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'nail=mail' == *=* ]]
+compdef:156> cmd=nail 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mail 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mailboxes
+compinit:492> _i_name=_mailboxes 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _mailboxes
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_main_complete
+compinit:492> _i_name=_main_complete 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _main_complete
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_make
+compinit:492> _i_name=_make 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ make == -[pPkK](n|) ]]
+compinit:503> compdef -na _make make gmake pmake dmake freebsd-make bmake
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _make == *=* ]]
+compdef:79> func=_make 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _make
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ make == -N ]]
+compdef:134> [[ make == -p ]]
+compdef:136> [[ make == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ make == *=* ]]
+compdef:159> cmd=make 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ gmake == -N ]]
+compdef:134> [[ gmake == -p ]]
+compdef:136> [[ gmake == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gmake == *=* ]]
+compdef:159> cmd=gmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pmake == -N ]]
+compdef:134> [[ pmake == -p ]]
+compdef:136> [[ pmake == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmake == *=* ]]
+compdef:159> cmd=pmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dmake == -N ]]
+compdef:134> [[ dmake == -p ]]
+compdef:136> [[ dmake == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dmake == *=* ]]
+compdef:159> cmd=dmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ freebsd-make == -N ]]
+compdef:134> [[ freebsd-make == -p ]]
+compdef:136> [[ freebsd-make == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ freebsd-make == *=* ]]
+compdef:159> cmd=freebsd-make 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ bmake == -N ]]
+compdef:134> [[ bmake == -p ]]
+compdef:136> [[ bmake == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bmake == *=* ]]
+compdef:159> cmd=bmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_make-kpkg
+compinit:492> _i_name=_make-kpkg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ make-kpkg == -[pPkK](n|) ]]
+compinit:503> compdef -na _make-kpkg make-kpkg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _make-kpkg == *=* ]]
+compdef:79> func=_make-kpkg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _make-kpkg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ make-kpkg == -N ]]
+compdef:134> [[ make-kpkg == -p ]]
+compdef:136> [[ make-kpkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ make-kpkg == *=* ]]
+compdef:159> cmd=make-kpkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make-kpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_man
+compinit:492> _i_name=_man 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ man == -[pPkK](n|) ]]
+compinit:503> compdef -na _man man apropos whatis
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _man == *=* ]]
+compdef:79> func=_man 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _man
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ man == -N ]]
+compdef:134> [[ man == -p ]]
+compdef:136> [[ man == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ man == *=* ]]
+compdef:159> cmd=man 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_man 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ apropos == -N ]]
+compdef:134> [[ apropos == -p ]]
+compdef:136> [[ apropos == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apropos == *=* ]]
+compdef:159> cmd=apropos 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_man 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ whatis == -N ]]
+compdef:134> [[ whatis == -p ]]
+compdef:136> [[ whatis == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whatis == *=* ]]
+compdef:159> cmd=whatis 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_man 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_match
+compinit:492> _i_name=_match 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _match
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_math
+compinit:492> _i_name=_math 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -math- == -[pPkK](n|) ]]
+compinit:503> compdef -na _math -math- let
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _math == *=* ]]
+compdef:79> func=_math 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _math
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ -math- == -N ]]
+compdef:134> [[ -math- == -p ]]
+compdef:136> [[ -math- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -math- == *=* ]]
+compdef:159> cmd=-math- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_math 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ let == -N ]]
+compdef:134> [[ let == -p ]]
+compdef:136> [[ let == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ let == *=* ]]
+compdef:159> cmd=let 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_math 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_math_params
+compinit:492> _i_name=_math_params 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _math_params
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_matlab
+compinit:492> _i_name=_matlab 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ matlab == -[pPkK](n|) ]]
+compinit:503> compdef -na _matlab matlab
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _matlab == *=* ]]
+compdef:79> func=_matlab 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _matlab
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ matlab == -N ]]
+compdef:134> [[ matlab == -p ]]
+compdef:136> [[ matlab == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ matlab == *=* ]]
+compdef:159> cmd=matlab 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_matlab 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_md5sum
+compinit:492> _i_name=_md5sum 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ md5sum == -[pPkK](n|) ]]
+compinit:503> compdef -na _md5sum md5sum
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _md5sum == *=* ]]
+compdef:79> func=_md5sum 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _md5sum
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ md5sum == -N ]]
+compdef:134> [[ md5sum == -p ]]
+compdef:136> [[ md5sum == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ md5sum == *=* ]]
+compdef:159> cmd=md5sum 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_md5sum 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mdadm
+compinit:492> _i_name=_mdadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mdadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _mdadm mdadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mdadm == *=* ]]
+compdef:79> func=_mdadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mdadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mdadm == -N ]]
+compdef:134> [[ mdadm == -p ]]
+compdef:136> [[ mdadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdadm == *=* ]]
+compdef:159> cmd=mdadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mdadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_members
+compinit:492> _i_name=_members 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ members == -[pPkK](n|) ]]
+compinit:503> compdef -na _members members
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _members == *=* ]]
+compdef:79> func=_members 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _members
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ members == -N ]]
+compdef:134> [[ members == -p ]]
+compdef:136> [[ members == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ members == *=* ]]
+compdef:159> cmd=members 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_members 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mencal
+compinit:492> _i_name=_mencal 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mencal == -[pPkK](n|) ]]
+compinit:503> compdef -na _mencal mencal
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mencal == *=* ]]
+compdef:79> func=_mencal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mencal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mencal == -N ]]
+compdef:134> [[ mencal == -p ]]
+compdef:136> [[ mencal == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mencal == *=* ]]
+compdef:159> cmd=mencal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mencal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_menu
+compinit:492> _i_name=_menu 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _menu
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mere
+compinit:492> _i_name=_mere 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mere == -[pPkK](n|) ]]
+compinit:503> compdef -na _mere mere
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mere == *=* ]]
+compdef:79> func=_mere 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mere
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mere == -N ]]
+compdef:134> [[ mere == -p ]]
+compdef:136> [[ mere == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mere == *=* ]]
+compdef:159> cmd=mere 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mere 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mergechanges
+compinit:492> _i_name=_mergechanges 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mergechanges == -[pPkK](n|) ]]
+compinit:503> compdef -na _mergechanges mergechanges
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mergechanges == *=* ]]
+compdef:79> func=_mergechanges 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mergechanges
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mergechanges == -N ]]
+compdef:134> [[ mergechanges == -p ]]
+compdef:136> [[ mergechanges == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mergechanges == *=* ]]
+compdef:159> cmd=mergechanges 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mergechanges 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_message
+compinit:492> _i_name=_message 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _message
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_metaflac
+compinit:492> _i_name=_metaflac 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ metaflac == -[pPkK](n|) ]]
+compinit:503> compdef -na _metaflac metaflac
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _metaflac == *=* ]]
+compdef:79> func=_metaflac 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _metaflac
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ metaflac == -N ]]
+compdef:134> [[ metaflac == -p ]]
+compdef:136> [[ metaflac == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ metaflac == *=* ]]
+compdef:159> cmd=metaflac 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_metaflac 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mh
+compinit:492> _i_name=_mh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ali == -[pPkK](n|) ]]
+compinit:503> compdef -na _mh ali anno burst comp dist flist flists folder folders forw inc mark mhlist mhmail mhn mhparam mhpath mhshow mhstore msgchk next packf pick prev refile repl rmf rmm scan show sortm whom
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 34  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 33  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mh == *=* ]]
+compdef:79> func=_mh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  32  ))
+compdef:132> [[ ali == -N ]]
+compdef:134> [[ ali == -p ]]
+compdef:136> [[ ali == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ali == *=* ]]
+compdef:159> cmd=ali 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  31  ))
+compdef:132> [[ anno == -N ]]
+compdef:134> [[ anno == -p ]]
+compdef:136> [[ anno == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ anno == *=* ]]
+compdef:159> cmd=anno 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  30  ))
+compdef:132> [[ burst == -N ]]
+compdef:134> [[ burst == -p ]]
+compdef:136> [[ burst == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ burst == *=* ]]
+compdef:159> cmd=burst 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  29  ))
+compdef:132> [[ comp == -N ]]
+compdef:134> [[ comp == -p ]]
+compdef:136> [[ comp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ comp == *=* ]]
+compdef:159> cmd=comp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  28  ))
+compdef:132> [[ dist == -N ]]
+compdef:134> [[ dist == -p ]]
+compdef:136> [[ dist == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dist == *=* ]]
+compdef:159> cmd=dist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  27  ))
+compdef:132> [[ flist == -N ]]
+compdef:134> [[ flist == -p ]]
+compdef:136> [[ flist == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flist == *=* ]]
+compdef:159> cmd=flist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  26  ))
+compdef:132> [[ flists == -N ]]
+compdef:134> [[ flists == -p ]]
+compdef:136> [[ flists == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flists == *=* ]]
+compdef:159> cmd=flists 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  25  ))
+compdef:132> [[ folder == -N ]]
+compdef:134> [[ folder == -p ]]
+compdef:136> [[ folder == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ folder == *=* ]]
+compdef:159> cmd=folder 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  24  ))
+compdef:132> [[ folders == -N ]]
+compdef:134> [[ folders == -p ]]
+compdef:136> [[ folders == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ folders == *=* ]]
+compdef:159> cmd=folders 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  23  ))
+compdef:132> [[ forw == -N ]]
+compdef:134> [[ forw == -p ]]
+compdef:136> [[ forw == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ forw == *=* ]]
+compdef:159> cmd=forw 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  22  ))
+compdef:132> [[ inc == -N ]]
+compdef:134> [[ inc == -p ]]
+compdef:136> [[ inc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ inc == *=* ]]
+compdef:159> cmd=inc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  21  ))
+compdef:132> [[ mark == -N ]]
+compdef:134> [[ mark == -p ]]
+compdef:136> [[ mark == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mark == *=* ]]
+compdef:159> cmd=mark 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ mhlist == -N ]]
+compdef:134> [[ mhlist == -p ]]
+compdef:136> [[ mhlist == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhlist == *=* ]]
+compdef:159> cmd=mhlist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ mhmail == -N ]]
+compdef:134> [[ mhmail == -p ]]
+compdef:136> [[ mhmail == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhmail == *=* ]]
+compdef:159> cmd=mhmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ mhn == -N ]]
+compdef:134> [[ mhn == -p ]]
+compdef:136> [[ mhn == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhn == *=* ]]
+compdef:159> cmd=mhn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ mhparam == -N ]]
+compdef:134> [[ mhparam == -p ]]
+compdef:136> [[ mhparam == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhparam == *=* ]]
+compdef:159> cmd=mhparam 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ mhpath == -N ]]
+compdef:134> [[ mhpath == -p ]]
+compdef:136> [[ mhpath == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhpath == *=* ]]
+compdef:159> cmd=mhpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ mhshow == -N ]]
+compdef:134> [[ mhshow == -p ]]
+compdef:136> [[ mhshow == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhshow == *=* ]]
+compdef:159> cmd=mhshow 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ mhstore == -N ]]
+compdef:134> [[ mhstore == -p ]]
+compdef:136> [[ mhstore == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhstore == *=* ]]
+compdef:159> cmd=mhstore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ msgchk == -N ]]
+compdef:134> [[ msgchk == -p ]]
+compdef:136> [[ msgchk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ msgchk == *=* ]]
+compdef:159> cmd=msgchk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ next == -N ]]
+compdef:134> [[ next == -p ]]
+compdef:136> [[ next == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ next == *=* ]]
+compdef:159> cmd=next 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ packf == -N ]]
+compdef:134> [[ packf == -p ]]
+compdef:136> [[ packf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ packf == *=* ]]
+compdef:159> cmd=packf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pick == -N ]]
+compdef:134> [[ pick == -p ]]
+compdef:136> [[ pick == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pick == *=* ]]
+compdef:159> cmd=pick 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ prev == -N ]]
+compdef:134> [[ prev == -p ]]
+compdef:136> [[ prev == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prev == *=* ]]
+compdef:159> cmd=prev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ refile == -N ]]
+compdef:134> [[ refile == -p ]]
+compdef:136> [[ refile == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ refile == *=* ]]
+compdef:159> cmd=refile 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ repl == -N ]]
+compdef:134> [[ repl == -p ]]
+compdef:136> [[ repl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ repl == *=* ]]
+compdef:159> cmd=repl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rmf == -N ]]
+compdef:134> [[ rmf == -p ]]
+compdef:136> [[ rmf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmf == *=* ]]
+compdef:159> cmd=rmf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ rmm == -N ]]
+compdef:134> [[ rmm == -p ]]
+compdef:136> [[ rmm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmm == *=* ]]
+compdef:159> cmd=rmm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ scan == -N ]]
+compdef:134> [[ scan == -p ]]
+compdef:136> [[ scan == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ scan == *=* ]]
+compdef:159> cmd=scan 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ show == -N ]]
+compdef:134> [[ show == -p ]]
+compdef:136> [[ show == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ show == *=* ]]
+compdef:159> cmd=show 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ sortm == -N ]]
+compdef:134> [[ sortm == -p ]]
+compdef:136> [[ sortm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sortm == *=* ]]
+compdef:159> cmd=sortm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ whom == -N ]]
+compdef:134> [[ whom == -p ]]
+compdef:136> [[ whom == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whom == *=* ]]
+compdef:159> cmd=whom 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mii-tool
+compinit:492> _i_name=_mii-tool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mii-tool == -[pPkK](n|) ]]
+compinit:503> compdef -na _mii-tool mii-tool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mii-tool == *=* ]]
+compdef:79> func=_mii-tool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mii-tool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mii-tool == -N ]]
+compdef:134> [[ mii-tool == -p ]]
+compdef:136> [[ mii-tool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mii-tool == *=* ]]
+compdef:159> cmd=mii-tool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mii-tool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mime_types
+compinit:492> _i_name=_mime_types 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _mime_types
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mkdir
+compinit:492> _i_name=_mkdir 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mkdir == -[pPkK](n|) ]]
+compinit:503> compdef -na _mkdir mkdir
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mkdir == *=* ]]
+compdef:79> func=_mkdir 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mkdir
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mkdir == -N ]]
+compdef:134> [[ mkdir == -p ]]
+compdef:136> [[ mkdir == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkdir == *=* ]]
+compdef:159> cmd=mkdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkdir 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mkshortcut
+compinit:492> _i_name=_mkshortcut 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mkshortcut == -[pPkK](n|) ]]
+compinit:503> compdef -na _mkshortcut mkshortcut mkshortcut.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mkshortcut == *=* ]]
+compdef:79> func=_mkshortcut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mkshortcut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mkshortcut == -N ]]
+compdef:134> [[ mkshortcut == -p ]]
+compdef:136> [[ mkshortcut == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkshortcut == *=* ]]
+compdef:159> cmd=mkshortcut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mkshortcut.exe == -N ]]
+compdef:134> [[ mkshortcut.exe == -p ]]
+compdef:136> [[ mkshortcut.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkshortcut.exe == *=* ]]
+compdef:159> cmd=mkshortcut.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mkzsh
+compinit:492> _i_name=_mkzsh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mkzsh == -[pPkK](n|) ]]
+compinit:503> compdef -na _mkzsh mkzsh mkzsh.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mkzsh == *=* ]]
+compdef:79> func=_mkzsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mkzsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mkzsh == -N ]]
+compdef:134> [[ mkzsh == -p ]]
+compdef:136> [[ mkzsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkzsh == *=* ]]
+compdef:159> cmd=mkzsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkzsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mkzsh.exe == -N ]]
+compdef:134> [[ mkzsh.exe == -p ]]
+compdef:136> [[ mkzsh.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkzsh.exe == *=* ]]
+compdef:159> cmd=mkzsh.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkzsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_module
+compinit:492> _i_name=_module 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ module == -[pPkK](n|) ]]
+compinit:503> compdef -na _module module
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _module == *=* ]]
+compdef:79> func=_module 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _module
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ module == -N ]]
+compdef:134> [[ module == -p ]]
+compdef:136> [[ module == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ module == *=* ]]
+compdef:159> cmd=module 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_module 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_module-assistant
+compinit:492> _i_name=_module-assistant 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ module-assistant == -[pPkK](n|) ]]
+compinit:503> compdef -na _module-assistant module-assistant m-a
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _module-assistant == *=* ]]
+compdef:79> func=_module-assistant 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _module-assistant
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ module-assistant == -N ]]
+compdef:134> [[ module-assistant == -p ]]
+compdef:136> [[ module-assistant == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ module-assistant == *=* ]]
+compdef:159> cmd=module-assistant 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_module-assistant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ m-a == -N ]]
+compdef:134> [[ m-a == -p ]]
+compdef:136> [[ m-a == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ m-a == *=* ]]
+compdef:159> cmd=m-a 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_module-assistant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_module_math_func
+compinit:492> _i_name=_module_math_func 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _module_math_func
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_modutils
+compinit:492> _i_name=_modutils 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ lsmod == -[pPkK](n|) ]]
+compinit:503> compdef -na _modutils lsmod modinfo modprobe rmmod insmod
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _modutils == *=* ]]
+compdef:79> func=_modutils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _modutils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ lsmod == -N ]]
+compdef:134> [[ lsmod == -p ]]
+compdef:136> [[ lsmod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsmod == *=* ]]
+compdef:159> cmd=lsmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ modinfo == -N ]]
+compdef:134> [[ modinfo == -p ]]
+compdef:136> [[ modinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ modinfo == *=* ]]
+compdef:159> cmd=modinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ modprobe == -N ]]
+compdef:134> [[ modprobe == -p ]]
+compdef:136> [[ modprobe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ modprobe == *=* ]]
+compdef:159> cmd=modprobe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ rmmod == -N ]]
+compdef:134> [[ rmmod == -p ]]
+compdef:136> [[ rmmod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmmod == *=* ]]
+compdef:159> cmd=rmmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ insmod == -N ]]
+compdef:134> [[ insmod == -p ]]
+compdef:136> [[ insmod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ insmod == *=* ]]
+compdef:159> cmd=insmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mondo
+compinit:492> _i_name=_mondo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mondoarchive == -[pPkK](n|) ]]
+compinit:503> compdef -na _mondo mondoarchive
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mondo == *=* ]]
+compdef:79> func=_mondo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mondo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mondoarchive == -N ]]
+compdef:134> [[ mondoarchive == -p ]]
+compdef:136> [[ mondoarchive == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mondoarchive == *=* ]]
+compdef:159> cmd=mondoarchive 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mondo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_monotone
+compinit:492> _i_name=_monotone 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mtn == -[pPkK](n|) ]]
+compinit:503> compdef -na _monotone mtn
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _monotone == *=* ]]
+compdef:79> func=_monotone 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _monotone
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mtn == -N ]]
+compdef:134> [[ mtn == -p ]]
+compdef:136> [[ mtn == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtn == *=* ]]
+compdef:159> cmd=mtn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_monotone 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mosh
+compinit:492> _i_name=_mosh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mosh == -[pPkK](n|) ]]
+compinit:503> compdef -na _mosh mosh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mosh == *=* ]]
+compdef:79> func=_mosh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mosh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mosh == -N ]]
+compdef:134> [[ mosh == -p ]]
+compdef:136> [[ mosh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mosh == *=* ]]
+compdef:159> cmd=mosh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mosh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_most_recent_file
+compinit:492> _i_name=_most_recent_file 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _most_recent_file complete-word '\C-xm'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _most_recent_file == *=* ]]
+compdef:79> func=_most_recent_file 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _most_recent_file
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word == .* ]]
+compdef:114> [[ complete-word == menu-select ]]
+compdef:115> zle -C _most_recent_file .complete-word _most_recent_file
+compdef:117> shift
+compdef:120> i=\C-xm
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xm'
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-xm' _most_recent_file
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mount
+compinit:492> _i_name=_mount 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mount == -[pPkK](n|) ]]
+compinit:503> compdef -na _mount mount umount
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mount == *=* ]]
+compdef:79> func=_mount 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mount
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mount == -N ]]
+compdef:134> [[ mount == -p ]]
+compdef:136> [[ mount == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mount == *=* ]]
+compdef:159> cmd=mount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ umount == -N ]]
+compdef:134> [[ umount == -p ]]
+compdef:136> [[ umount == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ umount == *=* ]]
+compdef:159> cmd=umount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mozilla
+compinit:492> _i_name=_mozilla 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mozilla == -[pPkK](n|) ]]
+compinit:503> compdef -na _mozilla mozilla mozilla-firefox mozilla-xremote-client firefox 'iceweasel=firefox'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mozilla == *=* ]]
+compdef:79> func=_mozilla 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mozilla
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ mozilla == -N ]]
+compdef:134> [[ mozilla == -p ]]
+compdef:136> [[ mozilla == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mozilla == *=* ]]
+compdef:159> cmd=mozilla 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mozilla-firefox == -N ]]
+compdef:134> [[ mozilla-firefox == -p ]]
+compdef:136> [[ mozilla-firefox == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mozilla-firefox == *=* ]]
+compdef:159> cmd=mozilla-firefox 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mozilla-xremote-client == -N ]]
+compdef:134> [[ mozilla-xremote-client == -p ]]
+compdef:136> [[ mozilla-xremote-client == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mozilla-xremote-client == *=* ]]
+compdef:159> cmd=mozilla-xremote-client 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ firefox == -N ]]
+compdef:134> [[ firefox == -p ]]
+compdef:136> [[ firefox == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ firefox == *=* ]]
+compdef:159> cmd=firefox 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'iceweasel=firefox' == -N ]]
+compdef:134> [[ 'iceweasel=firefox' == -p ]]
+compdef:136> [[ 'iceweasel=firefox' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'iceweasel=firefox' == *=* ]]
+compdef:156> cmd=iceweasel 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=firefox 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mpc
+compinit:492> _i_name=_mpc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mpc == -[pPkK](n|) ]]
+compinit:503> compdef -na _mpc mpc
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mpc == *=* ]]
+compdef:79> func=_mpc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mpc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mpc == -N ]]
+compdef:134> [[ mpc == -p ]]
+compdef:136> [[ mpc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mpc == *=* ]]
+compdef:159> cmd=mpc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mpc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mplayer
+compinit:492> _i_name=_mplayer 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mplayer == -[pPkK](n|) ]]
+compinit:503> compdef -na _mplayer mplayer gmplayer
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mplayer == *=* ]]
+compdef:79> func=_mplayer 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mplayer
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mplayer == -N ]]
+compdef:134> [[ mplayer == -p ]]
+compdef:136> [[ mplayer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mplayer == *=* ]]
+compdef:159> cmd=mplayer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mplayer 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gmplayer == -N ]]
+compdef:134> [[ gmplayer == -p ]]
+compdef:136> [[ gmplayer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gmplayer == *=* ]]
+compdef:159> cmd=gmplayer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mplayer 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mt
+compinit:492> _i_name=_mt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mt == -[pPkK](n|) ]]
+compinit:503> compdef -na _mt mt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mt == *=* ]]
+compdef:79> func=_mt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mt == -N ]]
+compdef:134> [[ mt == -p ]]
+compdef:136> [[ mt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mt == *=* ]]
+compdef:159> cmd=mt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mtools
+compinit:492> _i_name=_mtools 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mattrib == -[pPkK](n|) ]]
+compinit:503> compdef -na _mtools mattrib mcopy mdel mdu mcd mdeltree mdir mformat mlabel mmd mmount mmove mrd mread mren mtoolstest mtype
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 19  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 18  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mtools == *=* ]]
+compdef:79> func=_mtools 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mtools
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  17  ))
+compdef:132> [[ mattrib == -N ]]
+compdef:134> [[ mattrib == -p ]]
+compdef:136> [[ mattrib == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mattrib == *=* ]]
+compdef:159> cmd=mattrib 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ mcopy == -N ]]
+compdef:134> [[ mcopy == -p ]]
+compdef:136> [[ mcopy == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mcopy == *=* ]]
+compdef:159> cmd=mcopy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ mdel == -N ]]
+compdef:134> [[ mdel == -p ]]
+compdef:136> [[ mdel == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdel == *=* ]]
+compdef:159> cmd=mdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ mdu == -N ]]
+compdef:134> [[ mdu == -p ]]
+compdef:136> [[ mdu == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdu == *=* ]]
+compdef:159> cmd=mdu 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ mcd == -N ]]
+compdef:134> [[ mcd == -p ]]
+compdef:136> [[ mcd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mcd == *=* ]]
+compdef:159> cmd=mcd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ mdeltree == -N ]]
+compdef:134> [[ mdeltree == -p ]]
+compdef:136> [[ mdeltree == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdeltree == *=* ]]
+compdef:159> cmd=mdeltree 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ mdir == -N ]]
+compdef:134> [[ mdir == -p ]]
+compdef:136> [[ mdir == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdir == *=* ]]
+compdef:159> cmd=mdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ mformat == -N ]]
+compdef:134> [[ mformat == -p ]]
+compdef:136> [[ mformat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mformat == *=* ]]
+compdef:159> cmd=mformat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ mlabel == -N ]]
+compdef:134> [[ mlabel == -p ]]
+compdef:136> [[ mlabel == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mlabel == *=* ]]
+compdef:159> cmd=mlabel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ mmd == -N ]]
+compdef:134> [[ mmd == -p ]]
+compdef:136> [[ mmd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmd == *=* ]]
+compdef:159> cmd=mmd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ mmount == -N ]]
+compdef:134> [[ mmount == -p ]]
+compdef:136> [[ mmount == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmount == *=* ]]
+compdef:159> cmd=mmount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ mmove == -N ]]
+compdef:134> [[ mmove == -p ]]
+compdef:136> [[ mmove == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmove == *=* ]]
+compdef:159> cmd=mmove 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ mrd == -N ]]
+compdef:134> [[ mrd == -p ]]
+compdef:136> [[ mrd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mrd == *=* ]]
+compdef:159> cmd=mrd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mread == -N ]]
+compdef:134> [[ mread == -p ]]
+compdef:136> [[ mread == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mread == *=* ]]
+compdef:159> cmd=mread 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mren == -N ]]
+compdef:134> [[ mren == -p ]]
+compdef:136> [[ mren == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mren == *=* ]]
+compdef:159> cmd=mren 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ mtoolstest == -N ]]
+compdef:134> [[ mtoolstest == -p ]]
+compdef:136> [[ mtoolstest == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtoolstest == *=* ]]
+compdef:159> cmd=mtoolstest 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mtype == -N ]]
+compdef:134> [[ mtype == -p ]]
+compdef:136> [[ mtype == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtype == *=* ]]
+compdef:159> cmd=mtype 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mtr
+compinit:492> _i_name=_mtr 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mtr == -[pPkK](n|) ]]
+compinit:503> compdef -na _mtr mtr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mtr == *=* ]]
+compdef:79> func=_mtr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mtr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mtr == -N ]]
+compdef:134> [[ mtr == -p ]]
+compdef:136> [[ mtr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtr == *=* ]]
+compdef:159> cmd=mtr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_multi_parts
+compinit:492> _i_name=_multi_parts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _multi_parts
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mutt
+compinit:492> _i_name=_mutt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mutt == -[pPkK](n|) ]]
+compinit:503> compdef -na _mutt mutt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mutt == *=* ]]
+compdef:79> func=_mutt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mutt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mutt == -N ]]
+compdef:134> [[ mutt == -p ]]
+compdef:136> [[ mutt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mutt == *=* ]]
+compdef:159> cmd=mutt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mutt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_my_accounts
+compinit:492> _i_name=_my_accounts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _my_accounts
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mysql_utils
+compinit:492> _i_name=_mysql_utils 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mysql == -[pPkK](n|) ]]
+compinit:503> compdef -na _mysql_utils mysql mysqlshow mysqldump mysqlimport mysqladmin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mysql_utils == *=* ]]
+compdef:79> func=_mysql_utils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mysql_utils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ mysql == -N ]]
+compdef:134> [[ mysql == -p ]]
+compdef:136> [[ mysql == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysql == *=* ]]
+compdef:159> cmd=mysql 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mysqlshow == -N ]]
+compdef:134> [[ mysqlshow == -p ]]
+compdef:136> [[ mysqlshow == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqlshow == *=* ]]
+compdef:159> cmd=mysqlshow 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mysqldump == -N ]]
+compdef:134> [[ mysqldump == -p ]]
+compdef:136> [[ mysqldump == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqldump == *=* ]]
+compdef:159> cmd=mysqldump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ mysqlimport == -N ]]
+compdef:134> [[ mysqlimport == -p ]]
+compdef:136> [[ mysqlimport == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqlimport == *=* ]]
+compdef:159> cmd=mysqlimport 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mysqladmin == -N ]]
+compdef:134> [[ mysqladmin == -p ]]
+compdef:136> [[ mysqladmin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqladmin == *=* ]]
+compdef:159> cmd=mysqladmin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_mysqldiff
+compinit:492> _i_name=_mysqldiff 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ mysqldiff == -[pPkK](n|) ]]
+compinit:503> compdef -na _mysqldiff mysqldiff
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mysqldiff == *=* ]]
+compdef:79> func=_mysqldiff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mysqldiff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mysqldiff == -N ]]
+compdef:134> [[ mysqldiff == -p ]]
+compdef:136> [[ mysqldiff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqldiff == *=* ]]
+compdef:159> cmd=mysqldiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysqldiff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nautilus
+compinit:492> _i_name=_nautilus 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nautilus == -[pPkK](n|) ]]
+compinit:503> compdef -na _nautilus nautilus
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nautilus == *=* ]]
+compdef:79> func=_nautilus 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nautilus
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nautilus == -N ]]
+compdef:134> [[ nautilus == -p ]]
+compdef:136> [[ nautilus == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nautilus == *=* ]]
+compdef:159> cmd=nautilus 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nautilus 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ncftp
+compinit:492> _i_name=_ncftp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ncftp == -[pPkK](n|) ]]
+compinit:503> compdef -na _ncftp ncftp lftp
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ncftp == *=* ]]
+compdef:79> func=_ncftp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ncftp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ncftp == -N ]]
+compdef:134> [[ ncftp == -p ]]
+compdef:136> [[ ncftp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ncftp == *=* ]]
+compdef:159> cmd=ncftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ncftp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lftp == -N ]]
+compdef:134> [[ lftp == -p ]]
+compdef:136> [[ lftp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lftp == *=* ]]
+compdef:159> cmd=lftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ncftp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nedit
+compinit:492> _i_name=_nedit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nedit == -[pPkK](n|) ]]
+compinit:503> compdef -na _nedit nedit 'nedit-nc=nc' 'ncl=nc'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nedit == *=* ]]
+compdef:79> func=_nedit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nedit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ nedit == -N ]]
+compdef:134> [[ nedit == -p ]]
+compdef:136> [[ nedit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nedit == *=* ]]
+compdef:159> cmd=nedit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nedit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 'nedit-nc=nc' == -N ]]
+compdef:134> [[ 'nedit-nc=nc' == -p ]]
+compdef:136> [[ 'nedit-nc=nc' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'nedit-nc=nc' == *=* ]]
+compdef:156> cmd=nedit-nc 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nedit 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=nc 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'ncl=nc' == -N ]]
+compdef:134> [[ 'ncl=nc' == -p ]]
+compdef:136> [[ 'ncl=nc' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ncl=nc' == *=* ]]
+compdef:156> cmd=ncl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nedit 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=nc 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_net_interfaces
+compinit:492> _i_name=_net_interfaces 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ifup == -[pPkK](n|) ]]
+compinit:503> compdef -na _net_interfaces ifup ifdown
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _net_interfaces == *=* ]]
+compdef:79> func=_net_interfaces 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _net_interfaces
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ifup == -N ]]
+compdef:134> [[ ifup == -p ]]
+compdef:136> [[ ifup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ifup == *=* ]]
+compdef:159> cmd=ifup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_net_interfaces 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ifdown == -N ]]
+compdef:134> [[ ifdown == -p ]]
+compdef:136> [[ ifdown == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ifdown == *=* ]]
+compdef:159> cmd=ifdown 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_net_interfaces 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_netcat
+compinit:492> _i_name=_netcat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nc == -[pPkK](n|) ]]
+compinit:503> compdef -na _netcat nc netcat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _netcat == *=* ]]
+compdef:79> func=_netcat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _netcat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ nc == -N ]]
+compdef:134> [[ nc == -p ]]
+compdef:136> [[ nc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nc == *=* ]]
+compdef:159> cmd=nc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netcat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ netcat == -N ]]
+compdef:134> [[ netcat == -p ]]
+compdef:136> [[ netcat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netcat == *=* ]]
+compdef:159> cmd=netcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netcat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_netscape
+compinit:492> _i_name=_netscape 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ netscape == -[pPkK](n|) ]]
+compinit:503> compdef -na _netscape netscape
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _netscape == *=* ]]
+compdef:79> func=_netscape 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _netscape
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ netscape == -N ]]
+compdef:134> [[ netscape == -p ]]
+compdef:136> [[ netscape == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netscape == *=* ]]
+compdef:159> cmd=netscape 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netscape 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_netstat
+compinit:492> _i_name=_netstat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ netstat == -[pPkK](n|) ]]
+compinit:503> compdef -na _netstat netstat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _netstat == *=* ]]
+compdef:79> func=_netstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _netstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ netstat == -N ]]
+compdef:134> [[ netstat == -p ]]
+compdef:136> [[ netstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netstat == *=* ]]
+compdef:159> cmd=netstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_newsgroups
+compinit:492> _i_name=_newsgroups 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _newsgroups
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_next_label
+compinit:492> _i_name=_next_label 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _next_label
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_next_tags
+compinit:492> _i_name=_next_tags 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _next_tags list-choices '\C-xn'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _next_tags == *=* ]]
+compdef:79> func=_next_tags 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _next_tags
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ list-choices == .* ]]
+compdef:114> [[ list-choices == menu-select ]]
+compdef:115> zle -C _next_tags .list-choices _next_tags
+compdef:117> shift
+compdef:120> i=\C-xn
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xn'
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-xn' _next_tags
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nice
+compinit:492> _i_name=_nice 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nice == -[pPkK](n|) ]]
+compinit:503> compdef -na _nice nice
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nice == *=* ]]
+compdef:79> func=_nice 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nice
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nice == -N ]]
+compdef:134> [[ nice == -p ]]
+compdef:136> [[ nice == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nice == *=* ]]
+compdef:159> cmd=nice 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nice 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nkf
+compinit:492> _i_name=_nkf 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nkf == -[pPkK](n|) ]]
+compinit:503> compdef -na _nkf nkf
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nkf == *=* ]]
+compdef:79> func=_nkf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nkf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nkf == -N ]]
+compdef:134> [[ nkf == -p ]]
+compdef:136> [[ nkf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nkf == *=* ]]
+compdef:159> cmd=nkf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nkf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nm
+compinit:492> _i_name=_nm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nm == -[pPkK](n|) ]]
+compinit:503> compdef -na _nm nm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nm == *=* ]]
+compdef:79> func=_nm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nm == -N ]]
+compdef:134> [[ nm == -p ]]
+compdef:136> [[ nm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nm == *=* ]]
+compdef:159> cmd=nm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nmap
+compinit:492> _i_name=_nmap 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nmap == -[pPkK](n|) ]]
+compinit:503> compdef -na _nmap nmap
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nmap == *=* ]]
+compdef:79> func=_nmap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nmap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nmap == -N ]]
+compdef:134> [[ nmap == -p ]]
+compdef:136> [[ nmap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nmap == *=* ]]
+compdef:159> cmd=nmap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nmap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nmcli
+compinit:492> _i_name=_nmcli 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nmcli == -[pPkK](n|) ]]
+compinit:503> compdef -na _nmcli nmcli
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nmcli == *=* ]]
+compdef:79> func=_nmcli 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nmcli
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nmcli == -N ]]
+compdef:134> [[ nmcli == -p ]]
+compdef:136> [[ nmcli == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nmcli == *=* ]]
+compdef:159> cmd=nmcli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nmcli 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_normal
+compinit:492> _i_name=_normal 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -command-line- == -[pPkK](n|) ]]
+compinit:503> compdef -na _normal -command-line-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _normal == *=* ]]
+compdef:79> func=_normal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _normal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -command-line- == -N ]]
+compdef:134> [[ -command-line- == -p ]]
+compdef:136> [[ -command-line- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -command-line- == *=* ]]
+compdef:159> cmd=-command-line- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_normal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nothing
+compinit:492> _i_name=_nothing 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ true == -[pPkK](n|) ]]
+compinit:503> compdef -na _nothing true false log times clear logname whoami sync
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nothing == *=* ]]
+compdef:79> func=_nothing 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nothing
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ true == -N ]]
+compdef:134> [[ true == -p ]]
+compdef:136> [[ true == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ true == *=* ]]
+compdef:159> cmd=true 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ false == -N ]]
+compdef:134> [[ false == -p ]]
+compdef:136> [[ false == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ false == *=* ]]
+compdef:159> cmd=false 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ log == -N ]]
+compdef:134> [[ log == -p ]]
+compdef:136> [[ log == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ log == *=* ]]
+compdef:159> cmd=log 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ times == -N ]]
+compdef:134> [[ times == -p ]]
+compdef:136> [[ times == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ times == *=* ]]
+compdef:159> cmd=times 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ clear == -N ]]
+compdef:134> [[ clear == -p ]]
+compdef:136> [[ clear == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clear == *=* ]]
+compdef:159> cmd=clear 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ logname == -N ]]
+compdef:134> [[ logname == -p ]]
+compdef:136> [[ logname == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ logname == *=* ]]
+compdef:159> cmd=logname 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ whoami == -N ]]
+compdef:134> [[ whoami == -p ]]
+compdef:136> [[ whoami == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whoami == *=* ]]
+compdef:159> cmd=whoami 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sync == -N ]]
+compdef:134> [[ sync == -p ]]
+compdef:136> [[ sync == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sync == *=* ]]
+compdef:159> cmd=sync 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_notmuch
+compinit:492> _i_name=_notmuch 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ notmuch == -[pPkK](n|) ]]
+compinit:503> compdef -na _notmuch notmuch
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _notmuch == *=* ]]
+compdef:79> func=_notmuch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _notmuch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ notmuch == -N ]]
+compdef:134> [[ notmuch == -p ]]
+compdef:136> [[ notmuch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ notmuch == *=* ]]
+compdef:159> cmd=notmuch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_notmuch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_npm
+compinit:492> _i_name=_npm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ npm == -[pPkK](n|) ]]
+compinit:503> compdef -na _npm npm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _npm == *=* ]]
+compdef:79> func=_npm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _npm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ npm == -N ]]
+compdef:134> [[ npm == -p ]]
+compdef:136> [[ npm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ npm == *=* ]]
+compdef:159> cmd=npm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_npm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_nslookup
+compinit:492> _i_name=_nslookup 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ nslookup == -[pPkK](n|) ]]
+compinit:503> compdef -na _nslookup nslookup
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nslookup == *=* ]]
+compdef:79> func=_nslookup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nslookup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nslookup == -N ]]
+compdef:134> [[ nslookup == -p ]]
+compdef:136> [[ nslookup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nslookup == *=* ]]
+compdef:159> cmd=nslookup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nslookup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_object_classes
+compinit:492> _i_name=_object_classes 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ odmget == -[pPkK](n|) ]]
+compinit:503> compdef -na _object_classes odmget odmshow odme
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _object_classes == *=* ]]
+compdef:79> func=_object_classes 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _object_classes
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ odmget == -N ]]
+compdef:134> [[ odmget == -p ]]
+compdef:136> [[ odmget == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ odmget == *=* ]]
+compdef:159> cmd=odmget 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_object_classes 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ odmshow == -N ]]
+compdef:134> [[ odmshow == -p ]]
+compdef:136> [[ odmshow == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ odmshow == *=* ]]
+compdef:159> cmd=odmshow 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_object_classes 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ odme == -N ]]
+compdef:134> [[ odme == -p ]]
+compdef:136> [[ odme == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ odme == *=* ]]
+compdef:159> cmd=odme 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_object_classes 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_okular
+compinit:492> _i_name=_okular 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ okular == -[pPkK](n|) ]]
+compinit:503> compdef -na _okular okular
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _okular == *=* ]]
+compdef:79> func=_okular 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _okular
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ okular == -N ]]
+compdef:134> [[ okular == -p ]]
+compdef:136> [[ okular == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ okular == *=* ]]
+compdef:159> cmd=okular 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_okular 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_oldlist
+compinit:492> _i_name=_oldlist 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _oldlist
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_open
+compinit:492> _i_name=_open 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ open == -[pPkK](n|) ]]
+compinit:503> compdef -na _open open
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _open == *=* ]]
+compdef:79> func=_open 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _open
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ open == -N ]]
+compdef:134> [[ open == -p ]]
+compdef:136> [[ open == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ open == *=* ]]
+compdef:159> cmd=open 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_open 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_options
+compinit:492> _i_name=_options 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _options
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_options_set
+compinit:492> _i_name=_options_set 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _options_set
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_options_unset
+compinit:492> _i_name=_options_unset 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _options_unset
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_osc
+compinit:492> _i_name=_osc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ osc == -[pPkK](n|) ]]
+compinit:503> compdef -na _osc osc
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _osc == *=* ]]
+compdef:79> func=_osc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _osc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ osc == -N ]]
+compdef:134> [[ osc == -p ]]
+compdef:136> [[ osc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ osc == *=* ]]
+compdef:159> cmd=osc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_osc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_other_accounts
+compinit:492> _i_name=_other_accounts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ talk == -[pPkK](n|) ]]
+compinit:503> compdef -na _other_accounts talk ntalk ytalk
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _other_accounts == *=* ]]
+compdef:79> func=_other_accounts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _other_accounts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ talk == -N ]]
+compdef:134> [[ talk == -p ]]
+compdef:136> [[ talk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ talk == *=* ]]
+compdef:159> cmd=talk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_other_accounts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ntalk == -N ]]
+compdef:134> [[ ntalk == -p ]]
+compdef:136> [[ ntalk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ntalk == *=* ]]
+compdef:159> cmd=ntalk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_other_accounts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ytalk == -N ]]
+compdef:134> [[ ytalk == -p ]]
+compdef:136> [[ ytalk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ytalk == *=* ]]
+compdef:159> cmd=ytalk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_other_accounts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pack
+compinit:492> _i_name=_pack 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pack == -[pPkK](n|) ]]
+compinit:503> compdef -na _pack pack unpack 'pcat=unpack'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pack == *=* ]]
+compdef:79> func=_pack 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pack
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ pack == -N ]]
+compdef:134> [[ pack == -p ]]
+compdef:136> [[ pack == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pack == *=* ]]
+compdef:159> cmd=pack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ unpack == -N ]]
+compdef:134> [[ unpack == -p ]]
+compdef:136> [[ unpack == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unpack == *=* ]]
+compdef:159> cmd=unpack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'pcat=unpack' == -N ]]
+compdef:134> [[ 'pcat=unpack' == -p ]]
+compdef:136> [[ 'pcat=unpack' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'pcat=unpack' == *=* ]]
+compdef:156> cmd=pcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pack 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unpack 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_parameter
+compinit:492> _i_name=_parameter 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -parameter- == -[pPkK](n|) ]]
+compinit:503> compdef -na _parameter -parameter-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _parameter == *=* ]]
+compdef:79> func=_parameter 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _parameter
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -parameter- == -N ]]
+compdef:134> [[ -parameter- == -p ]]
+compdef:136> [[ -parameter- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -parameter- == *=* ]]
+compdef:159> cmd=-parameter- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_parameter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_parameters
+compinit:492> _i_name=_parameters 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _parameters
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_patch
+compinit:492> _i_name=_patch 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ patch == -[pPkK](n|) ]]
+compinit:503> compdef -na _patch patch
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _patch == *=* ]]
+compdef:79> func=_patch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _patch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ patch == -N ]]
+compdef:134> [[ patch == -p ]]
+compdef:136> [[ patch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ patch == *=* ]]
+compdef:159> cmd=patch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_path_commands
+compinit:492> _i_name=_path_commands 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _path_commands
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_path_files
+compinit:492> _i_name=_path_files 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _path_files
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pax
+compinit:492> _i_name=_pax 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pax == -[pPkK](n|) ]]
+compinit:503> compdef -na _pax pax
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pax == *=* ]]
+compdef:79> func=_pax 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pax
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pax == -N ]]
+compdef:134> [[ pax == -p ]]
+compdef:136> [[ pax == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pax == *=* ]]
+compdef:159> cmd=pax 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pax 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pbm
+compinit:492> _i_name=_pbm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -P == -[pPkK](n|) ]]
+compinit:501> compdef -Pna _pbm '(p[bgpn]m*|*top[bgpn]m)'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P == p ]]
+compdef:26> [[ P == P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pbm == *=* ]]
+compdef:79> func=_pbm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pbm
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '(p[bgpn]m*|*top[bgpn]m)' == -N ]]
+compdef:134> [[ '(p[bgpn]m*|*top[bgpn]m)' == -p ]]
+compdef:136> [[ '(p[bgpn]m*|*top[bgpn]m)' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '(p[bgpn]m*|*top[bgpn]m)' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_pbm 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pbuilder
+compinit:492> _i_name=_pbuilder 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pbuilder == -[pPkK](n|) ]]
+compinit:503> compdef -na _pbuilder pbuilder
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pbuilder == *=* ]]
+compdef:79> func=_pbuilder 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pbuilder
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pbuilder == -N ]]
+compdef:134> [[ pbuilder == -p ]]
+compdef:136> [[ pbuilder == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pbuilder == *=* ]]
+compdef:159> cmd=pbuilder 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pbuilder 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pdf
+compinit:492> _i_name=_pdf 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pdf2dsc == -[pPkK](n|) ]]
+compinit:503> compdef -na _pdf pdf2dsc pdf2ps pdfimages pdfinfo pdftopbm pdftops pdftotext pdfopt pdffonts kpdf apvlv evince epdfview
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pdf == *=* ]]
+compdef:79> func=_pdf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pdf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ pdf2dsc == -N ]]
+compdef:134> [[ pdf2dsc == -p ]]
+compdef:136> [[ pdf2dsc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdf2dsc == *=* ]]
+compdef:159> cmd=pdf2dsc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ pdf2ps == -N ]]
+compdef:134> [[ pdf2ps == -p ]]
+compdef:136> [[ pdf2ps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdf2ps == *=* ]]
+compdef:159> cmd=pdf2ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ pdfimages == -N ]]
+compdef:134> [[ pdfimages == -p ]]
+compdef:136> [[ pdfimages == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfimages == *=* ]]
+compdef:159> cmd=pdfimages 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pdfinfo == -N ]]
+compdef:134> [[ pdfinfo == -p ]]
+compdef:136> [[ pdfinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfinfo == *=* ]]
+compdef:159> cmd=pdfinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ pdftopbm == -N ]]
+compdef:134> [[ pdftopbm == -p ]]
+compdef:136> [[ pdftopbm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftopbm == *=* ]]
+compdef:159> cmd=pdftopbm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ pdftops == -N ]]
+compdef:134> [[ pdftops == -p ]]
+compdef:136> [[ pdftops == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftops == *=* ]]
+compdef:159> cmd=pdftops 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pdftotext == -N ]]
+compdef:134> [[ pdftotext == -p ]]
+compdef:136> [[ pdftotext == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftotext == *=* ]]
+compdef:159> cmd=pdftotext 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pdfopt == -N ]]
+compdef:134> [[ pdfopt == -p ]]
+compdef:136> [[ pdfopt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfopt == *=* ]]
+compdef:159> cmd=pdfopt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pdffonts == -N ]]
+compdef:134> [[ pdffonts == -p ]]
+compdef:136> [[ pdffonts == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdffonts == *=* ]]
+compdef:159> cmd=pdffonts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ kpdf == -N ]]
+compdef:134> [[ kpdf == -p ]]
+compdef:136> [[ kpdf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kpdf == *=* ]]
+compdef:159> cmd=kpdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ apvlv == -N ]]
+compdef:134> [[ apvlv == -p ]]
+compdef:136> [[ apvlv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apvlv == *=* ]]
+compdef:159> cmd=apvlv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ evince == -N ]]
+compdef:134> [[ evince == -p ]]
+compdef:136> [[ evince == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ evince == *=* ]]
+compdef:159> cmd=evince 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ epdfview == -N ]]
+compdef:134> [[ epdfview == -p ]]
+compdef:136> [[ epdfview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ epdfview == *=* ]]
+compdef:159> cmd=epdfview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pdftk
+compinit:492> _i_name=_pdftk 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pdftk == -[pPkK](n|) ]]
+compinit:503> compdef -na _pdftk pdftk
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pdftk == *=* ]]
+compdef:79> func=_pdftk 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pdftk
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pdftk == -N ]]
+compdef:134> [[ pdftk == -p ]]
+compdef:136> [[ pdftk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftk == *=* ]]
+compdef:159> cmd=pdftk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdftk 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_perforce
+compinit:492> _i_name=_perforce 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ p4 == -[pPkK](n|) ]]
+compinit:503> compdef -na _perforce p4 p4d -value-,P4CLIENT,-default- -value-,P4PORT,-default- -value-,P4MERGE,-default- -value-,P4USER,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perforce == *=* ]]
+compdef:79> func=_perforce 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perforce
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ p4 == -N ]]
+compdef:134> [[ p4 == -p ]]
+compdef:136> [[ p4 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ p4 == *=* ]]
+compdef:159> cmd=p4 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ p4d == -N ]]
+compdef:134> [[ p4d == -p ]]
+compdef:136> [[ p4d == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ p4d == *=* ]]
+compdef:159> cmd=p4d 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ -value-,P4CLIENT,-default- == -N ]]
+compdef:134> [[ -value-,P4CLIENT,-default- == -p ]]
+compdef:136> [[ -value-,P4CLIENT,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4CLIENT,-default- == *=* ]]
+compdef:159> cmd=-value-,P4CLIENT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,P4PORT,-default- == -N ]]
+compdef:134> [[ -value-,P4PORT,-default- == -p ]]
+compdef:136> [[ -value-,P4PORT,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4PORT,-default- == *=* ]]
+compdef:159> cmd=-value-,P4PORT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,P4MERGE,-default- == -N ]]
+compdef:134> [[ -value-,P4MERGE,-default- == -p ]]
+compdef:136> [[ -value-,P4MERGE,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4MERGE,-default- == *=* ]]
+compdef:159> cmd=-value-,P4MERGE,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,P4USER,-default- == -N ]]
+compdef:134> [[ -value-,P4USER,-default- == -p ]]
+compdef:136> [[ -value-,P4USER,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4USER,-default- == *=* ]]
+compdef:159> cmd=-value-,P4USER,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_perl
+compinit:492> _i_name=_perl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ perl == -[pPkK](n|) ]]
+compinit:503> compdef -na _perl perl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perl == *=* ]]
+compdef:79> func=_perl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ perl == -N ]]
+compdef:134> [[ perl == -p ]]
+compdef:136> [[ perl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ perl == *=* ]]
+compdef:159> cmd=perl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_perl_basepods
+compinit:492> _i_name=_perl_basepods 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _perl_basepods
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_perl_modules
+compinit:492> _i_name=_perl_modules 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pmpath == -[pPkK](n|) ]]
+compinit:503> compdef -na _perl_modules pmpath pmvers pmdesc pmload pmexp pmeth pmls pmcat pman pmfunc podgrep podtoc podpath
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perl_modules == *=* ]]
+compdef:79> func=_perl_modules 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perl_modules
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ pmpath == -N ]]
+compdef:134> [[ pmpath == -p ]]
+compdef:136> [[ pmpath == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmpath == *=* ]]
+compdef:159> cmd=pmpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ pmvers == -N ]]
+compdef:134> [[ pmvers == -p ]]
+compdef:136> [[ pmvers == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmvers == *=* ]]
+compdef:159> cmd=pmvers 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ pmdesc == -N ]]
+compdef:134> [[ pmdesc == -p ]]
+compdef:136> [[ pmdesc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmdesc == *=* ]]
+compdef:159> cmd=pmdesc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pmload == -N ]]
+compdef:134> [[ pmload == -p ]]
+compdef:136> [[ pmload == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmload == *=* ]]
+compdef:159> cmd=pmload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ pmexp == -N ]]
+compdef:134> [[ pmexp == -p ]]
+compdef:136> [[ pmexp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmexp == *=* ]]
+compdef:159> cmd=pmexp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ pmeth == -N ]]
+compdef:134> [[ pmeth == -p ]]
+compdef:136> [[ pmeth == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmeth == *=* ]]
+compdef:159> cmd=pmeth 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pmls == -N ]]
+compdef:134> [[ pmls == -p ]]
+compdef:136> [[ pmls == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmls == *=* ]]
+compdef:159> cmd=pmls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pmcat == -N ]]
+compdef:134> [[ pmcat == -p ]]
+compdef:136> [[ pmcat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmcat == *=* ]]
+compdef:159> cmd=pmcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pman == -N ]]
+compdef:134> [[ pman == -p ]]
+compdef:136> [[ pman == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pman == *=* ]]
+compdef:159> cmd=pman 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pmfunc == -N ]]
+compdef:134> [[ pmfunc == -p ]]
+compdef:136> [[ pmfunc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmfunc == *=* ]]
+compdef:159> cmd=pmfunc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ podgrep == -N ]]
+compdef:134> [[ podgrep == -p ]]
+compdef:136> [[ podgrep == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ podgrep == *=* ]]
+compdef:159> cmd=podgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ podtoc == -N ]]
+compdef:134> [[ podtoc == -p ]]
+compdef:136> [[ podtoc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ podtoc == *=* ]]
+compdef:159> cmd=podtoc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ podpath == -N ]]
+compdef:134> [[ podpath == -p ]]
+compdef:136> [[ podpath == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ podpath == *=* ]]
+compdef:159> cmd=podpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_perldoc
+compinit:492> _i_name=_perldoc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ perldoc == -[pPkK](n|) ]]
+compinit:503> compdef -na _perldoc perldoc -value-,PERLDOC,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perldoc == *=* ]]
+compdef:79> func=_perldoc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perldoc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ perldoc == -N ]]
+compdef:134> [[ perldoc == -p ]]
+compdef:136> [[ perldoc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ perldoc == *=* ]]
+compdef:159> cmd=perldoc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perldoc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,PERLDOC,-default- == -N ]]
+compdef:134> [[ -value-,PERLDOC,-default- == -p ]]
+compdef:136> [[ -value-,PERLDOC,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PERLDOC,-default- == *=* ]]
+compdef:159> cmd=-value-,PERLDOC,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perldoc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pfctl
+compinit:492> _i_name=_pfctl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pfctl == -[pPkK](n|) ]]
+compinit:503> compdef -na _pfctl pfctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pfctl == *=* ]]
+compdef:79> func=_pfctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pfctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pfctl == -N ]]
+compdef:134> [[ pfctl == -p ]]
+compdef:136> [[ pfctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pfctl == *=* ]]
+compdef:159> cmd=pfctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pfctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pfexec
+compinit:492> _i_name=_pfexec 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pfexec == -[pPkK](n|) ]]
+compinit:503> compdef -na _pfexec pfexec
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pfexec == *=* ]]
+compdef:79> func=_pfexec 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pfexec
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pfexec == -N ]]
+compdef:134> [[ pfexec == -p ]]
+compdef:136> [[ pfexec == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pfexec == *=* ]]
+compdef:159> cmd=pfexec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pfexec 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pgrep
+compinit:492> _i_name=_pgrep 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pgrep == -[pPkK](n|) ]]
+compinit:503> compdef -na _pgrep pgrep pkill ''
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pgrep == *=* ]]
+compdef:79> func=_pgrep 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pgrep
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ pgrep == -N ]]
+compdef:134> [[ pgrep == -p ]]
+compdef:136> [[ pgrep == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pgrep == *=* ]]
+compdef:159> cmd=pgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pgrep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ pkill == -N ]]
+compdef:134> [[ pkill == -p ]]
+compdef:136> [[ pkill == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkill == *=* ]]
+compdef:159> cmd=pkill 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pgrep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '' == -N ]]
+compdef:134> [[ '' == -p ]]
+compdef:136> [[ '' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '' == *=* ]]
+compdef:159> cmd='' 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pgrep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_php
+compinit:492> _i_name=_php 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ php == -[pPkK](n|) ]]
+compinit:503> compdef -na _php php
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _php == *=* ]]
+compdef:79> func=_php 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _php
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ php == -N ]]
+compdef:134> [[ php == -p ]]
+compdef:136> [[ php == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ php == *=* ]]
+compdef:159> cmd=php 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_php 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_physical_volumes
+compinit:492> _i_name=_physical_volumes 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _physical_volumes
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pick_variant
+compinit:492> _i_name=_pick_variant 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _pick_variant
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pids
+compinit:492> _i_name=_pids 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pflags == -[pPkK](n|) ]]
+compinit:503> compdef -na _pids pflags pcred pmap pldd psig pstack pfiles pwdx pstop prun pwait ptree
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pids == *=* ]]
+compdef:79> func=_pids 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pids
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ pflags == -N ]]
+compdef:134> [[ pflags == -p ]]
+compdef:136> [[ pflags == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pflags == *=* ]]
+compdef:159> cmd=pflags 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ pcred == -N ]]
+compdef:134> [[ pcred == -p ]]
+compdef:136> [[ pcred == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pcred == *=* ]]
+compdef:159> cmd=pcred 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pmap == -N ]]
+compdef:134> [[ pmap == -p ]]
+compdef:136> [[ pmap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmap == *=* ]]
+compdef:159> cmd=pmap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ pldd == -N ]]
+compdef:134> [[ pldd == -p ]]
+compdef:136> [[ pldd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pldd == *=* ]]
+compdef:159> cmd=pldd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ psig == -N ]]
+compdef:134> [[ psig == -p ]]
+compdef:136> [[ psig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psig == *=* ]]
+compdef:159> cmd=psig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pstack == -N ]]
+compdef:134> [[ pstack == -p ]]
+compdef:136> [[ pstack == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstack == *=* ]]
+compdef:159> cmd=pstack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pfiles == -N ]]
+compdef:134> [[ pfiles == -p ]]
+compdef:136> [[ pfiles == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pfiles == *=* ]]
+compdef:159> cmd=pfiles 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pwdx == -N ]]
+compdef:134> [[ pwdx == -p ]]
+compdef:136> [[ pwdx == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pwdx == *=* ]]
+compdef:159> cmd=pwdx 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pstop == -N ]]
+compdef:134> [[ pstop == -p ]]
+compdef:136> [[ pstop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstop == *=* ]]
+compdef:159> cmd=pstop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ prun == -N ]]
+compdef:134> [[ prun == -p ]]
+compdef:136> [[ prun == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prun == *=* ]]
+compdef:159> cmd=prun 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ pwait == -N ]]
+compdef:134> [[ pwait == -p ]]
+compdef:136> [[ pwait == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pwait == *=* ]]
+compdef:159> cmd=pwait 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ptree == -N ]]
+compdef:134> [[ ptree == -p ]]
+compdef:136> [[ ptree == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ptree == *=* ]]
+compdef:159> cmd=ptree 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pine
+compinit:492> _i_name=_pine 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pine == -[pPkK](n|) ]]
+compinit:503> compdef -na _pine pine pinef
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pine == *=* ]]
+compdef:79> func=_pine 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pine
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ pine == -N ]]
+compdef:134> [[ pine == -p ]]
+compdef:136> [[ pine == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pine == *=* ]]
+compdef:159> cmd=pine 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pine 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pinef == -N ]]
+compdef:134> [[ pinef == -p ]]
+compdef:136> [[ pinef == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pinef == *=* ]]
+compdef:159> cmd=pinef 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pine 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ping
+compinit:492> _i_name=_ping 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ping == -[pPkK](n|) ]]
+compinit:503> compdef -na _ping ping
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ping == *=* ]]
+compdef:79> func=_ping 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ping
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ping == -N ]]
+compdef:134> [[ ping == -p ]]
+compdef:136> [[ ping == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ping == *=* ]]
+compdef:159> cmd=ping 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ping 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_piuparts
+compinit:492> _i_name=_piuparts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ piuparts == -[pPkK](n|) ]]
+compinit:503> compdef -na _piuparts piuparts
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _piuparts == *=* ]]
+compdef:79> func=_piuparts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _piuparts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ piuparts == -N ]]
+compdef:134> [[ piuparts == -p ]]
+compdef:136> [[ piuparts == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ piuparts == *=* ]]
+compdef:159> cmd=piuparts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_piuparts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pkg-config
+compinit:492> _i_name=_pkg-config 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pkg-config == -[pPkK](n|) ]]
+compinit:503> compdef -na _pkg-config pkg-config
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkg-config == *=* ]]
+compdef:79> func=_pkg-config 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkg-config
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkg-config == -N ]]
+compdef:134> [[ pkg-config == -p ]]
+compdef:136> [[ pkg-config == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg-config == *=* ]]
+compdef:159> cmd=pkg-config 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkg-config 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pkg5
+compinit:492> _i_name=_pkg5 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pkg == -[pPkK](n|) ]]
+compinit:503> compdef -na _pkg5 pkg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkg5 == *=* ]]
+compdef:79> func=_pkg5 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkg5
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkg == -N ]]
+compdef:134> [[ pkg == -p ]]
+compdef:136> [[ pkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg == *=* ]]
+compdef:159> cmd=pkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkg5 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pkg_instance
+compinit:492> _i_name=_pkg_instance 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _pkg_instance
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pkgadd
+compinit:492> _i_name=_pkgadd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pkgadd == -[pPkK](n|) ]]
+compinit:503> compdef -na _pkgadd pkgadd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkgadd == *=* ]]
+compdef:79> func=_pkgadd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkgadd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkgadd == -N ]]
+compdef:134> [[ pkgadd == -p ]]
+compdef:136> [[ pkgadd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkgadd == *=* ]]
+compdef:159> cmd=pkgadd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgadd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pkginfo
+compinit:492> _i_name=_pkginfo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pkginfo == -[pPkK](n|) ]]
+compinit:503> compdef -na _pkginfo pkginfo
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkginfo == *=* ]]
+compdef:79> func=_pkginfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkginfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkginfo == -N ]]
+compdef:134> [[ pkginfo == -p ]]
+compdef:136> [[ pkginfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkginfo == *=* ]]
+compdef:159> cmd=pkginfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkginfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pkgrm
+compinit:492> _i_name=_pkgrm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pkgrm == -[pPkK](n|) ]]
+compinit:503> compdef -na _pkgrm pkgrm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkgrm == *=* ]]
+compdef:79> func=_pkgrm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkgrm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkgrm == -N ]]
+compdef:134> [[ pkgrm == -p ]]
+compdef:136> [[ pkgrm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkgrm == *=* ]]
+compdef:159> cmd=pkgrm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgrm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pkgtool
+compinit:492> _i_name=_pkgtool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ installpkg == -[pPkK](n|) ]]
+compinit:503> compdef -na _pkgtool installpkg upgradepkg removepkg pkgtool explodepkg makepkg ''
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkgtool == *=* ]]
+compdef:79> func=_pkgtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkgtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ installpkg == -N ]]
+compdef:134> [[ installpkg == -p ]]
+compdef:136> [[ installpkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ installpkg == *=* ]]
+compdef:159> cmd=installpkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ upgradepkg == -N ]]
+compdef:134> [[ upgradepkg == -p ]]
+compdef:136> [[ upgradepkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ upgradepkg == *=* ]]
+compdef:159> cmd=upgradepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ removepkg == -N ]]
+compdef:134> [[ removepkg == -p ]]
+compdef:136> [[ removepkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ removepkg == *=* ]]
+compdef:159> cmd=removepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pkgtool == -N ]]
+compdef:134> [[ pkgtool == -p ]]
+compdef:136> [[ pkgtool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkgtool == *=* ]]
+compdef:159> cmd=pkgtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ explodepkg == -N ]]
+compdef:134> [[ explodepkg == -p ]]
+compdef:136> [[ explodepkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ explodepkg == *=* ]]
+compdef:159> cmd=explodepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ makepkg == -N ]]
+compdef:134> [[ makepkg == -p ]]
+compdef:136> [[ makepkg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ makepkg == *=* ]]
+compdef:159> cmd=makepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '' == -N ]]
+compdef:134> [[ '' == -p ]]
+compdef:136> [[ '' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '' == *=* ]]
+compdef:159> cmd='' 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z _pgrep ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pon
+compinit:492> _i_name=_pon 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pon == -[pPkK](n|) ]]
+compinit:503> compdef -na _pon pon poff
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pon == *=* ]]
+compdef:79> func=_pon 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pon
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ pon == -N ]]
+compdef:134> [[ pon == -p ]]
+compdef:136> [[ pon == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pon == *=* ]]
+compdef:159> cmd=pon 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pon 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ poff == -N ]]
+compdef:134> [[ poff == -p ]]
+compdef:136> [[ poff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ poff == *=* ]]
+compdef:159> cmd=poff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pon 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_portaudit
+compinit:492> _i_name=_portaudit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ portaudit == -[pPkK](n|) ]]
+compinit:503> compdef -na _portaudit portaudit
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portaudit == *=* ]]
+compdef:79> func=_portaudit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portaudit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portaudit == -N ]]
+compdef:134> [[ portaudit == -p ]]
+compdef:136> [[ portaudit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portaudit == *=* ]]
+compdef:159> cmd=portaudit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portaudit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_portlint
+compinit:492> _i_name=_portlint 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ portlint == -[pPkK](n|) ]]
+compinit:503> compdef -na _portlint portlint
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portlint == *=* ]]
+compdef:79> func=_portlint 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portlint
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portlint == -N ]]
+compdef:134> [[ portlint == -p ]]
+compdef:136> [[ portlint == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portlint == *=* ]]
+compdef:159> cmd=portlint 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portlint 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_portmaster
+compinit:492> _i_name=_portmaster 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ portmaster == -[pPkK](n|) ]]
+compinit:503> compdef -na _portmaster portmaster
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portmaster == *=* ]]
+compdef:79> func=_portmaster 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portmaster
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portmaster == -N ]]
+compdef:134> [[ portmaster == -p ]]
+compdef:136> [[ portmaster == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portmaster == *=* ]]
+compdef:159> cmd=portmaster 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portmaster 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ports
+compinit:492> _i_name=_ports 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _ports
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_portsnap
+compinit:492> _i_name=_portsnap 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ portsnap == -[pPkK](n|) ]]
+compinit:503> compdef -na _portsnap portsnap
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portsnap == *=* ]]
+compdef:79> func=_portsnap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portsnap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portsnap == -N ]]
+compdef:134> [[ portsnap == -p ]]
+compdef:136> [[ portsnap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portsnap == *=* ]]
+compdef:159> cmd=portsnap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portsnap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_postfix
+compinit:492> _i_name=_postfix 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ postsuper == -[pPkK](n|) ]]
+compinit:503> compdef -na _postfix postsuper
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _postfix == *=* ]]
+compdef:79> func=_postfix 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _postfix
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ postsuper == -N ]]
+compdef:134> [[ postsuper == -p ]]
+compdef:136> [[ postsuper == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ postsuper == *=* ]]
+compdef:159> cmd=postsuper 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postfix 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_postscript
+compinit:492> _i_name=_postscript 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ps2epsi == -[pPkK](n|) ]]
+compinit:503> compdef -na _postscript ps2epsi ps2pdf psmulti pswrap ps2pdf12 ps2pdf13 ps2pdf14 ps2pdfwr ps2ps
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _postscript == *=* ]]
+compdef:79> func=_postscript 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _postscript
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ ps2epsi == -N ]]
+compdef:134> [[ ps2epsi == -p ]]
+compdef:136> [[ ps2epsi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2epsi == *=* ]]
+compdef:159> cmd=ps2epsi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ ps2pdf == -N ]]
+compdef:134> [[ ps2pdf == -p ]]
+compdef:136> [[ ps2pdf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf == *=* ]]
+compdef:159> cmd=ps2pdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ psmulti == -N ]]
+compdef:134> [[ psmulti == -p ]]
+compdef:136> [[ psmulti == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psmulti == *=* ]]
+compdef:159> cmd=psmulti 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pswrap == -N ]]
+compdef:134> [[ pswrap == -p ]]
+compdef:136> [[ pswrap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pswrap == *=* ]]
+compdef:159> cmd=pswrap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ps2pdf12 == -N ]]
+compdef:134> [[ ps2pdf12 == -p ]]
+compdef:136> [[ ps2pdf12 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf12 == *=* ]]
+compdef:159> cmd=ps2pdf12 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ ps2pdf13 == -N ]]
+compdef:134> [[ ps2pdf13 == -p ]]
+compdef:136> [[ ps2pdf13 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf13 == *=* ]]
+compdef:159> cmd=ps2pdf13 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ps2pdf14 == -N ]]
+compdef:134> [[ ps2pdf14 == -p ]]
+compdef:136> [[ ps2pdf14 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf14 == *=* ]]
+compdef:159> cmd=ps2pdf14 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ps2pdfwr == -N ]]
+compdef:134> [[ ps2pdfwr == -p ]]
+compdef:136> [[ ps2pdfwr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdfwr == *=* ]]
+compdef:159> cmd=ps2pdfwr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ps2ps == -N ]]
+compdef:134> [[ ps2ps == -p ]]
+compdef:136> [[ ps2ps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2ps == *=* ]]
+compdef:159> cmd=ps2ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_powerd
+compinit:492> _i_name=_powerd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ powerd == -[pPkK](n|) ]]
+compinit:503> compdef -na _powerd powerd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _powerd == *=* ]]
+compdef:79> func=_powerd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _powerd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ powerd == -N ]]
+compdef:134> [[ powerd == -p ]]
+compdef:136> [[ powerd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ powerd == *=* ]]
+compdef:159> cmd=powerd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_powerd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_prcs
+compinit:492> _i_name=_prcs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ prcs == -[pPkK](n|) ]]
+compinit:503> compdef -na _prcs prcs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prcs == *=* ]]
+compdef:79> func=_prcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prcs == -N ]]
+compdef:134> [[ prcs == -p ]]
+compdef:136> [[ prcs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prcs == *=* ]]
+compdef:159> cmd=prcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_precommand
+compinit:492> _i_name=_precommand 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ - == -[pPkK](n|) ]]
+compinit:503> compdef -na _precommand - nohup eval time rusage noglob nocorrect exec catchsegv aoss hilite
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 13  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 12  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _precommand == *=* ]]
+compdef:79> func=_precommand 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _precommand
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  11  ))
+compdef:132> [[ - == -N ]]
+compdef:134> [[ - == -p ]]
+compdef:136> [[ - == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ - == *=* ]]
+compdef:159> cmd=- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ nohup == -N ]]
+compdef:134> [[ nohup == -p ]]
+compdef:136> [[ nohup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nohup == *=* ]]
+compdef:159> cmd=nohup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ eval == -N ]]
+compdef:134> [[ eval == -p ]]
+compdef:136> [[ eval == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ eval == *=* ]]
+compdef:159> cmd=eval 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ time == -N ]]
+compdef:134> [[ time == -p ]]
+compdef:136> [[ time == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ time == *=* ]]
+compdef:159> cmd=time 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ rusage == -N ]]
+compdef:134> [[ rusage == -p ]]
+compdef:136> [[ rusage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rusage == *=* ]]
+compdef:159> cmd=rusage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ noglob == -N ]]
+compdef:134> [[ noglob == -p ]]
+compdef:136> [[ noglob == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ noglob == *=* ]]
+compdef:159> cmd=noglob 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ nocorrect == -N ]]
+compdef:134> [[ nocorrect == -p ]]
+compdef:136> [[ nocorrect == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nocorrect == *=* ]]
+compdef:159> cmd=nocorrect 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ exec == -N ]]
+compdef:134> [[ exec == -p ]]
+compdef:136> [[ exec == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ exec == *=* ]]
+compdef:159> cmd=exec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ catchsegv == -N ]]
+compdef:134> [[ catchsegv == -p ]]
+compdef:136> [[ catchsegv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ catchsegv == *=* ]]
+compdef:159> cmd=catchsegv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ aoss == -N ]]
+compdef:134> [[ aoss == -p ]]
+compdef:136> [[ aoss == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aoss == *=* ]]
+compdef:159> cmd=aoss 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ hilite == -N ]]
+compdef:134> [[ hilite == -p ]]
+compdef:136> [[ hilite == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hilite == *=* ]]
+compdef:159> cmd=hilite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_prefix
+compinit:492> _i_name=_prefix 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _prefix
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_print
+compinit:492> _i_name=_print 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ print == -[pPkK](n|) ]]
+compinit:503> compdef -na _print print printf
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _print == *=* ]]
+compdef:79> func=_print 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _print
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ print == -N ]]
+compdef:134> [[ print == -p ]]
+compdef:136> [[ print == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ print == *=* ]]
+compdef:159> cmd=print 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_print 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ printf == -N ]]
+compdef:134> [[ printf == -p ]]
+compdef:136> [[ printf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ printf == *=* ]]
+compdef:159> cmd=printf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_print 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_printenv
+compinit:492> _i_name=_printenv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ printenv == -[pPkK](n|) ]]
+compinit:503> compdef -na _printenv printenv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _printenv == *=* ]]
+compdef:79> func=_printenv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _printenv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ printenv == -N ]]
+compdef:134> [[ printenv == -p ]]
+compdef:136> [[ printenv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ printenv == *=* ]]
+compdef:159> cmd=printenv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_printenv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_printers
+compinit:492> _i_name=_printers 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -value-,PRINTER,-default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _printers -value-,PRINTER,-default- -value-,LPDEST,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _printers == *=* ]]
+compdef:79> func=_printers 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _printers
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,PRINTER,-default- == -N ]]
+compdef:134> [[ -value-,PRINTER,-default- == -p ]]
+compdef:136> [[ -value-,PRINTER,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PRINTER,-default- == *=* ]]
+compdef:159> cmd=-value-,PRINTER,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_printers 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,LPDEST,-default- == -N ]]
+compdef:134> [[ -value-,LPDEST,-default- == -p ]]
+compdef:136> [[ -value-,LPDEST,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LPDEST,-default- == *=* ]]
+compdef:159> cmd=-value-,LPDEST,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_printers 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_procstat
+compinit:492> _i_name=_procstat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ procstat == -[pPkK](n|) ]]
+compinit:503> compdef -na _procstat procstat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _procstat == *=* ]]
+compdef:79> func=_procstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _procstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ procstat == -N ]]
+compdef:134> [[ procstat == -p ]]
+compdef:136> [[ procstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ procstat == *=* ]]
+compdef:159> cmd=procstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_procstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_prompt
+compinit:492> _i_name=_prompt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ prompt == -[pPkK](n|) ]]
+compinit:503> compdef -na _prompt prompt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prompt == *=* ]]
+compdef:79> func=_prompt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prompt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prompt == -N ]]
+compdef:134> [[ prompt == -p ]]
+compdef:136> [[ prompt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prompt == *=* ]]
+compdef:159> cmd=prompt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prompt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_prove
+compinit:492> _i_name=_prove 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ prove == -[pPkK](n|) ]]
+compinit:503> compdef -na _prove prove
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prove == *=* ]]
+compdef:79> func=_prove 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prove
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prove == -N ]]
+compdef:134> [[ prove == -p ]]
+compdef:136> [[ prove == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prove == *=* ]]
+compdef:159> cmd=prove 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prove 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_prstat
+compinit:492> _i_name=_prstat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ prstat == -[pPkK](n|) ]]
+compinit:503> compdef -na _prstat prstat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prstat == *=* ]]
+compdef:79> func=_prstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prstat == -N ]]
+compdef:134> [[ prstat == -p ]]
+compdef:136> [[ prstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prstat == *=* ]]
+compdef:159> cmd=prstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ps
+compinit:492> _i_name=_ps 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ps == -[pPkK](n|) ]]
+compinit:503> compdef -na _ps ps
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ps == *=* ]]
+compdef:79> func=_ps 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ps
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ps == -N ]]
+compdef:134> [[ ps == -p ]]
+compdef:136> [[ ps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps == *=* ]]
+compdef:159> cmd=ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ps1234
+compinit:492> _i_name=_ps1234 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -value-,PROMPT,-default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _ps1234 -value-,PROMPT,-default- -value-,PROMPT2,-default- -value-,PROMPT3,-default- -value-,PROMPT4,-default- -value-,RPROMPT,-default- -value-,RPROMPT2,-default- -value-,PS1,-default- -value-,PS2,-default- -value-,PS3,-default- -value-,PS4,-default- -value-,RPS1,-default- -value-,RPS2,-default- -value-,SPROMPT,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ps1234 == *=* ]]
+compdef:79> func=_ps1234 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ps1234
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ -value-,PROMPT,-default- == -N ]]
+compdef:134> [[ -value-,PROMPT,-default- == -p ]]
+compdef:136> [[ -value-,PROMPT,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT,-default- == *=* ]]
+compdef:159> cmd=-value-,PROMPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ -value-,PROMPT2,-default- == -N ]]
+compdef:134> [[ -value-,PROMPT2,-default- == -p ]]
+compdef:136> [[ -value-,PROMPT2,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT2,-default- == *=* ]]
+compdef:159> cmd=-value-,PROMPT2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ -value-,PROMPT3,-default- == -N ]]
+compdef:134> [[ -value-,PROMPT3,-default- == -p ]]
+compdef:136> [[ -value-,PROMPT3,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT3,-default- == *=* ]]
+compdef:159> cmd=-value-,PROMPT3,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ -value-,PROMPT4,-default- == -N ]]
+compdef:134> [[ -value-,PROMPT4,-default- == -p ]]
+compdef:136> [[ -value-,PROMPT4,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT4,-default- == *=* ]]
+compdef:159> cmd=-value-,PROMPT4,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ -value-,RPROMPT,-default- == -N ]]
+compdef:134> [[ -value-,RPROMPT,-default- == -p ]]
+compdef:136> [[ -value-,RPROMPT,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPROMPT,-default- == *=* ]]
+compdef:159> cmd=-value-,RPROMPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ -value-,RPROMPT2,-default- == -N ]]
+compdef:134> [[ -value-,RPROMPT2,-default- == -p ]]
+compdef:136> [[ -value-,RPROMPT2,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPROMPT2,-default- == *=* ]]
+compdef:159> cmd=-value-,RPROMPT2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ -value-,PS1,-default- == -N ]]
+compdef:134> [[ -value-,PS1,-default- == -p ]]
+compdef:136> [[ -value-,PS1,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS1,-default- == *=* ]]
+compdef:159> cmd=-value-,PS1,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ -value-,PS2,-default- == -N ]]
+compdef:134> [[ -value-,PS2,-default- == -p ]]
+compdef:136> [[ -value-,PS2,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS2,-default- == *=* ]]
+compdef:159> cmd=-value-,PS2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ -value-,PS3,-default- == -N ]]
+compdef:134> [[ -value-,PS3,-default- == -p ]]
+compdef:136> [[ -value-,PS3,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS3,-default- == *=* ]]
+compdef:159> cmd=-value-,PS3,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ -value-,PS4,-default- == -N ]]
+compdef:134> [[ -value-,PS4,-default- == -p ]]
+compdef:136> [[ -value-,PS4,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS4,-default- == *=* ]]
+compdef:159> cmd=-value-,PS4,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,RPS1,-default- == -N ]]
+compdef:134> [[ -value-,RPS1,-default- == -p ]]
+compdef:136> [[ -value-,RPS1,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPS1,-default- == *=* ]]
+compdef:159> cmd=-value-,RPS1,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,RPS2,-default- == -N ]]
+compdef:134> [[ -value-,RPS2,-default- == -p ]]
+compdef:136> [[ -value-,RPS2,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPS2,-default- == *=* ]]
+compdef:159> cmd=-value-,RPS2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,SPROMPT,-default- == -N ]]
+compdef:134> [[ -value-,SPROMPT,-default- == -p ]]
+compdef:136> [[ -value-,SPROMPT,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,SPROMPT,-default- == *=* ]]
+compdef:159> cmd=-value-,SPROMPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pscp
+compinit:492> _i_name=_pscp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pscp == -[pPkK](n|) ]]
+compinit:503> compdef -na _pscp pscp pscp.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pscp == *=* ]]
+compdef:79> func=_pscp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pscp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ pscp == -N ]]
+compdef:134> [[ pscp == -p ]]
+compdef:136> [[ pscp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pscp == *=* ]]
+compdef:159> cmd=pscp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pscp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pscp.exe == -N ]]
+compdef:134> [[ pscp.exe == -p ]]
+compdef:136> [[ pscp.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pscp.exe == *=* ]]
+compdef:159> cmd=pscp.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pscp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pspdf
+compinit:492> _i_name=_pspdf 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ evince == -[pPkK](n|) ]]
+compinit:503> compdef -na _pspdf evince gsbj gsdj gsdj500 gslj gslp gsnd ps2ascii ghostview mgv pstoedit pstotgif zathura
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pspdf == *=* ]]
+compdef:79> func=_pspdf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pspdf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ evince == -N ]]
+compdef:134> [[ evince == -p ]]
+compdef:136> [[ evince == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ evince == *=* ]]
+compdef:159> cmd=evince 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z _pdf ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ gsbj == -N ]]
+compdef:134> [[ gsbj == -p ]]
+compdef:136> [[ gsbj == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsbj == *=* ]]
+compdef:159> cmd=gsbj 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ gsdj == -N ]]
+compdef:134> [[ gsdj == -p ]]
+compdef:136> [[ gsdj == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsdj == *=* ]]
+compdef:159> cmd=gsdj 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ gsdj500 == -N ]]
+compdef:134> [[ gsdj500 == -p ]]
+compdef:136> [[ gsdj500 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsdj500 == *=* ]]
+compdef:159> cmd=gsdj500 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ gslj == -N ]]
+compdef:134> [[ gslj == -p ]]
+compdef:136> [[ gslj == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gslj == *=* ]]
+compdef:159> cmd=gslj 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ gslp == -N ]]
+compdef:134> [[ gslp == -p ]]
+compdef:136> [[ gslp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gslp == *=* ]]
+compdef:159> cmd=gslp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ gsnd == -N ]]
+compdef:134> [[ gsnd == -p ]]
+compdef:136> [[ gsnd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsnd == *=* ]]
+compdef:159> cmd=gsnd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ ps2ascii == -N ]]
+compdef:134> [[ ps2ascii == -p ]]
+compdef:136> [[ ps2ascii == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2ascii == *=* ]]
+compdef:159> cmd=ps2ascii 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ghostview == -N ]]
+compdef:134> [[ ghostview == -p ]]
+compdef:136> [[ ghostview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ghostview == *=* ]]
+compdef:159> cmd=ghostview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mgv == -N ]]
+compdef:134> [[ mgv == -p ]]
+compdef:136> [[ mgv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mgv == *=* ]]
+compdef:159> cmd=mgv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pstoedit == -N ]]
+compdef:134> [[ pstoedit == -p ]]
+compdef:136> [[ pstoedit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstoedit == *=* ]]
+compdef:159> cmd=pstoedit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ pstotgif == -N ]]
+compdef:134> [[ pstotgif == -p ]]
+compdef:136> [[ pstotgif == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstotgif == *=* ]]
+compdef:159> cmd=pstotgif 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zathura == -N ]]
+compdef:134> [[ zathura == -p ]]
+compdef:136> [[ zathura == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zathura == *=* ]]
+compdef:159> cmd=zathura 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_psutils
+compinit:492> _i_name=_psutils 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ epsffit == -[pPkK](n|) ]]
+compinit:503> compdef -na _psutils epsffit extractres fixdlsrps fixfmps fixmacps fixpsditps fixpspps fixscribeps fixtpps fixwfwps fixwpps fixwwps includeres psbook psmerge psnup psresize psselect pstops getafm showchar
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 23  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 22  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _psutils == *=* ]]
+compdef:79> func=_psutils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _psutils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  21  ))
+compdef:132> [[ epsffit == -N ]]
+compdef:134> [[ epsffit == -p ]]
+compdef:136> [[ epsffit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ epsffit == *=* ]]
+compdef:159> cmd=epsffit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ extractres == -N ]]
+compdef:134> [[ extractres == -p ]]
+compdef:136> [[ extractres == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ extractres == *=* ]]
+compdef:159> cmd=extractres 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ fixdlsrps == -N ]]
+compdef:134> [[ fixdlsrps == -p ]]
+compdef:136> [[ fixdlsrps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixdlsrps == *=* ]]
+compdef:159> cmd=fixdlsrps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ fixfmps == -N ]]
+compdef:134> [[ fixfmps == -p ]]
+compdef:136> [[ fixfmps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixfmps == *=* ]]
+compdef:159> cmd=fixfmps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ fixmacps == -N ]]
+compdef:134> [[ fixmacps == -p ]]
+compdef:136> [[ fixmacps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixmacps == *=* ]]
+compdef:159> cmd=fixmacps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ fixpsditps == -N ]]
+compdef:134> [[ fixpsditps == -p ]]
+compdef:136> [[ fixpsditps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixpsditps == *=* ]]
+compdef:159> cmd=fixpsditps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ fixpspps == -N ]]
+compdef:134> [[ fixpspps == -p ]]
+compdef:136> [[ fixpspps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixpspps == *=* ]]
+compdef:159> cmd=fixpspps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ fixscribeps == -N ]]
+compdef:134> [[ fixscribeps == -p ]]
+compdef:136> [[ fixscribeps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixscribeps == *=* ]]
+compdef:159> cmd=fixscribeps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ fixtpps == -N ]]
+compdef:134> [[ fixtpps == -p ]]
+compdef:136> [[ fixtpps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixtpps == *=* ]]
+compdef:159> cmd=fixtpps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ fixwfwps == -N ]]
+compdef:134> [[ fixwfwps == -p ]]
+compdef:136> [[ fixwfwps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixwfwps == *=* ]]
+compdef:159> cmd=fixwfwps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ fixwpps == -N ]]
+compdef:134> [[ fixwpps == -p ]]
+compdef:136> [[ fixwpps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixwpps == *=* ]]
+compdef:159> cmd=fixwpps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ fixwwps == -N ]]
+compdef:134> [[ fixwwps == -p ]]
+compdef:136> [[ fixwwps == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixwwps == *=* ]]
+compdef:159> cmd=fixwwps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ includeres == -N ]]
+compdef:134> [[ includeres == -p ]]
+compdef:136> [[ includeres == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ includeres == *=* ]]
+compdef:159> cmd=includeres 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ psbook == -N ]]
+compdef:134> [[ psbook == -p ]]
+compdef:136> [[ psbook == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psbook == *=* ]]
+compdef:159> cmd=psbook 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ psmerge == -N ]]
+compdef:134> [[ psmerge == -p ]]
+compdef:136> [[ psmerge == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psmerge == *=* ]]
+compdef:159> cmd=psmerge 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ psnup == -N ]]
+compdef:134> [[ psnup == -p ]]
+compdef:136> [[ psnup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psnup == *=* ]]
+compdef:159> cmd=psnup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ psresize == -N ]]
+compdef:134> [[ psresize == -p ]]
+compdef:136> [[ psresize == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psresize == *=* ]]
+compdef:159> cmd=psresize 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ psselect == -N ]]
+compdef:134> [[ psselect == -p ]]
+compdef:136> [[ psselect == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psselect == *=* ]]
+compdef:159> cmd=psselect 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pstops == -N ]]
+compdef:134> [[ pstops == -p ]]
+compdef:136> [[ pstops == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstops == *=* ]]
+compdef:159> cmd=pstops 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ getafm == -N ]]
+compdef:134> [[ getafm == -p ]]
+compdef:136> [[ getafm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getafm == *=* ]]
+compdef:159> cmd=getafm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ showchar == -N ]]
+compdef:134> [[ showchar == -p ]]
+compdef:136> [[ showchar == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ showchar == *=* ]]
+compdef:159> cmd=showchar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ptree
+compinit:492> _i_name=_ptree 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ptree == -[pPkK](n|) ]]
+compinit:503> compdef -na _ptree ptree
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ptree == *=* ]]
+compdef:79> func=_ptree 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ptree
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ptree == -N ]]
+compdef:134> [[ ptree == -p ]]
+compdef:136> [[ ptree == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ptree == *=* ]]
+compdef:159> cmd=ptree 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z _pids ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pump
+compinit:492> _i_name=_pump 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pump == -[pPkK](n|) ]]
+compinit:503> compdef -na _pump pump
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pump == *=* ]]
+compdef:79> func=_pump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pump == -N ]]
+compdef:134> [[ pump == -p ]]
+compdef:136> [[ pump == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pump == *=* ]]
+compdef:159> cmd=pump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_putclip
+compinit:492> _i_name=_putclip 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ putclip == -[pPkK](n|) ]]
+compinit:503> compdef -na _putclip putclip putclip.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _putclip == *=* ]]
+compdef:79> func=_putclip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _putclip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ putclip == -N ]]
+compdef:134> [[ putclip == -p ]]
+compdef:136> [[ putclip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ putclip == *=* ]]
+compdef:159> cmd=putclip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_putclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ putclip.exe == -N ]]
+compdef:134> [[ putclip.exe == -p ]]
+compdef:136> [[ putclip.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ putclip.exe == *=* ]]
+compdef:159> cmd=putclip.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_putclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_pydoc
+compinit:492> _i_name=_pydoc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ pydoc == -[pPkK](n|) ]]
+compinit:503> compdef -na _pydoc pydoc
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pydoc == *=* ]]
+compdef:79> func=_pydoc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pydoc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pydoc == -N ]]
+compdef:134> [[ pydoc == -p ]]
+compdef:136> [[ pydoc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pydoc == *=* ]]
+compdef:159> cmd=pydoc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pydoc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_python
+compinit:492> _i_name=_python 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ python == -[pPkK](n|) ]]
+compinit:503> compdef -na _python python
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _python == *=* ]]
+compdef:79> func=_python 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _python
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ python == -N ]]
+compdef:134> [[ python == -p ]]
+compdef:136> [[ python == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ python == *=* ]]
+compdef:159> cmd=python 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_python 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_qemu
+compinit:492> _i_name=_qemu 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -P == -[pPkK](n|) ]]
+compinit:501> compdef -Pna _qemu 'qemu(|-system-*)'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P == p ]]
+compdef:26> [[ P == P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _qemu == *=* ]]
+compdef:79> func=_qemu 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _qemu
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'qemu(|-system-*)' == -N ]]
+compdef:134> [[ 'qemu(|-system-*)' == -p ]]
+compdef:136> [[ 'qemu(|-system-*)' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ 'qemu(|-system-*)' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_qemu 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_qiv
+compinit:492> _i_name=_qiv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ qiv == -[pPkK](n|) ]]
+compinit:503> compdef -na _qiv qiv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _qiv == *=* ]]
+compdef:79> func=_qiv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _qiv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ qiv == -N ]]
+compdef:134> [[ qiv == -p ]]
+compdef:136> [[ qiv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ qiv == *=* ]]
+compdef:159> cmd=qiv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_qiv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_qtplay
+compinit:492> _i_name=_qtplay 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ qtplay == -[pPkK](n|) ]]
+compinit:503> compdef -na _qtplay qtplay
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _qtplay == *=* ]]
+compdef:79> func=_qtplay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _qtplay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ qtplay == -N ]]
+compdef:134> [[ qtplay == -p ]]
+compdef:136> [[ qtplay == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ qtplay == *=* ]]
+compdef:159> cmd=qtplay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_qtplay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_quilt
+compinit:492> _i_name=_quilt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ quilt == -[pPkK](n|) ]]
+compinit:503> compdef -na _quilt quilt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _quilt == *=* ]]
+compdef:79> func=_quilt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _quilt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ quilt == -N ]]
+compdef:134> [[ quilt == -p ]]
+compdef:136> [[ quilt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ quilt == *=* ]]
+compdef:159> cmd=quilt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_quilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_raggle
+compinit:492> _i_name=_raggle 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ raggle == -[pPkK](n|) ]]
+compinit:503> compdef -na _raggle raggle
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _raggle == *=* ]]
+compdef:79> func=_raggle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _raggle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ raggle == -N ]]
+compdef:134> [[ raggle == -p ]]
+compdef:136> [[ raggle == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ raggle == *=* ]]
+compdef:159> cmd=raggle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_raggle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rake
+compinit:492> _i_name=_rake 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rake == -[pPkK](n|) ]]
+compinit:503> compdef -na _rake rake
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rake == *=* ]]
+compdef:79> func=_rake 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rake
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rake == -N ]]
+compdef:134> [[ rake == -p ]]
+compdef:136> [[ rake == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rake == *=* ]]
+compdef:159> cmd=rake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rake 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ranlib
+compinit:492> _i_name=_ranlib 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ranlib == -[pPkK](n|) ]]
+compinit:503> compdef -na _ranlib ranlib
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ranlib == *=* ]]
+compdef:79> func=_ranlib 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ranlib
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ranlib == -N ]]
+compdef:134> [[ ranlib == -p ]]
+compdef:136> [[ ranlib == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ranlib == *=* ]]
+compdef:159> cmd=ranlib 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ranlib 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rar
+compinit:492> _i_name=_rar 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rar == -[pPkK](n|) ]]
+compinit:503> compdef -na _rar rar unrar
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rar == *=* ]]
+compdef:79> func=_rar 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rar
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ rar == -N ]]
+compdef:134> [[ rar == -p ]]
+compdef:136> [[ rar == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rar == *=* ]]
+compdef:159> cmd=rar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ unrar == -N ]]
+compdef:134> [[ unrar == -p ]]
+compdef:136> [[ unrar == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unrar == *=* ]]
+compdef:159> cmd=unrar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rcs
+compinit:492> _i_name=_rcs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ co == -[pPkK](n|) ]]
+compinit:503> compdef -na _rcs co ci rcs rcsdiff merge
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rcs == *=* ]]
+compdef:79> func=_rcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ co == -N ]]
+compdef:134> [[ co == -p ]]
+compdef:136> [[ co == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ co == *=* ]]
+compdef:159> cmd=co 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ ci == -N ]]
+compdef:134> [[ ci == -p ]]
+compdef:136> [[ ci == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ci == *=* ]]
+compdef:159> cmd=ci 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ rcs == -N ]]
+compdef:134> [[ rcs == -p ]]
+compdef:136> [[ rcs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rcs == *=* ]]
+compdef:159> cmd=rcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ rcsdiff == -N ]]
+compdef:134> [[ rcsdiff == -p ]]
+compdef:136> [[ rcsdiff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rcsdiff == *=* ]]
+compdef:159> cmd=rcsdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ merge == -N ]]
+compdef:134> [[ merge == -p ]]
+compdef:136> [[ merge == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ merge == *=* ]]
+compdef:159> cmd=merge 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_read
+compinit:492> _i_name=_read 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ read == -[pPkK](n|) ]]
+compinit:503> compdef -na _read read
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _read == *=* ]]
+compdef:79> func=_read 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _read
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ read == -N ]]
+compdef:134> [[ read == -p ]]
+compdef:136> [[ read == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ read == *=* ]]
+compdef:159> cmd=read 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_read 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_read_comp
+compinit:492> _i_name=_read_comp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -k == -[pPkK](n|) ]]
+compinit:501> compdef -kna _read_comp complete-word '\C-x\C-r'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k == p ]]
+compdef:26> [[ k == P ]]
+compdef:28> [[ k == K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _read_comp == *=* ]]
+compdef:79> func=_read_comp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _read_comp
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word == .* ]]
+compdef:114> [[ complete-word == menu-select ]]
+compdef:115> zle -C _read_comp .complete-word _read_comp
+compdef:117> shift
+compdef:120> i=\C-x\C-r
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-x\C-r'
+compdef:122> IFS=' 	' +compdef:122> read -A opt
+compdef:123> [[ undefined-key == undefined-key ]]
+compdef:125> bindkey '\C-x\C-r' _read_comp
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_readshortcut
+compinit:492> _i_name=_readshortcut 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ readshortcut == -[pPkK](n|) ]]
+compinit:503> compdef -na _readshortcut readshortcut readshortcut.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _readshortcut == *=* ]]
+compdef:79> func=_readshortcut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _readshortcut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ readshortcut == -N ]]
+compdef:134> [[ readshortcut == -p ]]
+compdef:136> [[ readshortcut == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ readshortcut == *=* ]]
+compdef:159> cmd=readshortcut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_readshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ readshortcut.exe == -N ]]
+compdef:134> [[ readshortcut.exe == -p ]]
+compdef:136> [[ readshortcut.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ readshortcut.exe == *=* ]]
+compdef:159> cmd=readshortcut.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_readshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rebootin
+compinit:492> _i_name=_rebootin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rebootin == -[pPkK](n|) ]]
+compinit:503> compdef -na _rebootin rebootin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rebootin == *=* ]]
+compdef:79> func=_rebootin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rebootin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rebootin == -N ]]
+compdef:134> [[ rebootin == -p ]]
+compdef:136> [[ rebootin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rebootin == *=* ]]
+compdef:159> cmd=rebootin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rebootin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_redirect
+compinit:492> _i_name=_redirect 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -redirect- == -[pPkK](n|) ]]
+compinit:503> compdef -na _redirect -redirect-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _redirect == *=* ]]
+compdef:79> func=_redirect 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _redirect
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -redirect- == -N ]]
+compdef:134> [[ -redirect- == -p ]]
+compdef:136> [[ -redirect- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -redirect- == *=* ]]
+compdef:159> cmd=-redirect- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_redirect 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_regex_arguments
+compinit:492> _i_name=_regex_arguments 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _regex_arguments
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_regex_words
+compinit:492> _i_name=_regex_words 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _regex_words
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_remote_files
+compinit:492> _i_name=_remote_files 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _remote_files
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_renice
+compinit:492> _i_name=_renice 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ renice == -[pPkK](n|) ]]
+compinit:503> compdef -na _renice renice
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _renice == *=* ]]
+compdef:79> func=_renice 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _renice
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ renice == -N ]]
+compdef:134> [[ renice == -p ]]
+compdef:136> [[ renice == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ renice == *=* ]]
+compdef:159> cmd=renice 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_renice 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_reprepro
+compinit:492> _i_name=_reprepro 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ reprepro == -[pPkK](n|) ]]
+compinit:503> compdef -na _reprepro reprepro
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _reprepro == *=* ]]
+compdef:79> func=_reprepro 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _reprepro
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ reprepro == -N ]]
+compdef:134> [[ reprepro == -p ]]
+compdef:136> [[ reprepro == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ reprepro == *=* ]]
+compdef:159> cmd=reprepro 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_reprepro 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_requested
+compinit:492> _i_name=_requested 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _requested
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_retrieve_cache
+compinit:492> _i_name=_retrieve_cache 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _retrieve_cache
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_retrieve_mac_apps
+compinit:492> _i_name=_retrieve_mac_apps 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _retrieve_mac_apps
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ri
+compinit:492> _i_name=_ri 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ri == -[pPkK](n|) ]]
+compinit:503> compdef -na _ri ri
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ri == *=* ]]
+compdef:79> func=_ri 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ri
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ri == -N ]]
+compdef:134> [[ ri == -p ]]
+compdef:136> [[ ri == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ri == *=* ]]
+compdef:159> cmd=ri 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ri 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rlogin
+compinit:492> _i_name=_rlogin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rlogin == -[pPkK](n|) ]]
+compinit:503> compdef -na _rlogin rlogin rsh 'remsh=rsh' rcp
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rlogin == *=* ]]
+compdef:79> func=_rlogin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rlogin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ rlogin == -N ]]
+compdef:134> [[ rlogin == -p ]]
+compdef:136> [[ rlogin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rlogin == *=* ]]
+compdef:159> cmd=rlogin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ rsh == -N ]]
+compdef:134> [[ rsh == -p ]]
+compdef:136> [[ rsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rsh == *=* ]]
+compdef:159> cmd=rsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 'remsh=rsh' == -N ]]
+compdef:134> [[ 'remsh=rsh' == -p ]]
+compdef:136> [[ 'remsh=rsh' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'remsh=rsh' == *=* ]]
+compdef:156> cmd=remsh 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=rsh 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rcp == -N ]]
+compdef:134> [[ rcp == -p ]]
+compdef:136> [[ rcp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rcp == *=* ]]
+compdef:159> cmd=rcp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rm
+compinit:492> _i_name=_rm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rm == -[pPkK](n|) ]]
+compinit:503> compdef -na _rm rm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rm == *=* ]]
+compdef:79> func=_rm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rm == -N ]]
+compdef:134> [[ rm == -p ]]
+compdef:136> [[ rm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rm == *=* ]]
+compdef:159> cmd=rm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rpm
+compinit:492> _i_name=_rpm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rpm == -[pPkK](n|) ]]
+compinit:503> compdef -na _rpm rpm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rpm == *=* ]]
+compdef:79> func=_rpm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rpm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rpm == -N ]]
+compdef:134> [[ rpm == -p ]]
+compdef:136> [[ rpm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rpm == *=* ]]
+compdef:159> cmd=rpm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rpm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rpmbuild
+compinit:492> _i_name=_rpmbuild 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rpmbuild == -[pPkK](n|) ]]
+compinit:503> compdef -na _rpmbuild rpmbuild
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rpmbuild == *=* ]]
+compdef:79> func=_rpmbuild 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rpmbuild
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rpmbuild == -N ]]
+compdef:134> [[ rpmbuild == -p ]]
+compdef:136> [[ rpmbuild == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rpmbuild == *=* ]]
+compdef:159> cmd=rpmbuild 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rpmbuild 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rrdtool
+compinit:492> _i_name=_rrdtool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rrdtool == -[pPkK](n|) ]]
+compinit:503> compdef -na _rrdtool rrdtool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rrdtool == *=* ]]
+compdef:79> func=_rrdtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rrdtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rrdtool == -N ]]
+compdef:134> [[ rrdtool == -p ]]
+compdef:136> [[ rrdtool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rrdtool == *=* ]]
+compdef:159> cmd=rrdtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rrdtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rsync
+compinit:492> _i_name=_rsync 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rsync == -[pPkK](n|) ]]
+compinit:503> compdef -na _rsync rsync
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rsync == *=* ]]
+compdef:79> func=_rsync 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rsync
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rsync == -N ]]
+compdef:134> [[ rsync == -p ]]
+compdef:136> [[ rsync == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rsync == *=* ]]
+compdef:159> cmd=rsync 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rsync 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_rubber
+compinit:492> _i_name=_rubber 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rubber == -[pPkK](n|) ]]
+compinit:503> compdef -na _rubber rubber rubber-pipe rubber-info
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rubber == *=* ]]
+compdef:79> func=_rubber 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rubber
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ rubber == -N ]]
+compdef:134> [[ rubber == -p ]]
+compdef:136> [[ rubber == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rubber == *=* ]]
+compdef:159> cmd=rubber 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rubber 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ rubber-pipe == -N ]]
+compdef:134> [[ rubber-pipe == -p ]]
+compdef:136> [[ rubber-pipe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rubber-pipe == *=* ]]
+compdef:159> cmd=rubber-pipe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rubber 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rubber-info == -N ]]
+compdef:134> [[ rubber-info == -p ]]
+compdef:136> [[ rubber-info == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rubber-info == *=* ]]
+compdef:159> cmd=rubber-info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rubber 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ruby
+compinit:492> _i_name=_ruby 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ruby == -[pPkK](n|) ]]
+compinit:503> compdef -na _ruby ruby -P '-value-,RUBY(LIB|OPT|PATH),-default-'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ruby == *=* ]]
+compdef:79> func=_ruby 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ruby
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ ruby == -N ]]
+compdef:134> [[ ruby == -p ]]
+compdef:136> [[ ruby == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ruby == *=* ]]
+compdef:159> cmd=ruby 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ruby 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P == -N ]]
+compdef:134> [[ -P == -p ]]
+compdef:136> [[ -P == -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' == -N ]]
+compdef:134> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' == -p ]]
+compdef:136> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_ruby 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_run-help
+compinit:492> _i_name=_run-help 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ run-help == -[pPkK](n|) ]]
+compinit:503> compdef -na _run-help run-help
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _run-help == *=* ]]
+compdef:79> func=_run-help 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _run-help
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ run-help == -N ]]
+compdef:134> [[ run-help == -p ]]
+compdef:136> [[ run-help == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ run-help == *=* ]]
+compdef:159> cmd=run-help 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_run-help 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sablotron
+compinit:492> _i_name=_sablotron 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sabcmd == -[pPkK](n|) ]]
+compinit:503> compdef -na _sablotron sabcmd
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sablotron == *=* ]]
+compdef:79> func=_sablotron 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sablotron
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sabcmd == -N ]]
+compdef:134> [[ sabcmd == -p ]]
+compdef:136> [[ sabcmd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sabcmd == *=* ]]
+compdef:159> cmd=sabcmd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sablotron 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_samba
+compinit:492> _i_name=_samba 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ smbcontrol == -[pPkK](n|) ]]
+compinit:503> compdef -na _samba smbcontrol smbclient nmblookup smbstatus
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _samba == *=* ]]
+compdef:79> func=_samba 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _samba
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ smbcontrol == -N ]]
+compdef:134> [[ smbcontrol == -p ]]
+compdef:136> [[ smbcontrol == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smbcontrol == *=* ]]
+compdef:159> cmd=smbcontrol 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ smbclient == -N ]]
+compdef:134> [[ smbclient == -p ]]
+compdef:136> [[ smbclient == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smbclient == *=* ]]
+compdef:159> cmd=smbclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ nmblookup == -N ]]
+compdef:134> [[ nmblookup == -p ]]
+compdef:136> [[ nmblookup == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nmblookup == *=* ]]
+compdef:159> cmd=nmblookup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ smbstatus == -N ]]
+compdef:134> [[ smbstatus == -p ]]
+compdef:136> [[ smbstatus == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smbstatus == *=* ]]
+compdef:159> cmd=smbstatus 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_savecore
+compinit:492> _i_name=_savecore 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ savecore == -[pPkK](n|) ]]
+compinit:503> compdef -na _savecore savecore
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _savecore == *=* ]]
+compdef:79> func=_savecore 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _savecore
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ savecore == -N ]]
+compdef:134> [[ savecore == -p ]]
+compdef:136> [[ savecore == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ savecore == *=* ]]
+compdef:159> cmd=savecore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_savecore 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sccs
+compinit:492> _i_name=_sccs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sccs == -[pPkK](n|) ]]
+compinit:503> compdef -na _sccs sccs admin cdc comb delta get help prs prt rmdel sact sccsdiff unget val what
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 17  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 16  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sccs == *=* ]]
+compdef:79> func=_sccs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sccs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  15  ))
+compdef:132> [[ sccs == -N ]]
+compdef:134> [[ sccs == -p ]]
+compdef:136> [[ sccs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sccs == *=* ]]
+compdef:159> cmd=sccs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ admin == -N ]]
+compdef:134> [[ admin == -p ]]
+compdef:136> [[ admin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ admin == *=* ]]
+compdef:159> cmd=admin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ cdc == -N ]]
+compdef:134> [[ cdc == -p ]]
+compdef:136> [[ cdc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdc == *=* ]]
+compdef:159> cmd=cdc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ comb == -N ]]
+compdef:134> [[ comb == -p ]]
+compdef:136> [[ comb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ comb == *=* ]]
+compdef:159> cmd=comb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ delta == -N ]]
+compdef:134> [[ delta == -p ]]
+compdef:136> [[ delta == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ delta == *=* ]]
+compdef:159> cmd=delta 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ get == -N ]]
+compdef:134> [[ get == -p ]]
+compdef:136> [[ get == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ get == *=* ]]
+compdef:159> cmd=get 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ help == -N ]]
+compdef:134> [[ help == -p ]]
+compdef:136> [[ help == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ help == *=* ]]
+compdef:159> cmd=help 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ prs == -N ]]
+compdef:134> [[ prs == -p ]]
+compdef:136> [[ prs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prs == *=* ]]
+compdef:159> cmd=prs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ prt == -N ]]
+compdef:134> [[ prt == -p ]]
+compdef:136> [[ prt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prt == *=* ]]
+compdef:159> cmd=prt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rmdel == -N ]]
+compdef:134> [[ rmdel == -p ]]
+compdef:136> [[ rmdel == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmdel == *=* ]]
+compdef:159> cmd=rmdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ sact == -N ]]
+compdef:134> [[ sact == -p ]]
+compdef:136> [[ sact == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sact == *=* ]]
+compdef:159> cmd=sact 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ sccsdiff == -N ]]
+compdef:134> [[ sccsdiff == -p ]]
+compdef:136> [[ sccsdiff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sccsdiff == *=* ]]
+compdef:159> cmd=sccsdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ unget == -N ]]
+compdef:134> [[ unget == -p ]]
+compdef:136> [[ unget == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unget == *=* ]]
+compdef:159> cmd=unget 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ val == -N ]]
+compdef:134> [[ val == -p ]]
+compdef:136> [[ val == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ val == *=* ]]
+compdef:159> cmd=val 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ what == -N ]]
+compdef:134> [[ what == -p ]]
+compdef:136> [[ what == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ what == *=* ]]
+compdef:159> cmd=what 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sched
+compinit:492> _i_name=_sched 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sched == -[pPkK](n|) ]]
+compinit:503> compdef -na _sched sched
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sched == *=* ]]
+compdef:79> func=_sched 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sched
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sched == -N ]]
+compdef:134> [[ sched == -p ]]
+compdef:136> [[ sched == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sched == *=* ]]
+compdef:159> cmd=sched 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sched 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_schedtool
+compinit:492> _i_name=_schedtool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ schedtool == -[pPkK](n|) ]]
+compinit:503> compdef -na _schedtool schedtool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _schedtool == *=* ]]
+compdef:79> func=_schedtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _schedtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ schedtool == -N ]]
+compdef:134> [[ schedtool == -p ]]
+compdef:136> [[ schedtool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ schedtool == *=* ]]
+compdef:159> cmd=schedtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_schedtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_schroot
+compinit:492> _i_name=_schroot 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ schroot == -[pPkK](n|) ]]
+compinit:503> compdef -na _schroot schroot
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _schroot == *=* ]]
+compdef:79> func=_schroot 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _schroot
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ schroot == -N ]]
+compdef:134> [[ schroot == -p ]]
+compdef:136> [[ schroot == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ schroot == *=* ]]
+compdef:159> cmd=schroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_schroot 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_screen
+compinit:492> _i_name=_screen 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ screen == -[pPkK](n|) ]]
+compinit:503> compdef -na _screen screen
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _screen == *=* ]]
+compdef:79> func=_screen 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _screen
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ screen == -N ]]
+compdef:134> [[ screen == -p ]]
+compdef:136> [[ screen == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ screen == *=* ]]
+compdef:159> cmd=screen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_screen 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sed
+compinit:492> _i_name=_sed 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sed == -[pPkK](n|) ]]
+compinit:503> compdef -na _sed sed
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sed == *=* ]]
+compdef:79> func=_sed 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sed
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sed == -N ]]
+compdef:134> [[ sed == -p ]]
+compdef:136> [[ sed == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sed == *=* ]]
+compdef:159> cmd=sed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sep_parts
+compinit:492> _i_name=_sep_parts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _sep_parts
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_service
+compinit:492> _i_name=_service 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ service == -[pPkK](n|) ]]
+compinit:503> compdef -na _service service
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _service == *=* ]]
+compdef:79> func=_service 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _service
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ service == -N ]]
+compdef:134> [[ service == -p ]]
+compdef:136> [[ service == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ service == *=* ]]
+compdef:159> cmd=service 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_service 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_services
+compinit:492> _i_name=_services 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _services
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_set
+compinit:492> _i_name=_set 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ set == -[pPkK](n|) ]]
+compinit:503> compdef -na _set set
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _set == *=* ]]
+compdef:79> func=_set 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _set
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ set == -N ]]
+compdef:134> [[ set == -p ]]
+compdef:136> [[ set == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ set == *=* ]]
+compdef:159> cmd=set 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_set 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_set_command
+compinit:492> _i_name=_set_command 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _set_command
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_setfacl
+compinit:492> _i_name=_setfacl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ setfacl == -[pPkK](n|) ]]
+compinit:503> compdef -na _setfacl setfacl setfacl.exe
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _setfacl == *=* ]]
+compdef:79> func=_setfacl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _setfacl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ setfacl == -N ]]
+compdef:134> [[ setfacl == -p ]]
+compdef:136> [[ setfacl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setfacl == *=* ]]
+compdef:159> cmd=setfacl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ setfacl.exe == -N ]]
+compdef:134> [[ setfacl.exe == -p ]]
+compdef:136> [[ setfacl.exe == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setfacl.exe == *=* ]]
+compdef:159> cmd=setfacl.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_setopt
+compinit:492> _i_name=_setopt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ setopt == -[pPkK](n|) ]]
+compinit:503> compdef -na _setopt setopt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _setopt == *=* ]]
+compdef:79> func=_setopt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _setopt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ setopt == -N ]]
+compdef:134> [[ setopt == -p ]]
+compdef:136> [[ setopt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setopt == *=* ]]
+compdef:159> cmd=setopt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setopt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_setup
+compinit:492> _i_name=_setup 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _setup
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_setxkbmap
+compinit:492> _i_name=_setxkbmap 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#' 
+compinit:497> shift _i_line
+compinit:498> case # (\#compdef)
+compinit:498> case # (\#autoload)
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sh
+compinit:492> _i_name=_sh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sh == -[pPkK](n|) ]]
+compinit:503> compdef -na _sh sh ksh bash zsh csh tcsh rc
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sh == *=* ]]
+compdef:79> func=_sh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ sh == -N ]]
+compdef:134> [[ sh == -p ]]
+compdef:136> [[ sh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sh == *=* ]]
+compdef:159> cmd=sh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ ksh == -N ]]
+compdef:134> [[ ksh == -p ]]
+compdef:136> [[ ksh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ksh == *=* ]]
+compdef:159> cmd=ksh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ bash == -N ]]
+compdef:134> [[ bash == -p ]]
+compdef:136> [[ bash == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bash == *=* ]]
+compdef:159> cmd=bash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ zsh == -N ]]
+compdef:134> [[ zsh == -p ]]
+compdef:136> [[ zsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zsh == *=* ]]
+compdef:159> cmd=zsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ csh == -N ]]
+compdef:134> [[ csh == -p ]]
+compdef:136> [[ csh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ csh == *=* ]]
+compdef:159> cmd=csh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tcsh == -N ]]
+compdef:134> [[ tcsh == -p ]]
+compdef:136> [[ tcsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcsh == *=* ]]
+compdef:159> cmd=tcsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rc == -N ]]
+compdef:134> [[ rc == -p ]]
+compdef:136> [[ rc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rc == *=* ]]
+compdef:159> cmd=rc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_showmount
+compinit:492> _i_name=_showmount 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ showmount == -[pPkK](n|) ]]
+compinit:503> compdef -na _showmount showmount
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _showmount == *=* ]]
+compdef:79> func=_showmount 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _showmount
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ showmount == -N ]]
+compdef:134> [[ showmount == -p ]]
+compdef:136> [[ showmount == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ showmount == *=* ]]
+compdef:159> cmd=showmount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_showmount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_signals
+compinit:492> _i_name=_signals 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _signals
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sisu
+compinit:492> _i_name=_sisu 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sisu == -[pPkK](n|) ]]
+compinit:503> compdef -na _sisu sisu
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sisu == *=* ]]
+compdef:79> func=_sisu 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sisu
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sisu == -N ]]
+compdef:134> [[ sisu == -p ]]
+compdef:136> [[ sisu == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sisu == *=* ]]
+compdef:159> cmd=sisu 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sisu 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_slrn
+compinit:492> _i_name=_slrn 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ slrn == -[pPkK](n|) ]]
+compinit:503> compdef -na _slrn slrn
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _slrn == *=* ]]
+compdef:79> func=_slrn 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _slrn
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ slrn == -N ]]
+compdef:134> [[ slrn == -p ]]
+compdef:136> [[ slrn == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ slrn == *=* ]]
+compdef:159> cmd=slrn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_slrn 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_smit
+compinit:492> _i_name=_smit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ smit == -[pPkK](n|) ]]
+compinit:503> compdef -na _smit smit smitty
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _smit == *=* ]]
+compdef:79> func=_smit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _smit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ smit == -N ]]
+compdef:134> [[ smit == -p ]]
+compdef:136> [[ smit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smit == *=* ]]
+compdef:159> cmd=smit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_smit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ smitty == -N ]]
+compdef:134> [[ smitty == -p ]]
+compdef:136> [[ smitty == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smitty == *=* ]]
+compdef:159> cmd=smitty 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_smit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_snoop
+compinit:492> _i_name=_snoop 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ snoop == -[pPkK](n|) ]]
+compinit:503> compdef -na _snoop snoop
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _snoop == *=* ]]
+compdef:79> func=_snoop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _snoop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ snoop == -N ]]
+compdef:134> [[ snoop == -p ]]
+compdef:136> [[ snoop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ snoop == *=* ]]
+compdef:159> cmd=snoop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_snoop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_socket
+compinit:492> _i_name=_socket 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ socket == -[pPkK](n|) ]]
+compinit:503> compdef -na _socket socket
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _socket == *=* ]]
+compdef:79> func=_socket 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _socket
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ socket == -N ]]
+compdef:134> [[ socket == -p ]]
+compdef:136> [[ socket == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ socket == *=* ]]
+compdef:159> cmd=socket 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_socket 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sockstat
+compinit:492> _i_name=_sockstat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sockstat == -[pPkK](n|) ]]
+compinit:503> compdef -na _sockstat sockstat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sockstat == *=* ]]
+compdef:79> func=_sockstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sockstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sockstat == -N ]]
+compdef:134> [[ sockstat == -p ]]
+compdef:136> [[ sockstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sockstat == *=* ]]
+compdef:159> cmd=sockstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sockstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_softwareupdate
+compinit:492> _i_name=_softwareupdate 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ softwareupdate == -[pPkK](n|) ]]
+compinit:503> compdef -na _softwareupdate softwareupdate
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _softwareupdate == *=* ]]
+compdef:79> func=_softwareupdate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _softwareupdate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ softwareupdate == -N ]]
+compdef:134> [[ softwareupdate == -p ]]
+compdef:136> [[ softwareupdate == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ softwareupdate == *=* ]]
+compdef:159> cmd=softwareupdate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_softwareupdate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sort
+compinit:492> _i_name=_sort 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sort == -[pPkK](n|) ]]
+compinit:503> compdef -na _sort sort
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sort == *=* ]]
+compdef:79> func=_sort 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sort
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sort == -N ]]
+compdef:134> [[ sort == -p ]]
+compdef:136> [[ sort == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sort == *=* ]]
+compdef:159> cmd=sort 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sort 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_source
+compinit:492> _i_name=_source 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ source == -[pPkK](n|) ]]
+compinit:503> compdef -na _source source .
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _source == *=* ]]
+compdef:79> func=_source 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _source
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ source == -N ]]
+compdef:134> [[ source == -p ]]
+compdef:136> [[ source == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ source == *=* ]]
+compdef:159> cmd=source 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ . == -N ]]
+compdef:134> [[ . == -p ]]
+compdef:136> [[ . == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ . == *=* ]]
+compdef:159> cmd=. 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_spamassassin
+compinit:492> _i_name=_spamassassin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ spamassassin == -[pPkK](n|) ]]
+compinit:503> compdef -na _spamassassin spamassassin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _spamassassin == *=* ]]
+compdef:79> func=_spamassassin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _spamassassin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ spamassassin == -N ]]
+compdef:134> [[ spamassassin == -p ]]
+compdef:136> [[ spamassassin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ spamassassin == *=* ]]
+compdef:159> cmd=spamassassin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_spamassassin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sqlite
+compinit:492> _i_name=_sqlite 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sqlite == -[pPkK](n|) ]]
+compinit:503> compdef -na _sqlite sqlite sqlite3
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sqlite == *=* ]]
+compdef:79> func=_sqlite 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sqlite
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ sqlite == -N ]]
+compdef:134> [[ sqlite == -p ]]
+compdef:136> [[ sqlite == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sqlite == *=* ]]
+compdef:159> cmd=sqlite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sqlite 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sqlite3 == -N ]]
+compdef:134> [[ sqlite3 == -p ]]
+compdef:136> [[ sqlite3 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sqlite3 == *=* ]]
+compdef:159> cmd=sqlite3 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sqlite 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sqsh
+compinit:492> _i_name=_sqsh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sqsh == -[pPkK](n|) ]]
+compinit:503> compdef -na _sqsh sqsh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sqsh == *=* ]]
+compdef:79> func=_sqsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sqsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sqsh == -N ]]
+compdef:134> [[ sqsh == -p ]]
+compdef:136> [[ sqsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sqsh == *=* ]]
+compdef:159> cmd=sqsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sqsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ssh
+compinit:492> _i_name=_ssh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ssh == -[pPkK](n|) ]]
+compinit:503> compdef -na _ssh ssh 'slogin=ssh' scp ssh-add ssh-agent ssh-keygen sftp ssh-copy-id
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ssh == *=* ]]
+compdef:79> func=_ssh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ssh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ ssh == -N ]]
+compdef:134> [[ ssh == -p ]]
+compdef:136> [[ ssh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh == *=* ]]
+compdef:159> cmd=ssh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ 'slogin=ssh' == -N ]]
+compdef:134> [[ 'slogin=ssh' == -p ]]
+compdef:136> [[ 'slogin=ssh' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'slogin=ssh' == *=* ]]
+compdef:156> cmd=slogin 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=ssh 
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ scp == -N ]]
+compdef:134> [[ scp == -p ]]
+compdef:136> [[ scp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ scp == *=* ]]
+compdef:159> cmd=scp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ssh-add == -N ]]
+compdef:134> [[ ssh-add == -p ]]
+compdef:136> [[ ssh-add == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-add == *=* ]]
+compdef:159> cmd=ssh-add 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ ssh-agent == -N ]]
+compdef:134> [[ ssh-agent == -p ]]
+compdef:136> [[ ssh-agent == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-agent == *=* ]]
+compdef:159> cmd=ssh-agent 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ssh-keygen == -N ]]
+compdef:134> [[ ssh-keygen == -p ]]
+compdef:136> [[ ssh-keygen == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-keygen == *=* ]]
+compdef:159> cmd=ssh-keygen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ sftp == -N ]]
+compdef:134> [[ sftp == -p ]]
+compdef:136> [[ sftp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sftp == *=* ]]
+compdef:159> cmd=sftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ssh-copy-id == -N ]]
+compdef:134> [[ ssh-copy-id == -p ]]
+compdef:136> [[ ssh-copy-id == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-copy-id == *=* ]]
+compdef:159> cmd=ssh-copy-id 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sshfs
+compinit:492> _i_name=_sshfs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sshfs == -[pPkK](n|) ]]
+compinit:503> compdef -na _sshfs sshfs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sshfs == *=* ]]
+compdef:79> func=_sshfs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sshfs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sshfs == -N ]]
+compdef:134> [[ sshfs == -p ]]
+compdef:136> [[ sshfs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sshfs == *=* ]]
+compdef:159> cmd=sshfs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sshfs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_stat
+compinit:492> _i_name=_stat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ stat == -[pPkK](n|) ]]
+compinit:503> compdef -na _stat stat zstat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _stat == *=* ]]
+compdef:79> func=_stat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _stat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ stat == -N ]]
+compdef:134> [[ stat == -p ]]
+compdef:136> [[ stat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stat == *=* ]]
+compdef:159> cmd=stat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zstat == -N ]]
+compdef:134> [[ zstat == -p ]]
+compdef:136> [[ zstat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zstat == *=* ]]
+compdef:159> cmd=zstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_stgit
+compinit:492> _i_name=_stgit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ stg == -[pPkK](n|) ]]
+compinit:503> compdef -na _stgit stg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _stgit == *=* ]]
+compdef:79> func=_stgit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _stgit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ stg == -N ]]
+compdef:134> [[ stg == -p ]]
+compdef:136> [[ stg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stg == *=* ]]
+compdef:159> cmd=stg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stgit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_store_cache
+compinit:492> _i_name=_store_cache 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _store_cache
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_strace
+compinit:492> _i_name=_strace 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ strace == -[pPkK](n|) ]]
+compinit:503> compdef -na _strace strace
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _strace == *=* ]]
+compdef:79> func=_strace 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _strace
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ strace == -N ]]
+compdef:134> [[ strace == -p ]]
+compdef:136> [[ strace == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ strace == *=* ]]
+compdef:159> cmd=strace 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_strace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_strip
+compinit:492> _i_name=_strip 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ strip == -[pPkK](n|) ]]
+compinit:503> compdef -na _strip strip
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _strip == *=* ]]
+compdef:79> func=_strip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _strip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ strip == -N ]]
+compdef:134> [[ strip == -p ]]
+compdef:136> [[ strip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ strip == *=* ]]
+compdef:159> cmd=strip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_strip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_stty
+compinit:492> _i_name=_stty 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ stty == -[pPkK](n|) ]]
+compinit:503> compdef -na _stty stty
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _stty == *=* ]]
+compdef:79> func=_stty 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _stty
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ stty == -N ]]
+compdef:134> [[ stty == -p ]]
+compdef:136> [[ stty == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stty == *=* ]]
+compdef:159> cmd=stty 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stty 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_su
+compinit:492> _i_name=_su 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ su == -[pPkK](n|) ]]
+compinit:503> compdef -na _su su
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _su == *=* ]]
+compdef:79> func=_su 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _su
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ su == -N ]]
+compdef:134> [[ su == -p ]]
+compdef:136> [[ su == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ su == *=* ]]
+compdef:159> cmd=su 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_su 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sub_commands
+compinit:492> _i_name=_sub_commands 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _sub_commands
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_subscript
+compinit:492> _i_name=_subscript 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -subscript- == -[pPkK](n|) ]]
+compinit:503> compdef -na _subscript -subscript-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _subscript == *=* ]]
+compdef:79> func=_subscript 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _subscript
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -subscript- == -N ]]
+compdef:134> [[ -subscript- == -p ]]
+compdef:136> [[ -subscript- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -subscript- == *=* ]]
+compdef:159> cmd=-subscript- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_subversion
+compinit:492> _i_name=_subversion 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ svn == -[pPkK](n|) ]]
+compinit:503> compdef -na _subversion svn svnadmin 'svnadmin-static=svnadmin'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _subversion == *=* ]]
+compdef:79> func=_subversion 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _subversion
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ svn == -N ]]
+compdef:134> [[ svn == -p ]]
+compdef:136> [[ svn == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svn == *=* ]]
+compdef:159> cmd=svn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subversion 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ svnadmin == -N ]]
+compdef:134> [[ svnadmin == -p ]]
+compdef:136> [[ svnadmin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svnadmin == *=* ]]
+compdef:159> cmd=svnadmin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subversion 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'svnadmin-static=svnadmin' == -N ]]
+compdef:134> [[ 'svnadmin-static=svnadmin' == -p ]]
+compdef:136> [[ 'svnadmin-static=svnadmin' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'svnadmin-static=svnadmin' == *=* ]]
+compdef:156> cmd=svnadmin-static 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subversion 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=svnadmin 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sudo
+compinit:492> _i_name=_sudo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sudo == -[pPkK](n|) ]]
+compinit:503> compdef -na _sudo sudo sudoedit
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sudo == *=* ]]
+compdef:79> func=_sudo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sudo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ sudo == -N ]]
+compdef:134> [[ sudo == -p ]]
+compdef:136> [[ sudo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sudo == *=* ]]
+compdef:159> cmd=sudo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sudo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sudoedit == -N ]]
+compdef:134> [[ sudoedit == -p ]]
+compdef:136> [[ sudoedit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sudoedit == *=* ]]
+compdef:159> cmd=sudoedit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sudo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_suffix_alias_files
+compinit:492> _i_name=_suffix_alias_files 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _suffix_alias_files
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_surfraw
+compinit:492> _i_name=_surfraw 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ surfraw == -[pPkK](n|) ]]
+compinit:503> compdef -na _surfraw surfraw sr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _surfraw == *=* ]]
+compdef:79> func=_surfraw 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _surfraw
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ surfraw == -N ]]
+compdef:134> [[ surfraw == -p ]]
+compdef:136> [[ surfraw == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ surfraw == *=* ]]
+compdef:159> cmd=surfraw 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_surfraw 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sr == -N ]]
+compdef:134> [[ sr == -p ]]
+compdef:136> [[ sr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sr == *=* ]]
+compdef:159> cmd=sr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_surfraw 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_svcadm
+compinit:492> _i_name=_svcadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ svcadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _svcadm svcadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svcadm == *=* ]]
+compdef:79> func=_svcadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svcadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svcadm == -N ]]
+compdef:134> [[ svcadm == -p ]]
+compdef:136> [[ svcadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svcadm == *=* ]]
+compdef:159> cmd=svcadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svcadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_svccfg
+compinit:492> _i_name=_svccfg 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ svccfg == -[pPkK](n|) ]]
+compinit:503> compdef -na _svccfg svccfg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svccfg == *=* ]]
+compdef:79> func=_svccfg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svccfg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svccfg == -N ]]
+compdef:134> [[ svccfg == -p ]]
+compdef:136> [[ svccfg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svccfg == *=* ]]
+compdef:159> cmd=svccfg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svccfg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_svcprop
+compinit:492> _i_name=_svcprop 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ svcprop == -[pPkK](n|) ]]
+compinit:503> compdef -na _svcprop svcprop
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svcprop == *=* ]]
+compdef:79> func=_svcprop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svcprop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svcprop == -N ]]
+compdef:134> [[ svcprop == -p ]]
+compdef:136> [[ svcprop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svcprop == *=* ]]
+compdef:159> cmd=svcprop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svcprop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_svcs
+compinit:492> _i_name=_svcs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ svcs == -[pPkK](n|) ]]
+compinit:503> compdef -na _svcs svcs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svcs == *=* ]]
+compdef:79> func=_svcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svcs == -N ]]
+compdef:134> [[ svcs == -p ]]
+compdef:136> [[ svcs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svcs == *=* ]]
+compdef:159> cmd=svcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_svcs_fmri
+compinit:492> _i_name=_svcs_fmri 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _svcs_fmri
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_svn-buildpackage
+compinit:492> _i_name=_svn-buildpackage 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ svn-buildpackage == -[pPkK](n|) ]]
+compinit:503> compdef -na _svn-buildpackage svn-buildpackage
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svn-buildpackage == *=* ]]
+compdef:79> func=_svn-buildpackage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svn-buildpackage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svn-buildpackage == -N ]]
+compdef:134> [[ svn-buildpackage == -p ]]
+compdef:136> [[ svn-buildpackage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svn-buildpackage == *=* ]]
+compdef:159> cmd=svn-buildpackage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svn-buildpackage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_sysctl
+compinit:492> _i_name=_sysctl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ sysctl == -[pPkK](n|) ]]
+compinit:503> compdef -na _sysctl sysctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sysctl == *=* ]]
+compdef:79> func=_sysctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sysctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sysctl == -N ]]
+compdef:134> [[ sysctl == -p ]]
+compdef:136> [[ sysctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sysctl == *=* ]]
+compdef:159> cmd=sysctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_systemd
+compinit:492> _i_name=_systemd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ systemctl == -[pPkK](n|) ]]
+compinit:503> compdef -na _systemd systemctl systemd-loginctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd == *=* ]]
+compdef:79> func=_systemd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ systemctl == -N ]]
+compdef:134> [[ systemctl == -p ]]
+compdef:136> [[ systemctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemctl == *=* ]]
+compdef:159> cmd=systemctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-loginctl == -N ]]
+compdef:134> [[ systemd-loginctl == -p ]]
+compdef:136> [[ systemd-loginctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-loginctl == *=* ]]
+compdef:159> cmd=systemd-loginctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tags
+compinit:492> _i_name=_tags 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _tags
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tar
+compinit:492> _i_name=_tar 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tar == -[pPkK](n|) ]]
+compinit:503> compdef -na _tar tar gtar star
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tar == *=* ]]
+compdef:79> func=_tar 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tar
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ tar == -N ]]
+compdef:134> [[ tar == -p ]]
+compdef:136> [[ tar == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tar == *=* ]]
+compdef:159> cmd=tar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gtar == -N ]]
+compdef:134> [[ gtar == -p ]]
+compdef:136> [[ gtar == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gtar == *=* ]]
+compdef:159> cmd=gtar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ star == -N ]]
+compdef:134> [[ star == -p ]]
+compdef:136> [[ star == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ star == *=* ]]
+compdef:159> cmd=star 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tar_archive
+compinit:492> _i_name=_tar_archive 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _tar_archive
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tardy
+compinit:492> _i_name=_tardy 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tardy == -[pPkK](n|) ]]
+compinit:503> compdef -na _tardy tardy
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tardy == *=* ]]
+compdef:79> func=_tardy 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tardy
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tardy == -N ]]
+compdef:134> [[ tardy == -p ]]
+compdef:136> [[ tardy == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tardy == *=* ]]
+compdef:159> cmd=tardy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tardy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tcpdump
+compinit:492> _i_name=_tcpdump 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tcpdump == -[pPkK](n|) ]]
+compinit:503> compdef -na _tcpdump tcpdump
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tcpdump == *=* ]]
+compdef:79> func=_tcpdump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tcpdump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tcpdump == -N ]]
+compdef:134> [[ tcpdump == -p ]]
+compdef:136> [[ tcpdump == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcpdump == *=* ]]
+compdef:159> cmd=tcpdump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tcpdump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tcpsys
+compinit:492> _i_name=_tcpsys 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tcp_open == -[pPkK](n|) ]]
+compinit:503> compdef -na _tcpsys tcp_open
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tcpsys == *=* ]]
+compdef:79> func=_tcpsys 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tcpsys
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tcp_open == -N ]]
+compdef:134> [[ tcp_open == -p ]]
+compdef:136> [[ tcp_open == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcp_open == *=* ]]
+compdef:159> cmd=tcp_open 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tcpsys 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tcptraceroute
+compinit:492> _i_name=_tcptraceroute 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tcptraceroute == -[pPkK](n|) ]]
+compinit:503> compdef -na _tcptraceroute tcptraceroute
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tcptraceroute == *=* ]]
+compdef:79> func=_tcptraceroute 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tcptraceroute
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tcptraceroute == -N ]]
+compdef:134> [[ tcptraceroute == -p ]]
+compdef:136> [[ tcptraceroute == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcptraceroute == *=* ]]
+compdef:159> cmd=tcptraceroute 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tcptraceroute 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_telnet
+compinit:492> _i_name=_telnet 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ telnet == -[pPkK](n|) ]]
+compinit:503> compdef -na _telnet telnet
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _telnet == *=* ]]
+compdef:79> func=_telnet 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _telnet
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ telnet == -N ]]
+compdef:134> [[ telnet == -p ]]
+compdef:136> [[ telnet == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ telnet == *=* ]]
+compdef:159> cmd=telnet 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_telnet 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_terminals
+compinit:492> _i_name=_terminals 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ infocmp == -[pPkK](n|) ]]
+compinit:503> compdef -na _terminals infocmp -value-,TERM,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _terminals == *=* ]]
+compdef:79> func=_terminals 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _terminals
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ infocmp == -N ]]
+compdef:134> [[ infocmp == -p ]]
+compdef:136> [[ infocmp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ infocmp == *=* ]]
+compdef:159> cmd=infocmp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_terminals 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,TERM,-default- == -N ]]
+compdef:134> [[ -value-,TERM,-default- == -p ]]
+compdef:136> [[ -value-,TERM,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,TERM,-default- == *=* ]]
+compdef:159> cmd=-value-,TERM,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_terminals 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tex
+compinit:492> _i_name=_tex 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tex == -[pPkK](n|) ]]
+compinit:503> compdef -na _tex tex latex slitex pdftex pdflatex jadetex pdfjadetex 'xetex=tex' 'xelatex=latex' latexmk
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 12  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 11  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tex == *=* ]]
+compdef:79> func=_tex 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tex
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  10  ))
+compdef:132> [[ tex == -N ]]
+compdef:134> [[ tex == -p ]]
+compdef:136> [[ tex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tex == *=* ]]
+compdef:159> cmd=tex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ latex == -N ]]
+compdef:134> [[ latex == -p ]]
+compdef:136> [[ latex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ latex == *=* ]]
+compdef:159> cmd=latex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ slitex == -N ]]
+compdef:134> [[ slitex == -p ]]
+compdef:136> [[ slitex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ slitex == *=* ]]
+compdef:159> cmd=slitex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pdftex == -N ]]
+compdef:134> [[ pdftex == -p ]]
+compdef:136> [[ pdftex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftex == *=* ]]
+compdef:159> cmd=pdftex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pdflatex == -N ]]
+compdef:134> [[ pdflatex == -p ]]
+compdef:136> [[ pdflatex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdflatex == *=* ]]
+compdef:159> cmd=pdflatex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ jadetex == -N ]]
+compdef:134> [[ jadetex == -p ]]
+compdef:136> [[ jadetex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jadetex == *=* ]]
+compdef:159> cmd=jadetex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pdfjadetex == -N ]]
+compdef:134> [[ pdfjadetex == -p ]]
+compdef:136> [[ pdfjadetex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfjadetex == *=* ]]
+compdef:159> cmd=pdfjadetex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ 'xetex=tex' == -N ]]
+compdef:134> [[ 'xetex=tex' == -p ]]
+compdef:136> [[ 'xetex=tex' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'xetex=tex' == *=* ]]
+compdef:156> cmd=xetex 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=tex 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 'xelatex=latex' == -N ]]
+compdef:134> [[ 'xelatex=latex' == -p ]]
+compdef:136> [[ 'xelatex=latex' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'xelatex=latex' == *=* ]]
+compdef:156> cmd=xelatex 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=latex 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ latexmk == -N ]]
+compdef:134> [[ latexmk == -p ]]
+compdef:136> [[ latexmk == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ latexmk == *=* ]]
+compdef:159> cmd=latexmk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_texi
+compinit:492> _i_name=_texi 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -P == -[pPkK](n|) ]]
+compinit:501> compdef -Pna _texi '(texi(2*|ndex))'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P == p ]]
+compdef:26> [[ P == P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _texi == *=* ]]
+compdef:79> func=_texi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _texi
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '(texi(2*|ndex))' == -N ]]
+compdef:134> [[ '(texi(2*|ndex))' == -p ]]
+compdef:136> [[ '(texi(2*|ndex))' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '(texi(2*|ndex))' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_texi 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_texinfo
+compinit:492> _i_name=_texinfo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ info == -[pPkK](n|) ]]
+compinit:503> compdef -na _texinfo info tkinfo install-info makeinfo texi2dvi texindex
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _texinfo == *=* ]]
+compdef:79> func=_texinfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _texinfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ info == -N ]]
+compdef:134> [[ info == -p ]]
+compdef:136> [[ info == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ info == *=* ]]
+compdef:159> cmd=info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ tkinfo == -N ]]
+compdef:134> [[ tkinfo == -p ]]
+compdef:136> [[ tkinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tkinfo == *=* ]]
+compdef:159> cmd=tkinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ install-info == -N ]]
+compdef:134> [[ install-info == -p ]]
+compdef:136> [[ install-info == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ install-info == *=* ]]
+compdef:159> cmd=install-info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ makeinfo == -N ]]
+compdef:134> [[ makeinfo == -p ]]
+compdef:136> [[ makeinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ makeinfo == *=* ]]
+compdef:159> cmd=makeinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ texi2dvi == -N ]]
+compdef:134> [[ texi2dvi == -p ]]
+compdef:136> [[ texi2dvi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ texi2dvi == *=* ]]
+compdef:159> cmd=texi2dvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ texindex == -N ]]
+compdef:134> [[ texindex == -p ]]
+compdef:136> [[ texindex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ texindex == *=* ]]
+compdef:159> cmd=texindex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tidy
+compinit:492> _i_name=_tidy 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tidy == -[pPkK](n|) ]]
+compinit:503> compdef -na _tidy tidy
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tidy == *=* ]]
+compdef:79> func=_tidy 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tidy
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tidy == -N ]]
+compdef:134> [[ tidy == -p ]]
+compdef:136> [[ tidy == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tidy == *=* ]]
+compdef:159> cmd=tidy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tidy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tiff
+compinit:492> _i_name=_tiff 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -P == -[pPkK](n|) ]]
+compinit:501> compdef -Pna _tiff '(tiff*|*2tiff|pal2rgb)'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P == p ]]
+compdef:26> [[ P == P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tiff == *=* ]]
+compdef:79> func=_tiff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tiff
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '(tiff*|*2tiff|pal2rgb)' == -N ]]
+compdef:134> [[ '(tiff*|*2tiff|pal2rgb)' == -p ]]
+compdef:136> [[ '(tiff*|*2tiff|pal2rgb)' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '(tiff*|*2tiff|pal2rgb)' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_tiff 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tilde
+compinit:492> _i_name=_tilde 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -tilde- == -[pPkK](n|) ]]
+compinit:503> compdef -na _tilde -tilde-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tilde == *=* ]]
+compdef:79> func=_tilde 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tilde
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -tilde- == -N ]]
+compdef:134> [[ -tilde- == -p ]]
+compdef:136> [[ -tilde- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -tilde- == *=* ]]
+compdef:159> cmd=-tilde- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tilde 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tilde_files
+compinit:492> _i_name=_tilde_files 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _tilde_files
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_time_zone
+compinit:492> _i_name=_time_zone 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -value-,TZ,-default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _time_zone -value-,TZ,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _time_zone == *=* ]]
+compdef:79> func=_time_zone 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _time_zone
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,TZ,-default- == -N ]]
+compdef:134> [[ -value-,TZ,-default- == -p ]]
+compdef:136> [[ -value-,TZ,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,TZ,-default- == *=* ]]
+compdef:159> cmd=-value-,TZ,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_time_zone 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tin
+compinit:492> _i_name=_tin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tin == -[pPkK](n|) ]]
+compinit:503> compdef -na _tin tin rtin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tin == *=* ]]
+compdef:79> func=_tin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ tin == -N ]]
+compdef:134> [[ tin == -p ]]
+compdef:136> [[ tin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tin == *=* ]]
+compdef:159> cmd=tin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rtin == -N ]]
+compdef:134> [[ rtin == -p ]]
+compdef:136> [[ rtin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rtin == *=* ]]
+compdef:159> cmd=rtin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tla
+compinit:492> _i_name=_tla 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tla == -[pPkK](n|) ]]
+compinit:503> compdef -na _tla tla
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tla == *=* ]]
+compdef:79> func=_tla 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tla
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tla == -N ]]
+compdef:134> [[ tla == -p ]]
+compdef:136> [[ tla == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tla == *=* ]]
+compdef:159> cmd=tla 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tmux
+compinit:492> _i_name=_tmux 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tmux == -[pPkK](n|) ]]
+compinit:503> compdef -na _tmux tmux
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tmux == *=* ]]
+compdef:79> func=_tmux 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tmux
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tmux == -N ]]
+compdef:134> [[ tmux == -p ]]
+compdef:136> [[ tmux == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tmux == *=* ]]
+compdef:159> cmd=tmux 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tmux 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_todo.sh
+compinit:492> _i_name=_todo.sh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ todo.sh == -[pPkK](n|) ]]
+compinit:503> compdef -na _todo.sh todo.sh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _todo.sh == *=* ]]
+compdef:79> func=_todo.sh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _todo.sh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ todo.sh == -N ]]
+compdef:134> [[ todo.sh == -p ]]
+compdef:136> [[ todo.sh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ todo.sh == *=* ]]
+compdef:159> cmd=todo.sh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_todo.sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_toilet
+compinit:492> _i_name=_toilet 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ toilet == -[pPkK](n|) ]]
+compinit:503> compdef -na _toilet toilet
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _toilet == *=* ]]
+compdef:79> func=_toilet 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _toilet
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ toilet == -N ]]
+compdef:134> [[ toilet == -p ]]
+compdef:136> [[ toilet == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ toilet == *=* ]]
+compdef:159> cmd=toilet 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toilet 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_toolchain-source
+compinit:492> _i_name=_toolchain-source 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tpkg-install == -[pPkK](n|) ]]
+compinit:503> compdef -na _toolchain-source tpkg-install tpkg-make tpkg-debarch tpkg-update tpkg-install-libc
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _toolchain-source == *=* ]]
+compdef:79> func=_toolchain-source 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _toolchain-source
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ tpkg-install == -N ]]
+compdef:134> [[ tpkg-install == -p ]]
+compdef:136> [[ tpkg-install == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-install == *=* ]]
+compdef:159> cmd=tpkg-install 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ tpkg-make == -N ]]
+compdef:134> [[ tpkg-make == -p ]]
+compdef:136> [[ tpkg-make == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-make == *=* ]]
+compdef:159> cmd=tpkg-make 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tpkg-debarch == -N ]]
+compdef:134> [[ tpkg-debarch == -p ]]
+compdef:136> [[ tpkg-debarch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-debarch == *=* ]]
+compdef:159> cmd=tpkg-debarch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tpkg-update == -N ]]
+compdef:134> [[ tpkg-update == -p ]]
+compdef:136> [[ tpkg-update == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-update == *=* ]]
+compdef:159> cmd=tpkg-update 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tpkg-install-libc == -N ]]
+compdef:134> [[ tpkg-install-libc == -p ]]
+compdef:136> [[ tpkg-install-libc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-install-libc == *=* ]]
+compdef:159> cmd=tpkg-install-libc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_topgit
+compinit:492> _i_name=_topgit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tg == -[pPkK](n|) ]]
+compinit:503> compdef -na _topgit tg
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _topgit == *=* ]]
+compdef:79> func=_topgit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _topgit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tg == -N ]]
+compdef:134> [[ tg == -p ]]
+compdef:136> [[ tg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tg == *=* ]]
+compdef:159> cmd=tg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_topgit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_totd
+compinit:492> _i_name=_totd 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ totdconfig == -[pPkK](n|) ]]
+compinit:503> compdef -na _totd totdconfig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _totd == *=* ]]
+compdef:79> func=_totd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _totd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ totdconfig == -N ]]
+compdef:134> [[ totdconfig == -p ]]
+compdef:136> [[ totdconfig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ totdconfig == *=* ]]
+compdef:159> cmd=totdconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_totd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tpb
+compinit:492> _i_name=_tpb 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tpb == -[pPkK](n|) ]]
+compinit:503> compdef -na _tpb tpb
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tpb == *=* ]]
+compdef:79> func=_tpb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tpb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tpb == -N ]]
+compdef:134> [[ tpb == -p ]]
+compdef:136> [[ tpb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpb == *=* ]]
+compdef:159> cmd=tpb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tpb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tpconfig
+compinit:492> _i_name=_tpconfig 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tpconfig == -[pPkK](n|) ]]
+compinit:503> compdef -na _tpconfig tpconfig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tpconfig == *=* ]]
+compdef:79> func=_tpconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tpconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tpconfig == -N ]]
+compdef:134> [[ tpconfig == -p ]]
+compdef:136> [[ tpconfig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpconfig == *=* ]]
+compdef:159> cmd=tpconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tpconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tracepath
+compinit:492> _i_name=_tracepath 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tracepath == -[pPkK](n|) ]]
+compinit:503> compdef -na _tracepath tracepath tracepath6
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tracepath == *=* ]]
+compdef:79> func=_tracepath 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tracepath
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ tracepath == -N ]]
+compdef:134> [[ tracepath == -p ]]
+compdef:136> [[ tracepath == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tracepath == *=* ]]
+compdef:159> cmd=tracepath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tracepath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tracepath6 == -N ]]
+compdef:134> [[ tracepath6 == -p ]]
+compdef:136> [[ tracepath6 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tracepath6 == *=* ]]
+compdef:159> cmd=tracepath6 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tracepath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_trap
+compinit:492> _i_name=_trap 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ trap == -[pPkK](n|) ]]
+compinit:503> compdef -na _trap trap
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _trap == *=* ]]
+compdef:79> func=_trap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _trap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ trap == -N ]]
+compdef:134> [[ trap == -p ]]
+compdef:136> [[ trap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ trap == *=* ]]
+compdef:159> cmd=trap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_trap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tree
+compinit:492> _i_name=_tree 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tree == -[pPkK](n|) ]]
+compinit:503> compdef -na _tree tree
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tree == *=* ]]
+compdef:79> func=_tree 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tree
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tree == -N ]]
+compdef:134> [[ tree == -p ]]
+compdef:136> [[ tree == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tree == *=* ]]
+compdef:159> cmd=tree 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tree 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ttyctl
+compinit:492> _i_name=_ttyctl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ttyctl == -[pPkK](n|) ]]
+compinit:503> compdef -na _ttyctl ttyctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ttyctl == *=* ]]
+compdef:79> func=_ttyctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ttyctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ttyctl == -N ]]
+compdef:134> [[ ttyctl == -p ]]
+compdef:136> [[ ttyctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ttyctl == *=* ]]
+compdef:159> cmd=ttyctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ttyctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_tune2fs
+compinit:492> _i_name=_tune2fs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ tune2fs == -[pPkK](n|) ]]
+compinit:503> compdef -na _tune2fs tune2fs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tune2fs == *=* ]]
+compdef:79> func=_tune2fs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tune2fs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tune2fs == -N ]]
+compdef:134> [[ tune2fs == -p ]]
+compdef:136> [[ tune2fs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tune2fs == *=* ]]
+compdef:159> cmd=tune2fs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tune2fs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_twidge
+compinit:492> _i_name=_twidge 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ twidge == -[pPkK](n|) ]]
+compinit:503> compdef -na _twidge twidge
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _twidge == *=* ]]
+compdef:79> func=_twidge 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _twidge
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ twidge == -N ]]
+compdef:134> [[ twidge == -p ]]
+compdef:136> [[ twidge == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ twidge == *=* ]]
+compdef:159> cmd=twidge 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twidge 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_twisted
+compinit:492> _i_name=_twisted 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ twistd == -[pPkK](n|) ]]
+compinit:503> compdef -na _twisted twistd trial conch cftp tapconvert ckeygen lore pyhtmlizer tap2deb tkconch manhole tap2rpm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _twisted == *=* ]]
+compdef:79> func=_twisted 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _twisted
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ twistd == -N ]]
+compdef:134> [[ twistd == -p ]]
+compdef:136> [[ twistd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ twistd == *=* ]]
+compdef:159> cmd=twistd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ trial == -N ]]
+compdef:134> [[ trial == -p ]]
+compdef:136> [[ trial == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ trial == *=* ]]
+compdef:159> cmd=trial 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ conch == -N ]]
+compdef:134> [[ conch == -p ]]
+compdef:136> [[ conch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ conch == *=* ]]
+compdef:159> cmd=conch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ cftp == -N ]]
+compdef:134> [[ cftp == -p ]]
+compdef:136> [[ cftp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cftp == *=* ]]
+compdef:159> cmd=cftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ tapconvert == -N ]]
+compdef:134> [[ tapconvert == -p ]]
+compdef:136> [[ tapconvert == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tapconvert == *=* ]]
+compdef:159> cmd=tapconvert 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ ckeygen == -N ]]
+compdef:134> [[ ckeygen == -p ]]
+compdef:136> [[ ckeygen == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ckeygen == *=* ]]
+compdef:159> cmd=ckeygen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ lore == -N ]]
+compdef:134> [[ lore == -p ]]
+compdef:136> [[ lore == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lore == *=* ]]
+compdef:159> cmd=lore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pyhtmlizer == -N ]]
+compdef:134> [[ pyhtmlizer == -p ]]
+compdef:136> [[ pyhtmlizer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pyhtmlizer == *=* ]]
+compdef:159> cmd=pyhtmlizer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ tap2deb == -N ]]
+compdef:134> [[ tap2deb == -p ]]
+compdef:136> [[ tap2deb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tap2deb == *=* ]]
+compdef:159> cmd=tap2deb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tkconch == -N ]]
+compdef:134> [[ tkconch == -p ]]
+compdef:136> [[ tkconch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tkconch == *=* ]]
+compdef:159> cmd=tkconch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ manhole == -N ]]
+compdef:134> [[ manhole == -p ]]
+compdef:136> [[ manhole == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ manhole == *=* ]]
+compdef:159> cmd=manhole 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tap2rpm == -N ]]
+compdef:134> [[ tap2rpm == -p ]]
+compdef:136> [[ tap2rpm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tap2rpm == *=* ]]
+compdef:159> cmd=tap2rpm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_typeset
+compinit:492> _i_name=_typeset 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ autoload == -[pPkK](n|) ]]
+compinit:503> compdef -na _typeset autoload declare export functions integer float local readonly typeset
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _typeset == *=* ]]
+compdef:79> func=_typeset 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _typeset
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ autoload == -N ]]
+compdef:134> [[ autoload == -p ]]
+compdef:136> [[ autoload == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ autoload == *=* ]]
+compdef:159> cmd=autoload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ declare == -N ]]
+compdef:134> [[ declare == -p ]]
+compdef:136> [[ declare == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ declare == *=* ]]
+compdef:159> cmd=declare 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ export == -N ]]
+compdef:134> [[ export == -p ]]
+compdef:136> [[ export == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ export == *=* ]]
+compdef:159> cmd=export 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ functions == -N ]]
+compdef:134> [[ functions == -p ]]
+compdef:136> [[ functions == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ functions == *=* ]]
+compdef:159> cmd=functions 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ integer == -N ]]
+compdef:134> [[ integer == -p ]]
+compdef:136> [[ integer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ integer == *=* ]]
+compdef:159> cmd=integer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ float == -N ]]
+compdef:134> [[ float == -p ]]
+compdef:136> [[ float == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ float == *=* ]]
+compdef:159> cmd=float 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ local == -N ]]
+compdef:134> [[ local == -p ]]
+compdef:136> [[ local == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ local == *=* ]]
+compdef:159> cmd=local 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ readonly == -N ]]
+compdef:134> [[ readonly == -p ]]
+compdef:136> [[ readonly == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ readonly == *=* ]]
+compdef:159> cmd=readonly 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ typeset == -N ]]
+compdef:134> [[ typeset == -p ]]
+compdef:136> [[ typeset == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ typeset == *=* ]]
+compdef:159> cmd=typeset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ulimit
+compinit:492> _i_name=_ulimit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ulimit == -[pPkK](n|) ]]
+compinit:503> compdef -na _ulimit ulimit
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ulimit == *=* ]]
+compdef:79> func=_ulimit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ulimit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ulimit == -N ]]
+compdef:134> [[ ulimit == -p ]]
+compdef:136> [[ ulimit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ulimit == *=* ]]
+compdef:159> cmd=ulimit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ulimit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_uml
+compinit:492> _i_name=_uml 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ linux == -[pPkK](n|) ]]
+compinit:503> compdef -na _uml linux uml_moo uml_mconsole uml_switch tunctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uml == *=* ]]
+compdef:79> func=_uml 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uml
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ linux == -N ]]
+compdef:134> [[ linux == -p ]]
+compdef:136> [[ linux == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ linux == *=* ]]
+compdef:159> cmd=linux 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ uml_moo == -N ]]
+compdef:134> [[ uml_moo == -p ]]
+compdef:136> [[ uml_moo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uml_moo == *=* ]]
+compdef:159> cmd=uml_moo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ uml_mconsole == -N ]]
+compdef:134> [[ uml_mconsole == -p ]]
+compdef:136> [[ uml_mconsole == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uml_mconsole == *=* ]]
+compdef:159> cmd=uml_mconsole 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ uml_switch == -N ]]
+compdef:134> [[ uml_switch == -p ]]
+compdef:136> [[ uml_switch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uml_switch == *=* ]]
+compdef:159> cmd=uml_switch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tunctl == -N ]]
+compdef:134> [[ tunctl == -p ]]
+compdef:136> [[ tunctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tunctl == *=* ]]
+compdef:159> cmd=tunctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_unace
+compinit:492> _i_name=_unace 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unace == -[pPkK](n|) ]]
+compinit:503> compdef -na _unace unace
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unace == *=* ]]
+compdef:79> func=_unace 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unace
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unace == -N ]]
+compdef:134> [[ unace == -p ]]
+compdef:136> [[ unace == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unace == *=* ]]
+compdef:159> cmd=unace 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_uname
+compinit:492> _i_name=_uname 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ uname == -[pPkK](n|) ]]
+compinit:503> compdef -na _uname uname
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uname == *=* ]]
+compdef:79> func=_uname 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uname
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ uname == -N ]]
+compdef:134> [[ uname == -p ]]
+compdef:136> [[ uname == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uname == *=* ]]
+compdef:159> cmd=uname 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uname 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_unexpand
+compinit:492> _i_name=_unexpand 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unexpand == -[pPkK](n|) ]]
+compinit:503> compdef -na _unexpand unexpand
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unexpand == *=* ]]
+compdef:79> func=_unexpand 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unexpand
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unexpand == -N ]]
+compdef:134> [[ unexpand == -p ]]
+compdef:136> [[ unexpand == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unexpand == *=* ]]
+compdef:159> cmd=unexpand 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unexpand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_unhash
+compinit:492> _i_name=_unhash 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unhash == -[pPkK](n|) ]]
+compinit:503> compdef -na _unhash unhash
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unhash == *=* ]]
+compdef:79> func=_unhash 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unhash
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unhash == -N ]]
+compdef:134> [[ unhash == -p ]]
+compdef:136> [[ unhash == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unhash == *=* ]]
+compdef:159> cmd=unhash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unhash 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_uniq
+compinit:492> _i_name=_uniq 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ uniq == -[pPkK](n|) ]]
+compinit:503> compdef -na _uniq uniq
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uniq == *=* ]]
+compdef:79> func=_uniq 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uniq
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ uniq == -N ]]
+compdef:134> [[ uniq == -p ]]
+compdef:136> [[ uniq == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uniq == *=* ]]
+compdef:159> cmd=uniq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uniq 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_unison
+compinit:492> _i_name=_unison 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unison == -[pPkK](n|) ]]
+compinit:503> compdef -na _unison unison
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unison == *=* ]]
+compdef:79> func=_unison 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unison
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unison == -N ]]
+compdef:134> [[ unison == -p ]]
+compdef:136> [[ unison == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unison == *=* ]]
+compdef:159> cmd=unison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_units
+compinit:492> _i_name=_units 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ units == -[pPkK](n|) ]]
+compinit:503> compdef -na _units units
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _units == *=* ]]
+compdef:79> func=_units 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _units
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ units == -N ]]
+compdef:134> [[ units == -p ]]
+compdef:136> [[ units == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ units == *=* ]]
+compdef:159> cmd=units 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_units 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_unsetopt
+compinit:492> _i_name=_unsetopt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ unsetopt == -[pPkK](n|) ]]
+compinit:503> compdef -na _unsetopt unsetopt
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unsetopt == *=* ]]
+compdef:79> func=_unsetopt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unsetopt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unsetopt == -N ]]
+compdef:134> [[ unsetopt == -p ]]
+compdef:136> [[ unsetopt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unsetopt == *=* ]]
+compdef:159> cmd=unsetopt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unsetopt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_update-alternatives
+compinit:492> _i_name=_update-alternatives 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ update-alternatives == -[pPkK](n|) ]]
+compinit:503> compdef -na _update-alternatives update-alternatives
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _update-alternatives == *=* ]]
+compdef:79> func=_update-alternatives 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _update-alternatives
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ update-alternatives == -N ]]
+compdef:134> [[ update-alternatives == -p ]]
+compdef:136> [[ update-alternatives == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ update-alternatives == *=* ]]
+compdef:159> cmd=update-alternatives 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_update-alternatives 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_update-rc.d
+compinit:492> _i_name=_update-rc.d 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ update-rc.d == -[pPkK](n|) ]]
+compinit:503> compdef -na _update-rc.d update-rc.d
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _update-rc.d == *=* ]]
+compdef:79> func=_update-rc.d 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _update-rc.d
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ update-rc.d == -N ]]
+compdef:134> [[ update-rc.d == -p ]]
+compdef:136> [[ update-rc.d == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ update-rc.d == *=* ]]
+compdef:159> cmd=update-rc.d 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_update-rc.d 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_urls
+compinit:492> _i_name=_urls 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ curl == -[pPkK](n|) ]]
+compinit:503> compdef -na _urls curl -value-,WWW_HOME,-default- -P '-value-,(ftp|http(|s))_proxy,-default-'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _urls == *=* ]]
+compdef:79> func=_urls 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _urls
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ curl == -N ]]
+compdef:134> [[ curl == -p ]]
+compdef:136> [[ curl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ curl == *=* ]]
+compdef:159> cmd=curl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,WWW_HOME,-default- == -N ]]
+compdef:134> [[ -value-,WWW_HOME,-default- == -p ]]
+compdef:136> [[ -value-,WWW_HOME,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,WWW_HOME,-default- == *=* ]]
+compdef:159> cmd=-value-,WWW_HOME,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P == -N ]]
+compdef:134> [[ -P == -p ]]
+compdef:136> [[ -P == -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,(ftp|http(|s))_proxy,-default-' == -N ]]
+compdef:134> [[ '-value-,(ftp|http(|s))_proxy,-default-' == -p ]]
+compdef:136> [[ '-value-,(ftp|http(|s))_proxy,-default-' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,(ftp|http(|s))_proxy,-default-' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_urls 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_urpmi
+compinit:492> _i_name=_urpmi 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ urpme == -[pPkK](n|) ]]
+compinit:503> compdef -na _urpmi urpme urpmi urpmi.addmedia urpmi.removemedia urpmi.update urpmq urpmf parsehdlist
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _urpmi == *=* ]]
+compdef:79> func=_urpmi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _urpmi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ urpme == -N ]]
+compdef:134> [[ urpme == -p ]]
+compdef:136> [[ urpme == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpme == *=* ]]
+compdef:159> cmd=urpme 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ urpmi == -N ]]
+compdef:134> [[ urpmi == -p ]]
+compdef:136> [[ urpmi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi == *=* ]]
+compdef:159> cmd=urpmi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ urpmi.addmedia == -N ]]
+compdef:134> [[ urpmi.addmedia == -p ]]
+compdef:136> [[ urpmi.addmedia == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi.addmedia == *=* ]]
+compdef:159> cmd=urpmi.addmedia 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ urpmi.removemedia == -N ]]
+compdef:134> [[ urpmi.removemedia == -p ]]
+compdef:136> [[ urpmi.removemedia == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi.removemedia == *=* ]]
+compdef:159> cmd=urpmi.removemedia 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ urpmi.update == -N ]]
+compdef:134> [[ urpmi.update == -p ]]
+compdef:136> [[ urpmi.update == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi.update == *=* ]]
+compdef:159> cmd=urpmi.update 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ urpmq == -N ]]
+compdef:134> [[ urpmq == -p ]]
+compdef:136> [[ urpmq == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmq == *=* ]]
+compdef:159> cmd=urpmq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ urpmf == -N ]]
+compdef:134> [[ urpmf == -p ]]
+compdef:136> [[ urpmf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmf == *=* ]]
+compdef:159> cmd=urpmf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ parsehdlist == -N ]]
+compdef:134> [[ parsehdlist == -p ]]
+compdef:136> [[ parsehdlist == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ parsehdlist == *=* ]]
+compdef:159> cmd=parsehdlist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_urxvt
+compinit:492> _i_name=_urxvt 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ rxvt == -[pPkK](n|) ]]
+compinit:503> compdef -na _urxvt rxvt urxvt urxvtc
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _urxvt == *=* ]]
+compdef:79> func=_urxvt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _urxvt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ rxvt == -N ]]
+compdef:134> [[ rxvt == -p ]]
+compdef:136> [[ rxvt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rxvt == *=* ]]
+compdef:159> cmd=rxvt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ urxvt == -N ]]
+compdef:134> [[ urxvt == -p ]]
+compdef:136> [[ urxvt == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvt == *=* ]]
+compdef:159> cmd=urxvt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ urxvtc == -N ]]
+compdef:134> [[ urxvtc == -p ]]
+compdef:136> [[ urxvtc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvtc == *=* ]]
+compdef:159> cmd=urxvtc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_uscan
+compinit:492> _i_name=_uscan 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ uscan == -[pPkK](n|) ]]
+compinit:503> compdef -na _uscan uscan
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uscan == *=* ]]
+compdef:79> func=_uscan 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uscan
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ uscan == -N ]]
+compdef:134> [[ uscan == -p ]]
+compdef:136> [[ uscan == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uscan == *=* ]]
+compdef:159> cmd=uscan 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uscan 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_user_admin
+compinit:492> _i_name=_user_admin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ useradd == -[pPkK](n|) ]]
+compinit:503> compdef -na _user_admin useradd usermod groupadd groupmod
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _user_admin == *=* ]]
+compdef:79> func=_user_admin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _user_admin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ useradd == -N ]]
+compdef:134> [[ useradd == -p ]]
+compdef:136> [[ useradd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ useradd == *=* ]]
+compdef:159> cmd=useradd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ usermod == -N ]]
+compdef:134> [[ usermod == -p ]]
+compdef:136> [[ usermod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ usermod == *=* ]]
+compdef:159> cmd=usermod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ groupadd == -N ]]
+compdef:134> [[ groupadd == -p ]]
+compdef:136> [[ groupadd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groupadd == *=* ]]
+compdef:159> cmd=groupadd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ groupmod == -N ]]
+compdef:134> [[ groupmod == -p ]]
+compdef:136> [[ groupmod == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groupmod == *=* ]]
+compdef:159> cmd=groupmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_user_at_host
+compinit:492> _i_name=_user_at_host 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _user_at_host
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_user_expand
+compinit:492> _i_name=_user_expand 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _user_expand
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_user_math_func
+compinit:492> _i_name=_user_math_func 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _user_math_func
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_users
+compinit:492> _i_name=_users 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ passwd == -[pPkK](n|) ]]
+compinit:503> compdef -na _users passwd groups userdel chage chfn chsh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _users == *=* ]]
+compdef:79> func=_users 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _users
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ passwd == -N ]]
+compdef:134> [[ passwd == -p ]]
+compdef:136> [[ passwd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ passwd == *=* ]]
+compdef:159> cmd=passwd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ groups == -N ]]
+compdef:134> [[ groups == -p ]]
+compdef:136> [[ groups == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groups == *=* ]]
+compdef:159> cmd=groups 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ userdel == -N ]]
+compdef:134> [[ userdel == -p ]]
+compdef:136> [[ userdel == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ userdel == *=* ]]
+compdef:159> cmd=userdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ chage == -N ]]
+compdef:134> [[ chage == -p ]]
+compdef:136> [[ chage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chage == *=* ]]
+compdef:159> cmd=chage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ chfn == -N ]]
+compdef:134> [[ chfn == -p ]]
+compdef:136> [[ chfn == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chfn == *=* ]]
+compdef:159> cmd=chfn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ chsh == -N ]]
+compdef:134> [[ chsh == -p ]]
+compdef:136> [[ chsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chsh == *=* ]]
+compdef:159> cmd=chsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_users_on
+compinit:492> _i_name=_users_on 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ write == -[pPkK](n|) ]]
+compinit:503> compdef -na _users_on write
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _users_on == *=* ]]
+compdef:79> func=_users_on 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _users_on
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ write == -N ]]
+compdef:134> [[ write == -p ]]
+compdef:136> [[ write == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ write == *=* ]]
+compdef:159> cmd=write 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users_on 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_uzbl
+compinit:492> _i_name=_uzbl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ uzbl == -[pPkK](n|) ]]
+compinit:503> compdef -na _uzbl uzbl uzbl-browser uzbl-tabbed
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uzbl == *=* ]]
+compdef:79> func=_uzbl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uzbl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ uzbl == -N ]]
+compdef:134> [[ uzbl == -p ]]
+compdef:136> [[ uzbl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uzbl == *=* ]]
+compdef:159> cmd=uzbl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uzbl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ uzbl-browser == -N ]]
+compdef:134> [[ uzbl-browser == -p ]]
+compdef:136> [[ uzbl-browser == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uzbl-browser == *=* ]]
+compdef:159> cmd=uzbl-browser 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uzbl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ uzbl-tabbed == -N ]]
+compdef:134> [[ uzbl-tabbed == -p ]]
+compdef:136> [[ uzbl-tabbed == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uzbl-tabbed == *=* ]]
+compdef:159> cmd=uzbl-tabbed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uzbl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_valgrind
+compinit:492> _i_name=_valgrind 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ valgrind == -[pPkK](n|) ]]
+compinit:503> compdef -na _valgrind valgrind -value-,VALGRIND_OPTS,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _valgrind == *=* ]]
+compdef:79> func=_valgrind 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _valgrind
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ valgrind == -N ]]
+compdef:134> [[ valgrind == -p ]]
+compdef:136> [[ valgrind == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ valgrind == *=* ]]
+compdef:159> cmd=valgrind 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_valgrind 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,VALGRIND_OPTS,-default- == -N ]]
+compdef:134> [[ -value-,VALGRIND_OPTS,-default- == -p ]]
+compdef:136> [[ -value-,VALGRIND_OPTS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,VALGRIND_OPTS,-default- == *=* ]]
+compdef:159> cmd=-value-,VALGRIND_OPTS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_valgrind 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_value
+compinit:492> _i_name=_value 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -value- == -[pPkK](n|) ]]
+compinit:503> compdef -na _value -value- -array-value- -value-,-default-,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _value == *=* ]]
+compdef:79> func=_value 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _value
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ -value- == -N ]]
+compdef:134> [[ -value- == -p ]]
+compdef:136> [[ -value- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value- == *=* ]]
+compdef:159> cmd=-value- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_value 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -array-value- == -N ]]
+compdef:134> [[ -array-value- == -p ]]
+compdef:136> [[ -array-value- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -array-value- == *=* ]]
+compdef:159> cmd=-array-value- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_value 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,-default-,-default- == -N ]]
+compdef:134> [[ -value-,-default-,-default- == -p ]]
+compdef:136> [[ -value-,-default-,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,-default-,-default- == *=* ]]
+compdef:159> cmd=-value-,-default-,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_value 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_values
+compinit:492> _i_name=_values 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _values
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vared
+compinit:492> _i_name=_vared 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vared == -[pPkK](n|) ]]
+compinit:503> compdef -na _vared vared
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vared == *=* ]]
+compdef:79> func=_vared 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vared
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vared == -N ]]
+compdef:134> [[ vared == -p ]]
+compdef:136> [[ vared == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vared == *=* ]]
+compdef:159> cmd=vared 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vared 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vars
+compinit:492> _i_name=_vars 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ getopts == -[pPkK](n|) ]]
+compinit:503> compdef -na _vars getopts unset
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vars == *=* ]]
+compdef:79> func=_vars 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vars
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ getopts == -N ]]
+compdef:134> [[ getopts == -p ]]
+compdef:136> [[ getopts == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getopts == *=* ]]
+compdef:159> cmd=getopts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vars 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ unset == -N ]]
+compdef:134> [[ unset == -p ]]
+compdef:136> [[ unset == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unset == *=* ]]
+compdef:159> cmd=unset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vars 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vcsh
+compinit:492> _i_name=_vcsh 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vcsh == -[pPkK](n|) ]]
+compinit:503> compdef -na _vcsh vcsh
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vcsh == *=* ]]
+compdef:79> func=_vcsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vcsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vcsh == -N ]]
+compdef:134> [[ vcsh == -p ]]
+compdef:136> [[ vcsh == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vcsh == *=* ]]
+compdef:159> cmd=vcsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vcsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vim
+compinit:492> _i_name=_vim 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vim == -[pPkK](n|) ]]
+compinit:503> compdef -na _vim vim exim gvim gex gview rvim rview rgvim rgview evim eview vimdiff gvimdiff
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vim == *=* ]]
+compdef:79> func=_vim 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vim
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ vim == -N ]]
+compdef:134> [[ vim == -p ]]
+compdef:136> [[ vim == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vim == *=* ]]
+compdef:159> cmd=vim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ exim == -N ]]
+compdef:134> [[ exim == -p ]]
+compdef:136> [[ exim == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ exim == *=* ]]
+compdef:159> cmd=exim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ gvim == -N ]]
+compdef:134> [[ gvim == -p ]]
+compdef:136> [[ gvim == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gvim == *=* ]]
+compdef:159> cmd=gvim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ gex == -N ]]
+compdef:134> [[ gex == -p ]]
+compdef:136> [[ gex == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gex == *=* ]]
+compdef:159> cmd=gex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ gview == -N ]]
+compdef:134> [[ gview == -p ]]
+compdef:136> [[ gview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gview == *=* ]]
+compdef:159> cmd=gview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ rvim == -N ]]
+compdef:134> [[ rvim == -p ]]
+compdef:136> [[ rvim == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rvim == *=* ]]
+compdef:159> cmd=rvim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ rview == -N ]]
+compdef:134> [[ rview == -p ]]
+compdef:136> [[ rview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rview == *=* ]]
+compdef:159> cmd=rview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rgvim == -N ]]
+compdef:134> [[ rgvim == -p ]]
+compdef:136> [[ rgvim == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rgvim == *=* ]]
+compdef:159> cmd=rgvim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ rgview == -N ]]
+compdef:134> [[ rgview == -p ]]
+compdef:136> [[ rgview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rgview == *=* ]]
+compdef:159> cmd=rgview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ evim == -N ]]
+compdef:134> [[ evim == -p ]]
+compdef:136> [[ evim == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ evim == *=* ]]
+compdef:159> cmd=evim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ eview == -N ]]
+compdef:134> [[ eview == -p ]]
+compdef:136> [[ eview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ eview == *=* ]]
+compdef:159> cmd=eview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ vimdiff == -N ]]
+compdef:134> [[ vimdiff == -p ]]
+compdef:136> [[ vimdiff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vimdiff == *=* ]]
+compdef:159> cmd=vimdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gvimdiff == -N ]]
+compdef:134> [[ gvimdiff == -p ]]
+compdef:136> [[ gvimdiff == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gvimdiff == *=* ]]
+compdef:159> cmd=gvimdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vim-addons
+compinit:492> _i_name=_vim-addons 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vim-addons == -[pPkK](n|) ]]
+compinit:503> compdef -na _vim-addons vim-addons
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vim-addons == *=* ]]
+compdef:79> func=_vim-addons 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vim-addons
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vim-addons == -N ]]
+compdef:134> [[ vim-addons == -p ]]
+compdef:136> [[ vim-addons == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vim-addons == *=* ]]
+compdef:159> cmd=vim-addons 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim-addons 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vnc
+compinit:492> _i_name=_vnc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vncserver == -[pPkK](n|) ]]
+compinit:503> compdef -na _vnc vncserver vncviewer xvncviewer xtightvncviewer xvnc4viewer
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vnc == *=* ]]
+compdef:79> func=_vnc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vnc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ vncserver == -N ]]
+compdef:134> [[ vncserver == -p ]]
+compdef:136> [[ vncserver == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vncserver == *=* ]]
+compdef:159> cmd=vncserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ vncviewer == -N ]]
+compdef:134> [[ vncviewer == -p ]]
+compdef:136> [[ vncviewer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vncviewer == *=* ]]
+compdef:159> cmd=vncviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ xvncviewer == -N ]]
+compdef:134> [[ xvncviewer == -p ]]
+compdef:136> [[ xvncviewer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xvncviewer == *=* ]]
+compdef:159> cmd=xvncviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xtightvncviewer == -N ]]
+compdef:134> [[ xtightvncviewer == -p ]]
+compdef:136> [[ xtightvncviewer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xtightvncviewer == *=* ]]
+compdef:159> cmd=xtightvncviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xvnc4viewer == -N ]]
+compdef:134> [[ xvnc4viewer == -p ]]
+compdef:136> [[ xvnc4viewer == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xvnc4viewer == *=* ]]
+compdef:159> cmd=xvnc4viewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_volume_groups
+compinit:492> _i_name=_volume_groups 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _volume_groups
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vorbis
+compinit:492> _i_name=_vorbis 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ oggenc == -[pPkK](n|) ]]
+compinit:503> compdef -na _vorbis oggenc ogg123 ogginfo oggdec
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vorbis == *=* ]]
+compdef:79> func=_vorbis 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vorbis
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ oggenc == -N ]]
+compdef:134> [[ oggenc == -p ]]
+compdef:136> [[ oggenc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ oggenc == *=* ]]
+compdef:159> cmd=oggenc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ogg123 == -N ]]
+compdef:134> [[ ogg123 == -p ]]
+compdef:136> [[ ogg123 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ogg123 == *=* ]]
+compdef:159> cmd=ogg123 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ogginfo == -N ]]
+compdef:134> [[ ogginfo == -p ]]
+compdef:136> [[ ogginfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ogginfo == *=* ]]
+compdef:159> cmd=ogginfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ oggdec == -N ]]
+compdef:134> [[ oggdec == -p ]]
+compdef:136> [[ oggdec == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ oggdec == *=* ]]
+compdef:159> cmd=oggdec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vorbiscomment
+compinit:492> _i_name=_vorbiscomment 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vorbiscomment == -[pPkK](n|) ]]
+compinit:503> compdef -na _vorbiscomment vorbiscomment
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vorbiscomment == *=* ]]
+compdef:79> func=_vorbiscomment 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vorbiscomment
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vorbiscomment == -N ]]
+compdef:134> [[ vorbiscomment == -p ]]
+compdef:136> [[ vorbiscomment == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vorbiscomment == *=* ]]
+compdef:159> cmd=vorbiscomment 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbiscomment 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vserver
+compinit:492> _i_name=_vserver 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vserver == -[pPkK](n|) ]]
+compinit:503> compdef -na _vserver vserver
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vserver == *=* ]]
+compdef:79> func=_vserver 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vserver
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vserver == -N ]]
+compdef:134> [[ vserver == -p ]]
+compdef:136> [[ vserver == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vserver == *=* ]]
+compdef:159> cmd=vserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vserver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_vux
+compinit:492> _i_name=_vux 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ vux == -[pPkK](n|) ]]
+compinit:503> compdef -na _vux vux vuxctl
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vux == *=* ]]
+compdef:79> func=_vux 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vux
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ vux == -N ]]
+compdef:134> [[ vux == -p ]]
+compdef:136> [[ vux == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vux == *=* ]]
+compdef:159> cmd=vux 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vux 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ vuxctl == -N ]]
+compdef:134> [[ vuxctl == -p ]]
+compdef:136> [[ vuxctl == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vuxctl == *=* ]]
+compdef:159> cmd=vuxctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vux 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_w3m
+compinit:492> _i_name=_w3m 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ w3m == -[pPkK](n|) ]]
+compinit:503> compdef -na _w3m w3m
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _w3m == *=* ]]
+compdef:79> func=_w3m 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _w3m
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ w3m == -N ]]
+compdef:134> [[ w3m == -p ]]
+compdef:136> [[ w3m == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ w3m == *=* ]]
+compdef:159> cmd=w3m 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_w3m 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wait
+compinit:492> _i_name=_wait 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ wait == -[pPkK](n|) ]]
+compinit:503> compdef -na _wait wait
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wait == *=* ]]
+compdef:79> func=_wait 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wait
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wait == -N ]]
+compdef:134> [[ wait == -p ]]
+compdef:136> [[ wait == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wait == *=* ]]
+compdef:159> cmd=wait 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wait 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wajig
+compinit:492> _i_name=_wajig 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ wajig == -[pPkK](n|) ]]
+compinit:503> compdef -na _wajig wajig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wajig == *=* ]]
+compdef:79> func=_wajig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wajig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wajig == -N ]]
+compdef:134> [[ wajig == -p ]]
+compdef:136> [[ wajig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wajig == *=* ]]
+compdef:159> cmd=wajig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wajig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wakeup_capable_devices
+compinit:492> _i_name=_wakeup_capable_devices 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _wakeup_capable_devices
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wanna-build
+compinit:492> _i_name=_wanna-build 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ wanna-build == -[pPkK](n|) ]]
+compinit:503> compdef -na _wanna-build wanna-build
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wanna-build == *=* ]]
+compdef:79> func=_wanna-build 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wanna-build
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wanna-build == -N ]]
+compdef:134> [[ wanna-build == -p ]]
+compdef:136> [[ wanna-build == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wanna-build == *=* ]]
+compdef:159> cmd=wanna-build 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wanna-build 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wanted
+compinit:492> _i_name=_wanted 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _wanted
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_webbrowser
+compinit:492> _i_name=_webbrowser 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ amaya == -[pPkK](n|) ]]
+compinit:503> compdef -na _webbrowser amaya arena chimera dillo dwb express galeon grail gzilla hotjava konqueror light mmm Mosaic netrik opera opera-next retawq skipstone www xmosaic zen
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 24  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 23  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _webbrowser == *=* ]]
+compdef:79> func=_webbrowser 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _webbrowser
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  22  ))
+compdef:132> [[ amaya == -N ]]
+compdef:134> [[ amaya == -p ]]
+compdef:136> [[ amaya == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ amaya == *=* ]]
+compdef:159> cmd=amaya 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  21  ))
+compdef:132> [[ arena == -N ]]
+compdef:134> [[ arena == -p ]]
+compdef:136> [[ arena == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ arena == *=* ]]
+compdef:159> cmd=arena 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ chimera == -N ]]
+compdef:134> [[ chimera == -p ]]
+compdef:136> [[ chimera == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chimera == *=* ]]
+compdef:159> cmd=chimera 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ dillo == -N ]]
+compdef:134> [[ dillo == -p ]]
+compdef:136> [[ dillo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dillo == *=* ]]
+compdef:159> cmd=dillo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ dwb == -N ]]
+compdef:134> [[ dwb == -p ]]
+compdef:136> [[ dwb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dwb == *=* ]]
+compdef:159> cmd=dwb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ express == -N ]]
+compdef:134> [[ express == -p ]]
+compdef:136> [[ express == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ express == *=* ]]
+compdef:159> cmd=express 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ galeon == -N ]]
+compdef:134> [[ galeon == -p ]]
+compdef:136> [[ galeon == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ galeon == *=* ]]
+compdef:159> cmd=galeon 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ grail == -N ]]
+compdef:134> [[ grail == -p ]]
+compdef:136> [[ grail == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grail == *=* ]]
+compdef:159> cmd=grail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ gzilla == -N ]]
+compdef:134> [[ gzilla == -p ]]
+compdef:136> [[ gzilla == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gzilla == *=* ]]
+compdef:159> cmd=gzilla 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ hotjava == -N ]]
+compdef:134> [[ hotjava == -p ]]
+compdef:136> [[ hotjava == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hotjava == *=* ]]
+compdef:159> cmd=hotjava 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ konqueror == -N ]]
+compdef:134> [[ konqueror == -p ]]
+compdef:136> [[ konqueror == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ konqueror == *=* ]]
+compdef:159> cmd=konqueror 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ light == -N ]]
+compdef:134> [[ light == -p ]]
+compdef:136> [[ light == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ light == *=* ]]
+compdef:159> cmd=light 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ mmm == -N ]]
+compdef:134> [[ mmm == -p ]]
+compdef:136> [[ mmm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmm == *=* ]]
+compdef:159> cmd=mmm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ Mosaic == -N ]]
+compdef:134> [[ Mosaic == -p ]]
+compdef:136> [[ Mosaic == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ Mosaic == *=* ]]
+compdef:159> cmd=Mosaic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ netrik == -N ]]
+compdef:134> [[ netrik == -p ]]
+compdef:136> [[ netrik == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netrik == *=* ]]
+compdef:159> cmd=netrik 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ opera == -N ]]
+compdef:134> [[ opera == -p ]]
+compdef:136> [[ opera == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ opera == *=* ]]
+compdef:159> cmd=opera 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ opera-next == -N ]]
+compdef:134> [[ opera-next == -p ]]
+compdef:136> [[ opera-next == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ opera-next == *=* ]]
+compdef:159> cmd=opera-next 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ retawq == -N ]]
+compdef:134> [[ retawq == -p ]]
+compdef:136> [[ retawq == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ retawq == *=* ]]
+compdef:159> cmd=retawq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ skipstone == -N ]]
+compdef:134> [[ skipstone == -p ]]
+compdef:136> [[ skipstone == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ skipstone == *=* ]]
+compdef:159> cmd=skipstone 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ www == -N ]]
+compdef:134> [[ www == -p ]]
+compdef:136> [[ www == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ www == *=* ]]
+compdef:159> cmd=www 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xmosaic == -N ]]
+compdef:134> [[ xmosaic == -p ]]
+compdef:136> [[ xmosaic == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmosaic == *=* ]]
+compdef:159> cmd=xmosaic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zen == -N ]]
+compdef:134> [[ zen == -p ]]
+compdef:136> [[ zen == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zen == *=* ]]
+compdef:159> cmd=zen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wget
+compinit:492> _i_name=_wget 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ wget == -[pPkK](n|) ]]
+compinit:503> compdef -na _wget wget
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wget == *=* ]]
+compdef:79> func=_wget 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wget
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wget == -N ]]
+compdef:134> [[ wget == -p ]]
+compdef:136> [[ wget == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wget == *=* ]]
+compdef:159> cmd=wget 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wget 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_whereis
+compinit:492> _i_name=_whereis 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ whereis == -[pPkK](n|) ]]
+compinit:503> compdef -na _whereis whereis
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _whereis == *=* ]]
+compdef:79> func=_whereis 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _whereis
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ whereis == -N ]]
+compdef:134> [[ whereis == -p ]]
+compdef:136> [[ whereis == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whereis == *=* ]]
+compdef:159> cmd=whereis 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_whereis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_which
+compinit:492> _i_name=_which 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ which == -[pPkK](n|) ]]
+compinit:503> compdef -na _which which whence where type
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _which == *=* ]]
+compdef:79> func=_which 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _which
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ which == -N ]]
+compdef:134> [[ which == -p ]]
+compdef:136> [[ which == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ which == *=* ]]
+compdef:159> cmd=which 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ whence == -N ]]
+compdef:134> [[ whence == -p ]]
+compdef:136> [[ whence == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whence == *=* ]]
+compdef:159> cmd=whence 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ where == -N ]]
+compdef:134> [[ where == -p ]]
+compdef:136> [[ where == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ where == *=* ]]
+compdef:159> cmd=where 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ type == -N ]]
+compdef:134> [[ type == -p ]]
+compdef:136> [[ type == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ type == *=* ]]
+compdef:159> cmd=type 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_whois
+compinit:492> _i_name=_whois 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ whois == -[pPkK](n|) ]]
+compinit:503> compdef -na _whois whois fwhois
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _whois == *=* ]]
+compdef:79> func=_whois 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _whois
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ whois == -N ]]
+compdef:134> [[ whois == -p ]]
+compdef:136> [[ whois == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whois == *=* ]]
+compdef:159> cmd=whois 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_whois 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fwhois == -N ]]
+compdef:134> [[ fwhois == -p ]]
+compdef:136> [[ fwhois == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fwhois == *=* ]]
+compdef:159> cmd=fwhois 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_whois 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wiggle
+compinit:492> _i_name=_wiggle 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ wiggle == -[pPkK](n|) ]]
+compinit:503> compdef -na _wiggle wiggle
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wiggle == *=* ]]
+compdef:79> func=_wiggle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wiggle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wiggle == -N ]]
+compdef:134> [[ wiggle == -p ]]
+compdef:136> [[ wiggle == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wiggle == *=* ]]
+compdef:159> cmd=wiggle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wiggle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_wpa_cli
+compinit:492> _i_name=_wpa_cli 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ wpa_cli == -[pPkK](n|) ]]
+compinit:503> compdef -na _wpa_cli wpa_cli
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wpa_cli == *=* ]]
+compdef:79> func=_wpa_cli 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wpa_cli
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wpa_cli == -N ]]
+compdef:134> [[ wpa_cli == -p ]]
+compdef:136> [[ wpa_cli == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wpa_cli == *=* ]]
+compdef:159> cmd=wpa_cli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wpa_cli 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_arguments
+compinit:492> _i_name=_x_arguments 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -P == -[pPkK](n|) ]]
+compinit:501> compdef -Pna _x_arguments '*/X11(|R<4->)/*'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P == p ]]
+compdef:26> [[ P == P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _x_arguments == *=* ]]
+compdef:79> func=_x_arguments 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _x_arguments
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '*/X11(|R<4->)/*' == -N ]]
+compdef:134> [[ '*/X11(|R<4->)/*' == -p ]]
+compdef:136> [[ '*/X11(|R<4->)/*' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '*/X11(|R<4->)/*' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_x_arguments 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_borderwidth
+compinit:492> _i_name=_x_borderwidth 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_borderwidth
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_color
+compinit:492> _i_name=_x_color 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_color
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_colormapid
+compinit:492> _i_name=_x_colormapid 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_colormapid
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_cursor
+compinit:492> _i_name=_x_cursor 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_cursor
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_display
+compinit:492> _i_name=_x_display 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -value-,DISPLAY,-default- == -[pPkK](n|) ]]
+compinit:503> compdef -na _x_display -value-,DISPLAY,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _x_display == *=* ]]
+compdef:79> func=_x_display 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _x_display
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,DISPLAY,-default- == -N ]]
+compdef:134> [[ -value-,DISPLAY,-default- == -p ]]
+compdef:136> [[ -value-,DISPLAY,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,DISPLAY,-default- == *=* ]]
+compdef:159> cmd=-value-,DISPLAY,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_display 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_extension
+compinit:492> _i_name=_x_extension 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_extension
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_font
+compinit:492> _i_name=_x_font 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_font
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_geometry
+compinit:492> _i_name=_x_geometry 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_geometry
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_keysym
+compinit:492> _i_name=_x_keysym 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_keysym
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_locale
+compinit:492> _i_name=_x_locale 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_locale
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_modifier
+compinit:492> _i_name=_x_modifier 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_modifier
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_name
+compinit:492> _i_name=_x_name 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_name
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_resource
+compinit:492> _i_name=_x_resource 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_resource
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_selection_timeout
+compinit:492> _i_name=_x_selection_timeout 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_selection_timeout
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_title
+compinit:492> _i_name=_x_title 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_title
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_utils
+compinit:492> _i_name=_x_utils 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xdpyinfo == -[pPkK](n|) ]]
+compinit:503> compdef -na _x_utils xdpyinfo xwininfo xkill xfontsel xfd xev xhost xon xsetroot xwd xwud xrdb xprop xlsatoms
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 16  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 15  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _x_utils == *=* ]]
+compdef:79> func=_x_utils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _x_utils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  14  ))
+compdef:132> [[ xdpyinfo == -N ]]
+compdef:134> [[ xdpyinfo == -p ]]
+compdef:136> [[ xdpyinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xdpyinfo == *=* ]]
+compdef:159> cmd=xdpyinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ xwininfo == -N ]]
+compdef:134> [[ xwininfo == -p ]]
+compdef:136> [[ xwininfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwininfo == *=* ]]
+compdef:159> cmd=xwininfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ xkill == -N ]]
+compdef:134> [[ xkill == -p ]]
+compdef:136> [[ xkill == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xkill == *=* ]]
+compdef:159> cmd=xkill 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ xfontsel == -N ]]
+compdef:134> [[ xfontsel == -p ]]
+compdef:136> [[ xfontsel == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xfontsel == *=* ]]
+compdef:159> cmd=xfontsel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ xfd == -N ]]
+compdef:134> [[ xfd == -p ]]
+compdef:136> [[ xfd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xfd == *=* ]]
+compdef:159> cmd=xfd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ xev == -N ]]
+compdef:134> [[ xev == -p ]]
+compdef:136> [[ xev == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xev == *=* ]]
+compdef:159> cmd=xev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ xhost == -N ]]
+compdef:134> [[ xhost == -p ]]
+compdef:136> [[ xhost == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xhost == *=* ]]
+compdef:159> cmd=xhost 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ xon == -N ]]
+compdef:134> [[ xon == -p ]]
+compdef:136> [[ xon == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xon == *=* ]]
+compdef:159> cmd=xon 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ xsetroot == -N ]]
+compdef:134> [[ xsetroot == -p ]]
+compdef:136> [[ xsetroot == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xsetroot == *=* ]]
+compdef:159> cmd=xsetroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ xwd == -N ]]
+compdef:134> [[ xwd == -p ]]
+compdef:136> [[ xwd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwd == *=* ]]
+compdef:159> cmd=xwd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ xwud == -N ]]
+compdef:134> [[ xwud == -p ]]
+compdef:136> [[ xwud == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwud == *=* ]]
+compdef:159> cmd=xwud 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ xrdb == -N ]]
+compdef:134> [[ xrdb == -p ]]
+compdef:136> [[ xrdb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xrdb == *=* ]]
+compdef:159> cmd=xrdb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xprop == -N ]]
+compdef:134> [[ xprop == -p ]]
+compdef:136> [[ xprop == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xprop == *=* ]]
+compdef:159> cmd=xprop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xlsatoms == -N ]]
+compdef:134> [[ xlsatoms == -p ]]
+compdef:136> [[ xlsatoms == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xlsatoms == *=* ]]
+compdef:159> cmd=xlsatoms 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_visual
+compinit:492> _i_name=_x_visual 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_visual
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_x_window
+compinit:492> _i_name=_x_window 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _x_window
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xargs
+compinit:492> _i_name=_xargs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xargs == -[pPkK](n|) ]]
+compinit:503> compdef -na _xargs xargs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xargs == *=* ]]
+compdef:79> func=_xargs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xargs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xargs == -N ]]
+compdef:134> [[ xargs == -p ]]
+compdef:136> [[ xargs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xargs == *=* ]]
+compdef:159> cmd=xargs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xargs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xauth
+compinit:492> _i_name=_xauth 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xauth == -[pPkK](n|) ]]
+compinit:503> compdef -na _xauth xauth
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xauth == *=* ]]
+compdef:79> func=_xauth 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xauth
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xauth == -N ]]
+compdef:134> [[ xauth == -p ]]
+compdef:136> [[ xauth == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xauth == *=* ]]
+compdef:159> cmd=xauth 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xauth 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xclip
+compinit:492> _i_name=_xclip 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xclip == -[pPkK](n|) ]]
+compinit:503> compdef -na _xclip xclip
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xclip == *=* ]]
+compdef:79> func=_xclip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xclip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xclip == -N ]]
+compdef:134> [[ xclip == -p ]]
+compdef:136> [[ xclip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xclip == *=* ]]
+compdef:159> cmd=xclip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xdvi
+compinit:492> _i_name=_xdvi 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xdvi == -[pPkK](n|) ]]
+compinit:503> compdef -na _xdvi xdvi
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xdvi == *=* ]]
+compdef:79> func=_xdvi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xdvi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xdvi == -N ]]
+compdef:134> [[ xdvi == -p ]]
+compdef:136> [[ xdvi == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xdvi == *=* ]]
+compdef:159> cmd=xdvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xdvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xfig
+compinit:492> _i_name=_xfig 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xfig == -[pPkK](n|) ]]
+compinit:503> compdef -na _xfig xfig
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xfig == *=* ]]
+compdef:79> func=_xfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xfig == -N ]]
+compdef:134> [[ xfig == -p ]]
+compdef:136> [[ xfig == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xfig == *=* ]]
+compdef:159> cmd=xfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xft_fonts
+compinit:492> _i_name=_xft_fonts 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ fc-list == -[pPkK](n|) ]]
+compinit:503> compdef -na _xft_fonts fc-list fc-match
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xft_fonts == *=* ]]
+compdef:79> func=_xft_fonts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xft_fonts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ fc-list == -N ]]
+compdef:134> [[ fc-list == -p ]]
+compdef:136> [[ fc-list == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fc-list == *=* ]]
+compdef:159> cmd=fc-list 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xft_fonts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fc-match == -N ]]
+compdef:134> [[ fc-match == -p ]]
+compdef:136> [[ fc-match == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fc-match == *=* ]]
+compdef:159> cmd=fc-match 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xft_fonts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xloadimage
+compinit:492> _i_name=_xloadimage 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xli == -[pPkK](n|) ]]
+compinit:503> compdef -na _xloadimage xli xloadimage xsetbg xview
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xloadimage == *=* ]]
+compdef:79> func=_xloadimage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xloadimage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ xli == -N ]]
+compdef:134> [[ xli == -p ]]
+compdef:136> [[ xli == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xli == *=* ]]
+compdef:159> cmd=xli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ xloadimage == -N ]]
+compdef:134> [[ xloadimage == -p ]]
+compdef:136> [[ xloadimage == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xloadimage == *=* ]]
+compdef:159> cmd=xloadimage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xsetbg == -N ]]
+compdef:134> [[ xsetbg == -p ]]
+compdef:136> [[ xsetbg == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xsetbg == *=* ]]
+compdef:159> cmd=xsetbg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xview == -N ]]
+compdef:134> [[ xview == -p ]]
+compdef:136> [[ xview == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xview == *=* ]]
+compdef:159> cmd=xview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xmlsoft
+compinit:492> _i_name=_xmlsoft 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xsltproc == -[pPkK](n|) ]]
+compinit:503> compdef -na _xmlsoft xsltproc xmllint -value-,XML_CATALOG_FILES,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xmlsoft == *=* ]]
+compdef:79> func=_xmlsoft 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xmlsoft
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ xsltproc == -N ]]
+compdef:134> [[ xsltproc == -p ]]
+compdef:136> [[ xsltproc == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xsltproc == *=* ]]
+compdef:159> cmd=xsltproc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmlsoft 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xmllint == -N ]]
+compdef:134> [[ xmllint == -p ]]
+compdef:136> [[ xmllint == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmllint == *=* ]]
+compdef:159> cmd=xmllint 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmlsoft 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,XML_CATALOG_FILES,-default- == -N ]]
+compdef:134> [[ -value-,XML_CATALOG_FILES,-default- == -p ]]
+compdef:136> [[ -value-,XML_CATALOG_FILES,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,XML_CATALOG_FILES,-default- == *=* ]]
+compdef:159> cmd=-value-,XML_CATALOG_FILES,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmlsoft 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xmms2
+compinit:492> _i_name=_xmms2 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xmms2 == -[pPkK](n|) ]]
+compinit:503> compdef -na _xmms2 xmms2
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xmms2 == *=* ]]
+compdef:79> func=_xmms2 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xmms2
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xmms2 == -N ]]
+compdef:134> [[ xmms2 == -p ]]
+compdef:136> [[ xmms2 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmms2 == *=* ]]
+compdef:159> cmd=xmms2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmms2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xmodmap
+compinit:492> _i_name=_xmodmap 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xmodmap == -[pPkK](n|) ]]
+compinit:503> compdef -na _xmodmap xmodmap
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xmodmap == *=* ]]
+compdef:79> func=_xmodmap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xmodmap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xmodmap == -N ]]
+compdef:134> [[ xmodmap == -p ]]
+compdef:136> [[ xmodmap == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmodmap == *=* ]]
+compdef:159> cmd=xmodmap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmodmap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xournal
+compinit:492> _i_name=_xournal 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xournal == -[pPkK](n|) ]]
+compinit:503> compdef -na _xournal xournal
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xournal == *=* ]]
+compdef:79> func=_xournal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xournal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xournal == -N ]]
+compdef:134> [[ xournal == -p ]]
+compdef:136> [[ xournal == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xournal == *=* ]]
+compdef:159> cmd=xournal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xournal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xpdf
+compinit:492> _i_name=_xpdf 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xpdf == -[pPkK](n|) ]]
+compinit:503> compdef -na _xpdf xpdf zxpdf
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xpdf == *=* ]]
+compdef:79> func=_xpdf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xpdf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ xpdf == -N ]]
+compdef:134> [[ xpdf == -p ]]
+compdef:136> [[ xpdf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xpdf == *=* ]]
+compdef:159> cmd=xpdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xpdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zxpdf == -N ]]
+compdef:134> [[ zxpdf == -p ]]
+compdef:136> [[ zxpdf == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zxpdf == *=* ]]
+compdef:159> cmd=zxpdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xpdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xrandr
+compinit:492> _i_name=_xrandr 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xrandr == -[pPkK](n|) ]]
+compinit:503> compdef -na _xrandr xrandr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xrandr == *=* ]]
+compdef:79> func=_xrandr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xrandr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xrandr == -N ]]
+compdef:134> [[ xrandr == -p ]]
+compdef:136> [[ xrandr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xrandr == *=* ]]
+compdef:159> cmd=xrandr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xrandr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xscreensaver
+compinit:492> _i_name=_xscreensaver 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xscreensaver-command == -[pPkK](n|) ]]
+compinit:503> compdef -na _xscreensaver xscreensaver-command
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xscreensaver == *=* ]]
+compdef:79> func=_xscreensaver 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xscreensaver
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xscreensaver-command == -N ]]
+compdef:134> [[ xscreensaver-command == -p ]]
+compdef:136> [[ xscreensaver-command == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xscreensaver-command == *=* ]]
+compdef:159> cmd=xscreensaver-command 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xscreensaver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xset
+compinit:492> _i_name=_xset 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xset == -[pPkK](n|) ]]
+compinit:503> compdef -na _xset xset
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xset == *=* ]]
+compdef:79> func=_xset 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xset
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xset == -N ]]
+compdef:134> [[ xset == -p ]]
+compdef:136> [[ xset == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xset == *=* ]]
+compdef:159> cmd=xset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xt_arguments
+compinit:492> _i_name=_xt_arguments 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _xt_arguments
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xt_session_id
+compinit:492> _i_name=_xt_session_id 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _xt_session_id
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xterm
+compinit:492> _i_name=_xterm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xterm == -[pPkK](n|) ]]
+compinit:503> compdef -na _xterm xterm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xterm == *=* ]]
+compdef:79> func=_xterm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xterm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xterm == -N ]]
+compdef:134> [[ xterm == -p ]]
+compdef:136> [[ xterm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xterm == *=* ]]
+compdef:159> cmd=xterm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xterm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xv
+compinit:492> _i_name=_xv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xv == -[pPkK](n|) ]]
+compinit:503> compdef -na _xv xv
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xv == *=* ]]
+compdef:79> func=_xv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xv == -N ]]
+compdef:134> [[ xv == -p ]]
+compdef:136> [[ xv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xv == *=* ]]
+compdef:159> cmd=xv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xwit
+compinit:492> _i_name=_xwit 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xwit == -[pPkK](n|) ]]
+compinit:503> compdef -na _xwit xwit
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xwit == *=* ]]
+compdef:79> func=_xwit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xwit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xwit == -N ]]
+compdef:134> [[ xwit == -p ]]
+compdef:136> [[ xwit == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwit == *=* ]]
+compdef:159> cmd=xwit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xwit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_xz
+compinit:492> _i_name=_xz 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ xz == -[pPkK](n|) ]]
+compinit:503> compdef -na _xz xz unxz 'xzcat=unxz' 'lzma=xz' 'unlzma=unxz' 'lzcat=unxz' '-redirect-,<,unxz=unxz' '-redirect-,>,xz=unxz' '-redirect-,<,xz=xz' -value-,XZ_OPT,-default- -value-,XZ_DEFAULTS,-default-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 13  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 12  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xz == *=* ]]
+compdef:79> func=_xz 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xz
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  11  ))
+compdef:132> [[ xz == -N ]]
+compdef:134> [[ xz == -p ]]
+compdef:136> [[ xz == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xz == *=* ]]
+compdef:159> cmd=xz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ unxz == -N ]]
+compdef:134> [[ unxz == -p ]]
+compdef:136> [[ unxz == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unxz == *=* ]]
+compdef:159> cmd=unxz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ 'xzcat=unxz' == -N ]]
+compdef:134> [[ 'xzcat=unxz' == -p ]]
+compdef:136> [[ 'xzcat=unxz' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'xzcat=unxz' == *=* ]]
+compdef:156> cmd=xzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ 'lzma=xz' == -N ]]
+compdef:134> [[ 'lzma=xz' == -p ]]
+compdef:136> [[ 'lzma=xz' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'lzma=xz' == *=* ]]
+compdef:156> cmd=lzma 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=xz 
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ 'unlzma=unxz' == -N ]]
+compdef:134> [[ 'unlzma=unxz' == -p ]]
+compdef:136> [[ 'unlzma=unxz' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'unlzma=unxz' == *=* ]]
+compdef:156> cmd=unlzma 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ 'lzcat=unxz' == -N ]]
+compdef:134> [[ 'lzcat=unxz' == -p ]]
+compdef:136> [[ 'lzcat=unxz' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'lzcat=unxz' == *=* ]]
+compdef:156> cmd=lzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ '-redirect-,<,unxz=unxz' == -N ]]
+compdef:134> [[ '-redirect-,<,unxz=unxz' == -p ]]
+compdef:136> [[ '-redirect-,<,unxz=unxz' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,unxz=unxz' == *=* ]]
+compdef:156> cmd='-redirect-,<,unxz' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ '-redirect-,>,xz=unxz' == -N ]]
+compdef:134> [[ '-redirect-,>,xz=unxz' == -p ]]
+compdef:136> [[ '-redirect-,>,xz=unxz' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,xz=unxz' == *=* ]]
+compdef:156> cmd='-redirect-,>,xz' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,<,xz=xz' == -N ]]
+compdef:134> [[ '-redirect-,<,xz=xz' == -p ]]
+compdef:136> [[ '-redirect-,<,xz=xz' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,xz=xz' == *=* ]]
+compdef:156> cmd='-redirect-,<,xz' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=xz 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,XZ_OPT,-default- == -N ]]
+compdef:134> [[ -value-,XZ_OPT,-default- == -p ]]
+compdef:136> [[ -value-,XZ_OPT,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,XZ_OPT,-default- == *=* ]]
+compdef:159> cmd=-value-,XZ_OPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,XZ_DEFAULTS,-default- == -N ]]
+compdef:134> [[ -value-,XZ_DEFAULTS,-default- == -p ]]
+compdef:136> [[ -value-,XZ_DEFAULTS,-default- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,XZ_DEFAULTS,-default- == *=* ]]
+compdef:159> cmd=-value-,XZ_DEFAULTS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_yafc
+compinit:492> _i_name=_yafc 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#' 
+compinit:497> shift _i_line
+compinit:498> case # (\#compdef)
+compinit:498> case # (\#autoload)
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_yast
+compinit:492> _i_name=_yast 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ yast == -[pPkK](n|) ]]
+compinit:503> compdef -na _yast yast yast2
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yast == *=* ]]
+compdef:79> func=_yast 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yast
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ yast == -N ]]
+compdef:134> [[ yast == -p ]]
+compdef:136> [[ yast == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yast == *=* ]]
+compdef:159> cmd=yast 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yast 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ yast2 == -N ]]
+compdef:134> [[ yast2 == -p ]]
+compdef:136> [[ yast2 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yast2 == *=* ]]
+compdef:159> cmd=yast2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yast 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_yast2
+compinit:492> _i_name=_yast2 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ yast2 == -[pPkK](n|) ]]
+compinit:503> compdef -na _yast2 yast2 yast
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yast2 == *=* ]]
+compdef:79> func=_yast2 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yast2
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ yast2 == -N ]]
+compdef:134> [[ yast2 == -p ]]
+compdef:136> [[ yast2 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yast2 == *=* ]]
+compdef:159> cmd=yast2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z _yast ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ yast == -N ]]
+compdef:134> [[ yast == -p ]]
+compdef:136> [[ yast == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yast == *=* ]]
+compdef:159> cmd=yast 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z _yast ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_yodl
+compinit:492> _i_name=_yodl 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -P == -[pPkK](n|) ]]
+compinit:501> compdef -Pna _yodl 'yodl(|2*)'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P == p ]]
+compdef:26> [[ P == P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yodl == *=* ]]
+compdef:79> func=_yodl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yodl
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'yodl(|2*)' == -N ]]
+compdef:134> [[ 'yodl(|2*)' == -p ]]
+compdef:136> [[ 'yodl(|2*)' == -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ 'yodl(|2*)' == (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_yodl 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_yp
+compinit:492> _i_name=_yp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ypcat == -[pPkK](n|) ]]
+compinit:503> compdef -na _yp ypcat ypmatch yppasswd ypwhich ypset ypserv ypbind yppush yppoll ypxfr domainname
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 13  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 12  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yp == *=* ]]
+compdef:79> func=_yp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  11  ))
+compdef:132> [[ ypcat == -N ]]
+compdef:134> [[ ypcat == -p ]]
+compdef:136> [[ ypcat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypcat == *=* ]]
+compdef:159> cmd=ypcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ ypmatch == -N ]]
+compdef:134> [[ ypmatch == -p ]]
+compdef:136> [[ ypmatch == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypmatch == *=* ]]
+compdef:159> cmd=ypmatch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ yppasswd == -N ]]
+compdef:134> [[ yppasswd == -p ]]
+compdef:136> [[ yppasswd == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yppasswd == *=* ]]
+compdef:159> cmd=yppasswd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ ypwhich == -N ]]
+compdef:134> [[ ypwhich == -p ]]
+compdef:136> [[ ypwhich == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypwhich == *=* ]]
+compdef:159> cmd=ypwhich 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ ypset == -N ]]
+compdef:134> [[ ypset == -p ]]
+compdef:136> [[ ypset == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypset == *=* ]]
+compdef:159> cmd=ypset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ ypserv == -N ]]
+compdef:134> [[ ypserv == -p ]]
+compdef:136> [[ ypserv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypserv == *=* ]]
+compdef:159> cmd=ypserv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ypbind == -N ]]
+compdef:134> [[ ypbind == -p ]]
+compdef:136> [[ ypbind == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypbind == *=* ]]
+compdef:159> cmd=ypbind 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ yppush == -N ]]
+compdef:134> [[ yppush == -p ]]
+compdef:136> [[ yppush == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yppush == *=* ]]
+compdef:159> cmd=yppush 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ yppoll == -N ]]
+compdef:134> [[ yppoll == -p ]]
+compdef:136> [[ yppoll == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yppoll == *=* ]]
+compdef:159> cmd=yppoll 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ypxfr == -N ]]
+compdef:134> [[ ypxfr == -p ]]
+compdef:136> [[ ypxfr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypxfr == *=* ]]
+compdef:159> cmd=ypxfr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ domainname == -N ]]
+compdef:134> [[ domainname == -p ]]
+compdef:136> [[ domainname == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ domainname == *=* ]]
+compdef:159> cmd=domainname 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_yum
+compinit:492> _i_name=_yum 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ yum == -[pPkK](n|) ]]
+compinit:503> compdef -na _yum yum
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yum == *=* ]]
+compdef:79> func=_yum 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yum
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ yum == -N ]]
+compdef:134> [[ yum == -p ]]
+compdef:136> [[ yum == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yum == *=* ]]
+compdef:159> cmd=yum 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yum 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zargs
+compinit:492> _i_name=_zargs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zargs == -[pPkK](n|) ]]
+compinit:503> compdef -na _zargs zargs -value-,-default-,-command-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zargs == *=* ]]
+compdef:79> func=_zargs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zargs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ zargs == -N ]]
+compdef:134> [[ zargs == -p ]]
+compdef:136> [[ zargs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zargs == *=* ]]
+compdef:159> cmd=zargs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zargs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,-default-,-command- == -N ]]
+compdef:134> [[ -value-,-default-,-command- == -p ]]
+compdef:136> [[ -value-,-default-,-command- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,-default-,-command- == *=* ]]
+compdef:159> cmd=-value-,-default-,-command- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zargs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zattr
+compinit:492> _i_name=_zattr 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zgetattr == -[pPkK](n|) ]]
+compinit:503> compdef -na _zattr zgetattr zsetattr zdelattr zlistattr
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zattr == *=* ]]
+compdef:79> func=_zattr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zattr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ zgetattr == -N ]]
+compdef:134> [[ zgetattr == -p ]]
+compdef:136> [[ zgetattr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zgetattr == *=* ]]
+compdef:159> cmd=zgetattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ zsetattr == -N ]]
+compdef:134> [[ zsetattr == -p ]]
+compdef:136> [[ zsetattr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zsetattr == *=* ]]
+compdef:159> cmd=zsetattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ zdelattr == -N ]]
+compdef:134> [[ zdelattr == -p ]]
+compdef:136> [[ zdelattr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zdelattr == *=* ]]
+compdef:159> cmd=zdelattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zlistattr == -N ]]
+compdef:134> [[ zlistattr == -p ]]
+compdef:136> [[ zlistattr == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zlistattr == *=* ]]
+compdef:159> cmd=zlistattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zcalc_line
+compinit:492> _i_name=_zcalc_line 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -zcalc-line- == -[pPkK](n|) ]]
+compinit:503> compdef -na _zcalc_line -zcalc-line-
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zcalc_line == *=* ]]
+compdef:79> func=_zcalc_line 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zcalc_line
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -zcalc-line- == -N ]]
+compdef:134> [[ -zcalc-line- == -p ]]
+compdef:136> [[ -zcalc-line- == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -zcalc-line- == *=* ]]
+compdef:159> cmd=-zcalc-line- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zcalc_line 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zcat
+compinit:492> _i_name=_zcat 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zcat == -[pPkK](n|) ]]
+compinit:503> compdef -na _zcat zcat
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zcat == *=* ]]
+compdef:79> func=_zcat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zcat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zcat == -N ]]
+compdef:134> [[ zcat == -p ]]
+compdef:136> [[ zcat == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zcat == *=* ]]
+compdef:159> cmd=zcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zcat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zcompile
+compinit:492> _i_name=_zcompile 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zcompile == -[pPkK](n|) ]]
+compinit:503> compdef -na _zcompile zcompile
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zcompile == *=* ]]
+compdef:79> func=_zcompile 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zcompile
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zcompile == -N ]]
+compdef:134> [[ zcompile == -p ]]
+compdef:136> [[ zcompile == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zcompile == *=* ]]
+compdef:159> cmd=zcompile 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zcompile 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zdump
+compinit:492> _i_name=_zdump 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zdump == -[pPkK](n|) ]]
+compinit:503> compdef -na _zdump zdump
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zdump == *=* ]]
+compdef:79> func=_zdump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zdump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zdump == -N ]]
+compdef:134> [[ zdump == -p ]]
+compdef:136> [[ zdump == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zdump == *=* ]]
+compdef:159> cmd=zdump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zdump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zed
+compinit:492> _i_name=_zed 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zed == -[pPkK](n|) ]]
+compinit:503> compdef -na _zed zed fned
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zed == *=* ]]
+compdef:79> func=_zed 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zed
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ zed == -N ]]
+compdef:134> [[ zed == -p ]]
+compdef:136> [[ zed == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zed == *=* ]]
+compdef:159> cmd=zed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fned == -N ]]
+compdef:134> [[ fned == -p ]]
+compdef:136> [[ fned == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fned == *=* ]]
+compdef:159> cmd=fned 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zfs
+compinit:492> _i_name=_zfs 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zfs == -[pPkK](n|) ]]
+compinit:503> compdef -na _zfs zfs
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zfs == *=* ]]
+compdef:79> func=_zfs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zfs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zfs == -N ]]
+compdef:134> [[ zfs == -p ]]
+compdef:136> [[ zfs == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zfs == *=* ]]
+compdef:159> cmd=zfs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zfs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zfs_dataset
+compinit:492> _i_name=_zfs_dataset 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _zfs_dataset
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zfs_keysource_props
+compinit:492> _i_name=_zfs_keysource_props 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _zfs_keysource_props
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zfs_pool
+compinit:492> _i_name=_zfs_pool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _zfs_pool
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zftp
+compinit:492> _i_name=_zftp 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ -p == -[pPkK](n|) ]]
+compinit:501> compdef -pna _zftp 'zf*'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case p (a)
+compdef:15> case p (n)
+compdef:15> case p ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ p == p ]]
+compdef:25> type=pattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zftp == *=* ]]
+compdef:79> func=_zftp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zftp
+compdef:81> shift
+compdef:83> case pattern (widgetkey)
+compdef:83> case pattern (key)
+compdef:83> case pattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'zf*' == -N ]]
+compdef:134> [[ 'zf*' == -p ]]
+compdef:136> [[ 'zf*' == -P ]]
+compdef:139> case pattern (pattern)
+compdef:141> [[ 'zf*' == (#b)(*)=(*) ]]
+compdef:144> _patcomps[$1]=_zftp 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zip
+compinit:492> _i_name=_zip 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zip == -[pPkK](n|) ]]
+compinit:503> compdef -na _zip zip unzip zipinfo
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zip == *=* ]]
+compdef:79> func=_zip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ zip == -N ]]
+compdef:134> [[ zip == -p ]]
+compdef:136> [[ zip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zip == *=* ]]
+compdef:159> cmd=zip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ unzip == -N ]]
+compdef:134> [[ unzip == -p ]]
+compdef:136> [[ unzip == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unzip == *=* ]]
+compdef:159> cmd=unzip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zipinfo == -N ]]
+compdef:134> [[ zipinfo == -p ]]
+compdef:136> [[ zipinfo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zipinfo == *=* ]]
+compdef:159> cmd=zipinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zle
+compinit:492> _i_name=_zle 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zle == -[pPkK](n|) ]]
+compinit:503> compdef -na _zle zle
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zle == *=* ]]
+compdef:79> func=_zle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zle == -N ]]
+compdef:134> [[ zle == -p ]]
+compdef:136> [[ zle == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zle == *=* ]]
+compdef:159> cmd=zle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zlogin
+compinit:492> _i_name=_zlogin 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zlogin == -[pPkK](n|) ]]
+compinit:503> compdef -na _zlogin zlogin
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zlogin == *=* ]]
+compdef:79> func=_zlogin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zlogin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zlogin == -N ]]
+compdef:134> [[ zlogin == -p ]]
+compdef:136> [[ zlogin == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zlogin == *=* ]]
+compdef:159> cmd=zlogin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zmodload
+compinit:492> _i_name=_zmodload 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zmodload == -[pPkK](n|) ]]
+compinit:503> compdef -na _zmodload zmodload
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zmodload == *=* ]]
+compdef:79> func=_zmodload 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zmodload
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zmodload == -N ]]
+compdef:134> [[ zmodload == -p ]]
+compdef:136> [[ zmodload == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zmodload == *=* ]]
+compdef:159> cmd=zmodload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmodload 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zmv
+compinit:492> _i_name=_zmv 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zmv == -[pPkK](n|) ]]
+compinit:503> compdef -na _zmv zmv zln zcp
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zmv == *=* ]]
+compdef:79> func=_zmv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zmv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ zmv == -N ]]
+compdef:134> [[ zmv == -p ]]
+compdef:136> [[ zmv == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zmv == *=* ]]
+compdef:159> cmd=zmv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ zln == -N ]]
+compdef:134> [[ zln == -p ]]
+compdef:136> [[ zln == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zln == *=* ]]
+compdef:159> cmd=zln 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zcp == -N ]]
+compdef:134> [[ zcp == -p ]]
+compdef:136> [[ zcp == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zcp == *=* ]]
+compdef:159> cmd=zcp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zoneadm
+compinit:492> _i_name=_zoneadm 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zoneadm == -[pPkK](n|) ]]
+compinit:503> compdef -na _zoneadm zoneadm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zoneadm == *=* ]]
+compdef:79> func=_zoneadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zoneadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zoneadm == -N ]]
+compdef:134> [[ zoneadm == -p ]]
+compdef:136> [[ zoneadm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zoneadm == *=* ]]
+compdef:159> cmd=zoneadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zoneadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zones
+compinit:492> _i_name=_zones 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#autoload' 
+compinit:497> shift _i_line
+compinit:498> case #autoload (\#compdef)
+compinit:498> case #autoload (\#autoload)
+compinit:507> autoload -Uz _zones
+compinit:508> [[ '' != \ # ]]
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zpool
+compinit:492> _i_name=_zpool 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zpool == -[pPkK](n|) ]]
+compinit:503> compdef -na _zpool zpool
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zpool == *=* ]]
+compdef:79> func=_zpool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zpool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zpool == -N ]]
+compdef:134> [[ zpool == -p ]]
+compdef:136> [[ zpool == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zpool == *=* ]]
+compdef:159> cmd=zpool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zpool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zpty
+compinit:492> _i_name=_zpty 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zpty == -[pPkK](n|) ]]
+compinit:503> compdef -na _zpty zpty
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zpty == *=* ]]
+compdef:79> func=_zpty 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zpty
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zpty == -N ]]
+compdef:134> [[ zpty == -p ]]
+compdef:136> [[ zpty == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zpty == *=* ]]
+compdef:159> cmd=zpty 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zpty 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zsh-mime-handler
+compinit:492> _i_name=_zsh-mime-handler 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zsh-mime-handler == -[pPkK](n|) ]]
+compinit:503> compdef -na _zsh-mime-handler zsh-mime-handler
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zsh-mime-handler == *=* ]]
+compdef:79> func=_zsh-mime-handler 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zsh-mime-handler
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zsh-mime-handler == -N ]]
+compdef:134> [[ zsh-mime-handler == -p ]]
+compdef:136> [[ zsh-mime-handler == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zsh-mime-handler == *=* ]]
+compdef:159> cmd=zsh-mime-handler 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zsh-mime-handler 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zstyle
+compinit:492> _i_name=_zstyle 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zstyle == -[pPkK](n|) ]]
+compinit:503> compdef -na _zstyle zstyle
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zstyle == *=* ]]
+compdef:79> func=_zstyle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zstyle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zstyle == -N ]]
+compdef:134> [[ zstyle == -p ]]
+compdef:136> [[ zstyle == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zstyle == *=* ]]
+compdef:159> cmd=zstyle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zstyle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_ztodo
+compinit:492> _i_name=_ztodo 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ ztodo == -[pPkK](n|) ]]
+compinit:503> compdef -na _ztodo ztodo
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ztodo == *=* ]]
+compdef:79> func=_ztodo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ztodo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ztodo == -N ]]
+compdef:134> [[ ztodo == -p ]]
+compdef:136> [[ ztodo == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ztodo == *=* ]]
+compdef:159> cmd=ztodo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ztodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:491> _i_file=/usr/share/zsh/5.0.5/functions/_zypper
+compinit:492> _i_name=_zypper 
+compinit:493> ((  0 + 0  ))
+compinit:494> _i_test[$_i_name]=yes 
+compinit:495> IFS=' 	' +compinit:495> read -rA _i_line
+compinit:496> _i_tag='#compdef' 
+compinit:497> shift _i_line
+compinit:498> case #compdef (\#compdef)
+compinit:500> [[ zypper == -[pPkK](n|) ]]
+compinit:503> compdef -na _zypper zypper
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zypper == *=* ]]
+compdef:79> func=_zypper 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zypper
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zypper == -N ]]
+compdef:134> [[ zypper == -p ]]
+compdef:136> [[ zypper == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zypper == *=* ]]
+compdef:159> cmd=zypper 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zypper 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:516> [[ 1 == 1 ]]
+compinit:517> compdump
+compdump:16> emulate -L zsh
+compdump:17> setopt extendedglob noshglob
+compdump:19> typeset _d_file _d_f _d_bks _d_line _d_als _d_files _d_name _d_tmp
+compdump:21> _d_file='/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5.coopers-Mac-Pro.local.1369' 
+compdump:22> [[ '/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5.coopers-Mac-Pro.local.1369' == //* ]]
+compdump:24> [[ -w /Users/cooperm ]]
+compdump:26> _d_files=( /Users/cooperm/.oh-my-zsh/plugins/github/_github /Users/cooperm/.oh-my-zsh/plugins/heroku/_heroku /Users/cooperm/.oh-my-zsh/plugins/meteor/_meteor /Users/cooperm/.oh-my-zsh/plugins/osx/_man-preview /Users/cooperm/.oh-my-zsh/plugins/gem/_gem /Users/cooperm/.oh-my-zsh/plugins/coffee/_coffee /Users/cooperm/.oh-my-zsh/plugins/git/_git-branch /Users/cooperm/.oh-my-zsh/plugins/git/_git-remote /usr/share/zsh/5.0.5/functions/_SuSEconfig /usr/share/zsh/5.0.5/functions/_a2ps /usr/share/zsh/5.0.5/functions/_a2utils /usr/share/zsh/5.0.5/functions/_aap /usr/share/zsh/5.0.5/functions/_acpi /usr/share/zsh/5.0.5/functions/_acpitool /usr/share/zsh/5.0.5/functions/_acroread /usr/share/zsh/5.0.5/functions/_adb /usr/share/zsh/5.0.5/functions/_alias /usr/share/zsh/5.0.5/functions/_aliases /usr/share/zsh/5.0.5/functions/_all_labels /usr/share/zsh/5.0.5/functions/_all_matches /usr/share/zsh/5.0.5/functions/_alternative /usr/share/zsh/5.0.5/functions/_analyseplugin /usr/share/zsh/5.0.5/functions/_ant /usr/share/zsh/5.0.5/functions/_antiword /usr/share/zsh/5.0.5/functions/_apachectl /usr/share/zsh/5.0.5/functions/_apm /usr/share/zsh/5.0.5/functions/_approximate /usr/share/zsh/5.0.5/functions/_apt /usr/share/zsh/5.0.5/functions/_apt-file /usr/share/zsh/5.0.5/functions/_apt-move /usr/share/zsh/5.0.5/functions/_apt-show-versions /usr/share/zsh/5.0.5/functions/_aptitude /usr/share/zsh/5.0.5/functions/_arch_archives /usr/share/zsh/5.0.5/functions/_arch_namespace /usr/share/zsh/5.0.5/functions/_arg_compile /usr/share/zsh/5.0.5/functions/_arguments /usr/share/zsh/5.0.5/functions/_arp /usr/share/zsh/5.0.5/functions/_arping /usr/share/zsh/5.0.5/functions/_arrays /usr/share/zsh/5.0.5/functions/_assign /usr/share/zsh/5.0.5/functions/_at /usr/share/zsh/5.0.5/functions/_attr /usr/share/zsh/5.0.5/functions/_auto-apt /usr/share/zsh/5.0.5/functions/_autocd /usr/share/zsh/5.0.5/functions/_awk /usr/share/zsh/5.0.5/functions/_axi-cache /usr/share/zsh/5.0.5/functions/_bash_completions /usr/share/zsh/5.0.5/functions/_baz /usr/share/zsh/5.0.5/functions/_be_name /usr/share/zsh/5.0.5/functions/_beadm /usr/share/zsh/5.0.5/functions/_bind_addresses /usr/share/zsh/5.0.5/functions/_bindkey /usr/share/zsh/5.0.5/functions/_bison /usr/share/zsh/5.0.5/functions/_bittorrent /usr/share/zsh/5.0.5/functions/_bogofilter /usr/share/zsh/5.0.5/functions/_brace_parameter /usr/share/zsh/5.0.5/functions/_brctl /usr/share/zsh/5.0.5/functions/_bsd_pkg /usr/share/zsh/5.0.5/functions/_btrfs /usr/share/zsh/5.0.5/functions/_bts /usr/share/zsh/5.0.5/functions/_bug /usr/share/zsh/5.0.5/functions/_builtin /usr/share/zsh/5.0.5/functions/_bzip2 /usr/share/zsh/5.0.5/functions/_bzr /usr/share/zsh/5.0.5/functions/_cache_invalid /usr/share/zsh/5.0.5/functions/_cal /usr/share/zsh/5.0.5/functions/_calendar /usr/share/zsh/5.0.5/functions/_call_function /usr/share/zsh/5.0.5/functions/_call_program /usr/share/zsh/5.0.5/functions/_canonical_paths /usr/share/zsh/5.0.5/functions/_cat /usr/share/zsh/5.0.5/functions/_ccal /usr/share/zsh/5.0.5/functions/_cd /usr/share/zsh/5.0.5/functions/_cdbs-edit-patch /usr/share/zsh/5.0.5/functions/_cdcd /usr/share/zsh/5.0.5/functions/_cdr /usr/share/zsh/5.0.5/functions/_cdrdao /usr/share/zsh/5.0.5/functions/_cdrecord /usr/share/zsh/5.0.5/functions/_chflags /usr/share/zsh/5.0.5/functions/_chkconfig /usr/share/zsh/5.0.5/functions/_chmod /usr/share/zsh/5.0.5/functions/_chown /usr/share/zsh/5.0.5/functions/_chrt /usr/share/zsh/5.0.5/functions/_clay /usr/share/zsh/5.0.5/functions/_combination /usr/share/zsh/5.0.5/functions/_comm /usr/share/zsh/5.0.5/functions/_command /usr/share/zsh/5.0.5/functions/_command_names /usr/share/zsh/5.0.5/functions/_comp_locale /usr/share/zsh/5.0.5/functions/_compdef /usr/share/zsh/5.0.5/functions/_complete /usr/share/zsh/5.0.5/functions/_complete_debug /usr/share/zsh/5.0.5/functions/_complete_help /usr/share/zsh/5.0.5/functions/_complete_help_generic /usr/share/zsh/5.0.5/functions/_complete_tag /usr/share/zsh/5.0.5/functions/_compress /usr/share/zsh/5.0.5/functions/_condition /usr/share/zsh/5.0.5/functions/_configure /usr/share/zsh/5.0.5/functions/_coreadm /usr/share/zsh/5.0.5/functions/_correct /usr/share/zsh/5.0.5/functions/_correct_filename /usr/share/zsh/5.0.5/functions/_correct_word /usr/share/zsh/5.0.5/functions/_cowsay /usr/share/zsh/5.0.5/functions/_cp /usr/share/zsh/5.0.5/functions/_cpio /usr/share/zsh/5.0.5/functions/_cplay /usr/share/zsh/5.0.5/functions/_cryptsetup /usr/share/zsh/5.0.5/functions/_cssh /usr/share/zsh/5.0.5/functions/_csup /usr/share/zsh/5.0.5/functions/_ctags_tags /usr/share/zsh/5.0.5/functions/_cut /usr/share/zsh/5.0.5/functions/_cvs /usr/share/zsh/5.0.5/functions/_cvsup /usr/share/zsh/5.0.5/functions/_cygcheck /usr/share/zsh/5.0.5/functions/_cygpath /usr/share/zsh/5.0.5/functions/_cygrunsrv /usr/share/zsh/5.0.5/functions/_cygserver /usr/share/zsh/5.0.5/functions/_cygstart /usr/share/zsh/5.0.5/functions/_dak /usr/share/zsh/5.0.5/functions/_darcs /usr/share/zsh/5.0.5/functions/_date /usr/share/zsh/5.0.5/functions/_dbus /usr/share/zsh/5.0.5/functions/_dchroot /usr/share/zsh/5.0.5/functions/_dchroot-dsa /usr/share/zsh/5.0.5/functions/_dcop /usr/share/zsh/5.0.5/functions/_dcut /usr/share/zsh/5.0.5/functions/_dd /usr/share/zsh/5.0.5/functions/_deb_packages /usr/share/zsh/5.0.5/functions/_debchange /usr/share/zsh/5.0.5/functions/_debdiff /usr/share/zsh/5.0.5/functions/_debfoster /usr/share/zsh/5.0.5/functions/_debsign /usr/share/zsh/5.0.5/functions/_default /usr/share/zsh/5.0.5/functions/_defaults /usr/share/zsh/5.0.5/functions/_delimiters /usr/share/zsh/5.0.5/functions/_describe /usr/share/zsh/5.0.5/functions/_description /usr/share/zsh/5.0.5/functions/_devtodo /usr/share/zsh/5.0.5/functions/_df /usr/share/zsh/5.0.5/functions/_dhclient /usr/share/zsh/5.0.5/functions/_dhcpinfo /usr/share/zsh/5.0.5/functions/_dict /usr/share/zsh/5.0.5/functions/_dict_words /usr/share/zsh/5.0.5/functions/_diff /usr/share/zsh/5.0.5/functions/_diff_options /usr/share/zsh/5.0.5/functions/_diffstat /usr/share/zsh/5.0.5/functions/_dir_list /usr/share/zsh/5.0.5/functions/_directories /usr/share/zsh/5.0.5/functions/_directory_stack /usr/share/zsh/5.0.5/functions/_dirs /usr/share/zsh/5.0.5/functions/_disable /usr/share/zsh/5.0.5/functions/_dispatch /usr/share/zsh/5.0.5/functions/_django /usr/share/zsh/5.0.5/functions/_dladm /usr/share/zsh/5.0.5/functions/_dlocate /usr/share/zsh/5.0.5/functions/_dmidecode /usr/share/zsh/5.0.5/functions/_domains /usr/share/zsh/5.0.5/functions/_dpatch-edit-patch /usr/share/zsh/5.0.5/functions/_dpkg /usr/share/zsh/5.0.5/functions/_dpkg-buildpackage /usr/share/zsh/5.0.5/functions/_dpkg-cross /usr/share/zsh/5.0.5/functions/_dpkg-repack /usr/share/zsh/5.0.5/functions/_dpkg_source /usr/share/zsh/5.0.5/functions/_dput /usr/share/zsh/5.0.5/functions/_dtrace /usr/share/zsh/5.0.5/functions/_du /usr/share/zsh/5.0.5/functions/_dumpadm /usr/share/zsh/5.0.5/functions/_dumper /usr/share/zsh/5.0.5/functions/_dupload /usr/share/zsh/5.0.5/functions/_dvi /usr/share/zsh/5.0.5/functions/_dynamic_directory_name /usr/share/zsh/5.0.5/functions/_ecasound /usr/share/zsh/5.0.5/functions/_echotc /usr/share/zsh/5.0.5/functions/_echoti /usr/share/zsh/5.0.5/functions/_elinks /usr/share/zsh/5.0.5/functions/_elm /usr/share/zsh/5.0.5/functions/_email_addresses /usr/share/zsh/5.0.5/functions/_emulate /usr/share/zsh/5.0.5/functions/_enable /usr/share/zsh/5.0.5/functions/_enscript /usr/share/zsh/5.0.5/functions/_env /usr/share/zsh/5.0.5/functions/_equal /usr/share/zsh/5.0.5/functions/_espeak /usr/share/zsh/5.0.5/functions/_etags /usr/share/zsh/5.0.5/functions/_ethtool /usr/share/zsh/5.0.5/functions/_expand /usr/share/zsh/5.0.5/functions/_expand_alias /usr/share/zsh/5.0.5/functions/_expand_word /usr/share/zsh/5.0.5/functions/_fakeroot /usr/share/zsh/5.0.5/functions/_fc /usr/share/zsh/5.0.5/functions/_feh /usr/share/zsh/5.0.5/functions/_fetch /usr/share/zsh/5.0.5/functions/_fetchmail /usr/share/zsh/5.0.5/functions/_ffmpeg /usr/share/zsh/5.0.5/functions/_figlet /usr/share/zsh/5.0.5/functions/_file_descriptors /usr/share/zsh/5.0.5/functions/_file_systems /usr/share/zsh/5.0.5/functions/_files /usr/share/zsh/5.0.5/functions/_find /usr/share/zsh/5.0.5/functions/_finger /usr/share/zsh/5.0.5/functions/_fink /usr/share/zsh/5.0.5/functions/_first /usr/share/zsh/5.0.5/functions/_flasher /usr/share/zsh/5.0.5/functions/_flex /usr/share/zsh/5.0.5/functions/_floppy /usr/share/zsh/5.0.5/functions/_flowadm /usr/share/zsh/5.0.5/functions/_fmadm /usr/share/zsh/5.0.5/functions/_fortune /usr/share/zsh/5.0.5/functions/_freebsd-update /usr/share/zsh/5.0.5/functions/_fsh /usr/share/zsh/5.0.5/functions/_fstat /usr/share/zsh/5.0.5/functions/_functions /usr/share/zsh/5.0.5/functions/_fuse_arguments /usr/share/zsh/5.0.5/functions/_fuse_values /usr/share/zsh/5.0.5/functions/_fuser /usr/share/zsh/5.0.5/functions/_fusermount /usr/share/zsh/5.0.5/functions/_gcc /usr/share/zsh/5.0.5/functions/_gcore /usr/share/zsh/5.0.5/functions/_gdb /usr/share/zsh/5.0.5/functions/_generic /usr/share/zsh/5.0.5/functions/_genisoimage /usr/share/zsh/5.0.5/functions/_getclip /usr/share/zsh/5.0.5/functions/_getconf /usr/share/zsh/5.0.5/functions/_getent /usr/share/zsh/5.0.5/functions/_getfacl /usr/share/zsh/5.0.5/functions/_getmail /usr/share/zsh/5.0.5/functions/_git /usr/share/zsh/5.0.5/functions/_git-buildpackage /usr/share/zsh/5.0.5/functions/_global /usr/share/zsh/5.0.5/functions/_global_tags /usr/share/zsh/5.0.5/functions/_globflags /usr/share/zsh/5.0.5/functions/_globqual_delims /usr/share/zsh/5.0.5/functions/_globquals /usr/share/zsh/5.0.5/functions/_gnome-gv /usr/share/zsh/5.0.5/functions/_gnu_generic /usr/share/zsh/5.0.5/functions/_gnupod /usr/share/zsh/5.0.5/functions/_gnutls /usr/share/zsh/5.0.5/functions/_go /usr/share/zsh/5.0.5/functions/_gpg /usr/share/zsh/5.0.5/functions/_gphoto2 /usr/share/zsh/5.0.5/functions/_gprof /usr/share/zsh/5.0.5/functions/_gqview /usr/share/zsh/5.0.5/functions/_gradle /usr/share/zsh/5.0.5/functions/_graphicsmagick /usr/share/zsh/5.0.5/functions/_grep /usr/share/zsh/5.0.5/functions/_grep-excuses /usr/share/zsh/5.0.5/functions/_groff /usr/share/zsh/5.0.5/functions/_groups /usr/share/zsh/5.0.5/functions/_growisofs /usr/share/zsh/5.0.5/functions/_gs /usr/share/zsh/5.0.5/functions/_guard /usr/share/zsh/5.0.5/functions/_guilt /usr/share/zsh/5.0.5/functions/_gv /usr/share/zsh/5.0.5/functions/_gzip /usr/share/zsh/5.0.5/functions/_hash /usr/share/zsh/5.0.5/functions/_have_glob_qual /usr/share/zsh/5.0.5/functions/_hdiutil /usr/share/zsh/5.0.5/functions/_hg /usr/share/zsh/5.0.5/functions/_history /usr/share/zsh/5.0.5/functions/_history_complete_word /usr/share/zsh/5.0.5/functions/_history_modifiers /usr/share/zsh/5.0.5/functions/_hosts /usr/share/zsh/5.0.5/functions/_hwinfo /usr/share/zsh/5.0.5/functions/_iconv /usr/share/zsh/5.0.5/functions/_id /usr/share/zsh/5.0.5/functions/_ifconfig /usr/share/zsh/5.0.5/functions/_iftop /usr/share/zsh/5.0.5/functions/_ignored /usr/share/zsh/5.0.5/functions/_imagemagick /usr/share/zsh/5.0.5/functions/_in_vared /usr/share/zsh/5.0.5/functions/_inetadm /usr/share/zsh/5.0.5/functions/_init_d /usr/share/zsh/5.0.5/functions/_initctl /usr/share/zsh/5.0.5/functions/_invoke-rc.d /usr/share/zsh/5.0.5/functions/_ionice /usr/share/zsh/5.0.5/functions/_ip /usr/share/zsh/5.0.5/functions/_ipadm /usr/share/zsh/5.0.5/functions/_ipset /usr/share/zsh/5.0.5/functions/_iptables /usr/share/zsh/5.0.5/functions/_irssi /usr/share/zsh/5.0.5/functions/_ispell /usr/share/zsh/5.0.5/functions/_iwconfig /usr/share/zsh/5.0.5/functions/_java /usr/share/zsh/5.0.5/functions/_java_class /usr/share/zsh/5.0.5/functions/_jobs /usr/share/zsh/5.0.5/functions/_jobs_bg /usr/share/zsh/5.0.5/functions/_jobs_builtin /usr/share/zsh/5.0.5/functions/_jobs_fg /usr/share/zsh/5.0.5/functions/_joe /usr/share/zsh/5.0.5/functions/_join /usr/share/zsh/5.0.5/functions/_kfmclient /usr/share/zsh/5.0.5/functions/_kill /usr/share/zsh/5.0.5/functions/_killall /usr/share/zsh/5.0.5/functions/_kld /usr/share/zsh/5.0.5/functions/_knock /usr/share/zsh/5.0.5/functions/_kvno /usr/share/zsh/5.0.5/functions/_last /usr/share/zsh/5.0.5/functions/_ldd /usr/share/zsh/5.0.5/functions/_less /usr/share/zsh/5.0.5/functions/_lha /usr/share/zsh/5.0.5/functions/_lighttpd /usr/share/zsh/5.0.5/functions/_limit /usr/share/zsh/5.0.5/functions/_limits /usr/share/zsh/5.0.5/functions/_links /usr/share/zsh/5.0.5/functions/_lintian /usr/share/zsh/5.0.5/functions/_list /usr/share/zsh/5.0.5/functions/_list_files /usr/share/zsh/5.0.5/functions/_ln /usr/share/zsh/5.0.5/functions/_loadkeys /usr/share/zsh/5.0.5/functions/_locales /usr/share/zsh/5.0.5/functions/_locate /usr/share/zsh/5.0.5/functions/_logical_volumes /usr/share/zsh/5.0.5/functions/_look /usr/share/zsh/5.0.5/functions/_losetup /usr/share/zsh/5.0.5/functions/_lp /usr/share/zsh/5.0.5/functions/_ls /usr/share/zsh/5.0.5/functions/_lscfg /usr/share/zsh/5.0.5/functions/_lsdev /usr/share/zsh/5.0.5/functions/_lslv /usr/share/zsh/5.0.5/functions/_lsof /usr/share/zsh/5.0.5/functions/_lspv /usr/share/zsh/5.0.5/functions/_lsusb /usr/share/zsh/5.0.5/functions/_lsvg /usr/share/zsh/5.0.5/functions/_lynx /usr/share/zsh/5.0.5/functions/_lzop /usr/share/zsh/5.0.5/functions/_mac_applications /usr/share/zsh/5.0.5/functions/_mac_files_for_application /usr/share/zsh/5.0.5/functions/_madison /usr/share/zsh/5.0.5/functions/_mail /usr/share/zsh/5.0.5/functions/_mailboxes /usr/share/zsh/5.0.5/functions/_main_complete /usr/share/zsh/5.0.5/functions/_make /usr/share/zsh/5.0.5/functions/_make-kpkg /usr/share/zsh/5.0.5/functions/_man /usr/share/zsh/5.0.5/functions/_match /usr/share/zsh/5.0.5/functions/_math /usr/share/zsh/5.0.5/functions/_math_params /usr/share/zsh/5.0.5/functions/_matlab /usr/share/zsh/5.0.5/functions/_md5sum /usr/share/zsh/5.0.5/functions/_mdadm /usr/share/zsh/5.0.5/functions/_members /usr/share/zsh/5.0.5/functions/_mencal /usr/share/zsh/5.0.5/functions/_menu /usr/share/zsh/5.0.5/functions/_mere /usr/share/zsh/5.0.5/functions/_mergechanges /usr/share/zsh/5.0.5/functions/_message /usr/share/zsh/5.0.5/functions/_metaflac /usr/share/zsh/5.0.5/functions/_mh /usr/share/zsh/5.0.5/functions/_mii-tool /usr/share/zsh/5.0.5/functions/_mime_types /usr/share/zsh/5.0.5/functions/_mkdir /usr/share/zsh/5.0.5/functions/_mkshortcut /usr/share/zsh/5.0.5/functions/_mkzsh /usr/share/zsh/5.0.5/functions/_module /usr/share/zsh/5.0.5/functions/_module-assistant /usr/share/zsh/5.0.5/functions/_module_math_func /usr/share/zsh/5.0.5/functions/_modutils /usr/share/zsh/5.0.5/functions/_mondo /usr/share/zsh/5.0.5/functions/_monotone /usr/share/zsh/5.0.5/functions/_mosh /usr/share/zsh/5.0.5/functions/_most_recent_file /usr/share/zsh/5.0.5/functions/_mount /usr/share/zsh/5.0.5/functions/_mozilla /usr/share/zsh/5.0.5/functions/_mpc /usr/share/zsh/5.0.5/functions/_mplayer /usr/share/zsh/5.0.5/functions/_mt /usr/share/zsh/5.0.5/functions/_mtools /usr/share/zsh/5.0.5/functions/_mtr /usr/share/zsh/5.0.5/functions/_multi_parts /usr/share/zsh/5.0.5/functions/_mutt /usr/share/zsh/5.0.5/functions/_my_accounts /usr/share/zsh/5.0.5/functions/_mysql_utils /usr/share/zsh/5.0.5/functions/_mysqldiff /usr/share/zsh/5.0.5/functions/_nautilus /usr/share/zsh/5.0.5/functions/_ncftp /usr/share/zsh/5.0.5/functions/_nedit /usr/share/zsh/5.0.5/functions/_net_interfaces /usr/share/zsh/5.0.5/functions/_netcat /usr/share/zsh/5.0.5/functions/_netscape /usr/share/zsh/5.0.5/functions/_netstat /usr/share/zsh/5.0.5/functions/_newsgroups /usr/share/zsh/5.0.5/functions/_next_label /usr/share/zsh/5.0.5/functions/_next_tags /usr/share/zsh/5.0.5/functions/_nice /usr/share/zsh/5.0.5/functions/_nkf /usr/share/zsh/5.0.5/functions/_nm /usr/share/zsh/5.0.5/functions/_nmap /usr/share/zsh/5.0.5/functions/_nmcli /usr/share/zsh/5.0.5/functions/_normal /usr/share/zsh/5.0.5/functions/_nothing /usr/share/zsh/5.0.5/functions/_notmuch /usr/share/zsh/5.0.5/functions/_npm /usr/share/zsh/5.0.5/functions/_nslookup /usr/share/zsh/5.0.5/functions/_object_classes /usr/share/zsh/5.0.5/functions/_okular /usr/share/zsh/5.0.5/functions/_oldlist /usr/share/zsh/5.0.5/functions/_open /usr/share/zsh/5.0.5/functions/_options /usr/share/zsh/5.0.5/functions/_options_set /usr/share/zsh/5.0.5/functions/_options_unset /usr/share/zsh/5.0.5/functions/_osc /usr/share/zsh/5.0.5/functions/_other_accounts /usr/share/zsh/5.0.5/functions/_pack /usr/share/zsh/5.0.5/functions/_parameter /usr/share/zsh/5.0.5/functions/_parameters /usr/share/zsh/5.0.5/functions/_patch /usr/share/zsh/5.0.5/functions/_path_commands /usr/share/zsh/5.0.5/functions/_path_files /usr/share/zsh/5.0.5/functions/_pax /usr/share/zsh/5.0.5/functions/_pbm /usr/share/zsh/5.0.5/functions/_pbuilder /usr/share/zsh/5.0.5/functions/_pdf /usr/share/zsh/5.0.5/functions/_pdftk /usr/share/zsh/5.0.5/functions/_perforce /usr/share/zsh/5.0.5/functions/_perl /usr/share/zsh/5.0.5/functions/_perl_basepods /usr/share/zsh/5.0.5/functions/_perl_modules /usr/share/zsh/5.0.5/functions/_perldoc /usr/share/zsh/5.0.5/functions/_pfctl /usr/share/zsh/5.0.5/functions/_pfexec /usr/share/zsh/5.0.5/functions/_pgrep /usr/share/zsh/5.0.5/functions/_php /usr/share/zsh/5.0.5/functions/_physical_volumes /usr/share/zsh/5.0.5/functions/_pick_variant /usr/share/zsh/5.0.5/functions/_pids /usr/share/zsh/5.0.5/functions/_pine /usr/share/zsh/5.0.5/functions/_ping /usr/share/zsh/5.0.5/functions/_piuparts /usr/share/zsh/5.0.5/functions/_pkg-config /usr/share/zsh/5.0.5/functions/_pkg5 /usr/share/zsh/5.0.5/functions/_pkg_instance /usr/share/zsh/5.0.5/functions/_pkgadd /usr/share/zsh/5.0.5/functions/_pkginfo /usr/share/zsh/5.0.5/functions/_pkgrm /usr/share/zsh/5.0.5/functions/_pkgtool /usr/share/zsh/5.0.5/functions/_pon /usr/share/zsh/5.0.5/functions/_portaudit /usr/share/zsh/5.0.5/functions/_portlint /usr/share/zsh/5.0.5/functions/_portmaster /usr/share/zsh/5.0.5/functions/_ports /usr/share/zsh/5.0.5/functions/_portsnap /usr/share/zsh/5.0.5/functions/_postfix /usr/share/zsh/5.0.5/functions/_postscript /usr/share/zsh/5.0.5/functions/_powerd /usr/share/zsh/5.0.5/functions/_prcs /usr/share/zsh/5.0.5/functions/_precommand /usr/share/zsh/5.0.5/functions/_prefix /usr/share/zsh/5.0.5/functions/_print /usr/share/zsh/5.0.5/functions/_printenv /usr/share/zsh/5.0.5/functions/_printers /usr/share/zsh/5.0.5/functions/_procstat /usr/share/zsh/5.0.5/functions/_prompt /usr/share/zsh/5.0.5/functions/_prove /usr/share/zsh/5.0.5/functions/_prstat /usr/share/zsh/5.0.5/functions/_ps /usr/share/zsh/5.0.5/functions/_ps1234 /usr/share/zsh/5.0.5/functions/_pscp /usr/share/zsh/5.0.5/functions/_pspdf /usr/share/zsh/5.0.5/functions/_psutils /usr/share/zsh/5.0.5/functions/_ptree /usr/share/zsh/5.0.5/functions/_pump /usr/share/zsh/5.0.5/functions/_putclip /usr/share/zsh/5.0.5/functions/_pydoc /usr/share/zsh/5.0.5/functions/_python /usr/share/zsh/5.0.5/functions/_qemu /usr/share/zsh/5.0.5/functions/_qiv /usr/share/zsh/5.0.5/functions/_qtplay /usr/share/zsh/5.0.5/functions/_quilt /usr/share/zsh/5.0.5/functions/_raggle /usr/share/zsh/5.0.5/functions/_rake /usr/share/zsh/5.0.5/functions/_ranlib /usr/share/zsh/5.0.5/functions/_rar /usr/share/zsh/5.0.5/functions/_rcs /usr/share/zsh/5.0.5/functions/_read /usr/share/zsh/5.0.5/functions/_read_comp /usr/share/zsh/5.0.5/functions/_readshortcut /usr/share/zsh/5.0.5/functions/_rebootin /usr/share/zsh/5.0.5/functions/_redirect /usr/share/zsh/5.0.5/functions/_regex_arguments /usr/share/zsh/5.0.5/functions/_regex_words /usr/share/zsh/5.0.5/functions/_remote_files /usr/share/zsh/5.0.5/functions/_renice /usr/share/zsh/5.0.5/functions/_reprepro /usr/share/zsh/5.0.5/functions/_requested /usr/share/zsh/5.0.5/functions/_retrieve_cache /usr/share/zsh/5.0.5/functions/_retrieve_mac_apps /usr/share/zsh/5.0.5/functions/_ri /usr/share/zsh/5.0.5/functions/_rlogin /usr/share/zsh/5.0.5/functions/_rm /usr/share/zsh/5.0.5/functions/_rpm /usr/share/zsh/5.0.5/functions/_rpmbuild /usr/share/zsh/5.0.5/functions/_rrdtool /usr/share/zsh/5.0.5/functions/_rsync /usr/share/zsh/5.0.5/functions/_rubber /usr/share/zsh/5.0.5/functions/_ruby /usr/share/zsh/5.0.5/functions/_run-help /usr/share/zsh/5.0.5/functions/_sablotron /usr/share/zsh/5.0.5/functions/_samba /usr/share/zsh/5.0.5/functions/_savecore /usr/share/zsh/5.0.5/functions/_sccs /usr/share/zsh/5.0.5/functions/_sched /usr/share/zsh/5.0.5/functions/_schedtool /usr/share/zsh/5.0.5/functions/_schroot /usr/share/zsh/5.0.5/functions/_screen /usr/share/zsh/5.0.5/functions/_sed /usr/share/zsh/5.0.5/functions/_sep_parts /usr/share/zsh/5.0.5/functions/_service /usr/share/zsh/5.0.5/functions/_services /usr/share/zsh/5.0.5/functions/_set /usr/share/zsh/5.0.5/functions/_set_command /usr/share/zsh/5.0.5/functions/_setfacl /usr/share/zsh/5.0.5/functions/_setopt /usr/share/zsh/5.0.5/functions/_setup /usr/share/zsh/5.0.5/functions/_setxkbmap /usr/share/zsh/5.0.5/functions/_sh /usr/share/zsh/5.0.5/functions/_showmount /usr/share/zsh/5.0.5/functions/_signals /usr/share/zsh/5.0.5/functions/_sisu /usr/share/zsh/5.0.5/functions/_slrn /usr/share/zsh/5.0.5/functions/_smit /usr/share/zsh/5.0.5/functions/_snoop /usr/share/zsh/5.0.5/functions/_socket /usr/share/zsh/5.0.5/functions/_sockstat /usr/share/zsh/5.0.5/functions/_softwareupdate /usr/share/zsh/5.0.5/functions/_sort /usr/share/zsh/5.0.5/functions/_source /usr/share/zsh/5.0.5/functions/_spamassassin /usr/share/zsh/5.0.5/functions/_sqlite /usr/share/zsh/5.0.5/functions/_sqsh /usr/share/zsh/5.0.5/functions/_ssh /usr/share/zsh/5.0.5/functions/_sshfs /usr/share/zsh/5.0.5/functions/_stat /usr/share/zsh/5.0.5/functions/_stgit /usr/share/zsh/5.0.5/functions/_store_cache /usr/share/zsh/5.0.5/functions/_strace /usr/share/zsh/5.0.5/functions/_strip /usr/share/zsh/5.0.5/functions/_stty /usr/share/zsh/5.0.5/functions/_su /usr/share/zsh/5.0.5/functions/_sub_commands /usr/share/zsh/5.0.5/functions/_subscript /usr/share/zsh/5.0.5/functions/_subversion /usr/share/zsh/5.0.5/functions/_sudo /usr/share/zsh/5.0.5/functions/_suffix_alias_files /usr/share/zsh/5.0.5/functions/_surfraw /usr/share/zsh/5.0.5/functions/_svcadm /usr/share/zsh/5.0.5/functions/_svccfg /usr/share/zsh/5.0.5/functions/_svcprop /usr/share/zsh/5.0.5/functions/_svcs /usr/share/zsh/5.0.5/functions/_svcs_fmri /usr/share/zsh/5.0.5/functions/_svn-buildpackage /usr/share/zsh/5.0.5/functions/_sysctl /usr/share/zsh/5.0.5/functions/_systemd /usr/share/zsh/5.0.5/functions/_tags /usr/share/zsh/5.0.5/functions/_tar /usr/share/zsh/5.0.5/functions/_tar_archive /usr/share/zsh/5.0.5/functions/_tardy /usr/share/zsh/5.0.5/functions/_tcpdump /usr/share/zsh/5.0.5/functions/_tcpsys /usr/share/zsh/5.0.5/functions/_tcptraceroute /usr/share/zsh/5.0.5/functions/_telnet /usr/share/zsh/5.0.5/functions/_terminals /usr/share/zsh/5.0.5/functions/_tex /usr/share/zsh/5.0.5/functions/_texi /usr/share/zsh/5.0.5/functions/_texinfo /usr/share/zsh/5.0.5/functions/_tidy /usr/share/zsh/5.0.5/functions/_tiff /usr/share/zsh/5.0.5/functions/_tilde /usr/share/zsh/5.0.5/functions/_tilde_files /usr/share/zsh/5.0.5/functions/_time_zone /usr/share/zsh/5.0.5/functions/_tin /usr/share/zsh/5.0.5/functions/_tla /usr/share/zsh/5.0.5/functions/_tmux /usr/share/zsh/5.0.5/functions/_todo.sh /usr/share/zsh/5.0.5/functions/_toilet /usr/share/zsh/5.0.5/functions/_toolchain-source /usr/share/zsh/5.0.5/functions/_topgit /usr/share/zsh/5.0.5/functions/_totd /usr/share/zsh/5.0.5/functions/_tpb /usr/share/zsh/5.0.5/functions/_tpconfig /usr/share/zsh/5.0.5/functions/_tracepath /usr/share/zsh/5.0.5/functions/_trap /usr/share/zsh/5.0.5/functions/_tree /usr/share/zsh/5.0.5/functions/_ttyctl /usr/share/zsh/5.0.5/functions/_tune2fs /usr/share/zsh/5.0.5/functions/_twidge /usr/share/zsh/5.0.5/functions/_twisted /usr/share/zsh/5.0.5/functions/_typeset /usr/share/zsh/5.0.5/functions/_ulimit /usr/share/zsh/5.0.5/functions/_uml /usr/share/zsh/5.0.5/functions/_unace /usr/share/zsh/5.0.5/functions/_uname /usr/share/zsh/5.0.5/functions/_unexpand /usr/share/zsh/5.0.5/functions/_unhash /usr/share/zsh/5.0.5/functions/_uniq /usr/share/zsh/5.0.5/functions/_unison /usr/share/zsh/5.0.5/functions/_units /usr/share/zsh/5.0.5/functions/_unsetopt /usr/share/zsh/5.0.5/functions/_update-alternatives /usr/share/zsh/5.0.5/functions/_update-rc.d /usr/share/zsh/5.0.5/functions/_urls /usr/share/zsh/5.0.5/functions/_urpmi /usr/share/zsh/5.0.5/functions/_urxvt /usr/share/zsh/5.0.5/functions/_uscan /usr/share/zsh/5.0.5/functions/_user_admin /usr/share/zsh/5.0.5/functions/_user_at_host /usr/share/zsh/5.0.5/functions/_user_expand /usr/share/zsh/5.0.5/functions/_user_math_func /usr/share/zsh/5.0.5/functions/_users /usr/share/zsh/5.0.5/functions/_users_on /usr/share/zsh/5.0.5/functions/_uzbl /usr/share/zsh/5.0.5/functions/_valgrind /usr/share/zsh/5.0.5/functions/_value /usr/share/zsh/5.0.5/functions/_values /usr/share/zsh/5.0.5/functions/_vared /usr/share/zsh/5.0.5/functions/_vars /usr/share/zsh/5.0.5/functions/_vcsh /usr/share/zsh/5.0.5/functions/_vim /usr/share/zsh/5.0.5/functions/_vim-addons /usr/share/zsh/5.0.5/functions/_vnc /usr/share/zsh/5.0.5/functions/_volume_groups /usr/share/zsh/5.0.5/functions/_vorbis /usr/share/zsh/5.0.5/functions/_vorbiscomment /usr/share/zsh/5.0.5/functions/_vserver /usr/share/zsh/5.0.5/functions/_vux /usr/share/zsh/5.0.5/functions/_w3m /usr/share/zsh/5.0.5/functions/_wait /usr/share/zsh/5.0.5/functions/_wajig /usr/share/zsh/5.0.5/functions/_wakeup_capable_devices /usr/share/zsh/5.0.5/functions/_wanna-build /usr/share/zsh/5.0.5/functions/_wanted /usr/share/zsh/5.0.5/functions/_webbrowser /usr/share/zsh/5.0.5/functions/_wget /usr/share/zsh/5.0.5/functions/_whereis /usr/share/zsh/5.0.5/functions/_which /usr/share/zsh/5.0.5/functions/_whois /usr/share/zsh/5.0.5/functions/_wiggle /usr/share/zsh/5.0.5/functions/_wpa_cli /usr/share/zsh/5.0.5/functions/_x_arguments /usr/share/zsh/5.0.5/functions/_x_borderwidth /usr/share/zsh/5.0.5/functions/_x_color /usr/share/zsh/5.0.5/functions/_x_colormapid /usr/share/zsh/5.0.5/functions/_x_cursor /usr/share/zsh/5.0.5/functions/_x_display /usr/share/zsh/5.0.5/functions/_x_extension /usr/share/zsh/5.0.5/functions/_x_font /usr/share/zsh/5.0.5/functions/_x_geometry /usr/share/zsh/5.0.5/functions/_x_keysym /usr/share/zsh/5.0.5/functions/_x_locale /usr/share/zsh/5.0.5/functions/_x_modifier /usr/share/zsh/5.0.5/functions/_x_name /usr/share/zsh/5.0.5/functions/_x_resource /usr/share/zsh/5.0.5/functions/_x_selection_timeout /usr/share/zsh/5.0.5/functions/_x_title /usr/share/zsh/5.0.5/functions/_x_utils /usr/share/zsh/5.0.5/functions/_x_visual /usr/share/zsh/5.0.5/functions/_x_window /usr/share/zsh/5.0.5/functions/_xargs /usr/share/zsh/5.0.5/functions/_xauth /usr/share/zsh/5.0.5/functions/_xclip /usr/share/zsh/5.0.5/functions/_xdvi /usr/share/zsh/5.0.5/functions/_xfig /usr/share/zsh/5.0.5/functions/_xft_fonts /usr/share/zsh/5.0.5/functions/_xloadimage /usr/share/zsh/5.0.5/functions/_xmlsoft /usr/share/zsh/5.0.5/functions/_xmms2 /usr/share/zsh/5.0.5/functions/_xmodmap /usr/share/zsh/5.0.5/functions/_xournal /usr/share/zsh/5.0.5/functions/_xpdf /usr/share/zsh/5.0.5/functions/_xrandr /usr/share/zsh/5.0.5/functions/_xscreensaver /usr/share/zsh/5.0.5/functions/_xset /usr/share/zsh/5.0.5/functions/_xt_arguments /usr/share/zsh/5.0.5/functions/_xt_session_id /usr/share/zsh/5.0.5/functions/_xterm /usr/share/zsh/5.0.5/functions/_xv /usr/share/zsh/5.0.5/functions/_xwit /usr/share/zsh/5.0.5/functions/_xz /usr/share/zsh/5.0.5/functions/_yafc /usr/share/zsh/5.0.5/functions/_yast /usr/share/zsh/5.0.5/functions/_yast2 /usr/share/zsh/5.0.5/functions/_yodl /usr/share/zsh/5.0.5/functions/_yp /usr/share/zsh/5.0.5/functions/_yum /usr/share/zsh/5.0.5/functions/_zargs /usr/share/zsh/5.0.5/functions/_zattr /usr/share/zsh/5.0.5/functions/_zcalc_line /usr/share/zsh/5.0.5/functions/_zcat /usr/share/zsh/5.0.5/functions/_zcompile /usr/share/zsh/5.0.5/functions/_zdump /usr/share/zsh/5.0.5/functions/_zed /usr/share/zsh/5.0.5/functions/_zfs /usr/share/zsh/5.0.5/functions/_zfs_dataset /usr/share/zsh/5.0.5/functions/_zfs_keysource_props /usr/share/zsh/5.0.5/functions/_zfs_pool /usr/share/zsh/5.0.5/functions/_zftp /usr/share/zsh/5.0.5/functions/_zip /usr/share/zsh/5.0.5/functions/_zle /usr/share/zsh/5.0.5/functions/_zlogin /usr/share/zsh/5.0.5/functions/_zmodload /usr/share/zsh/5.0.5/functions/_zmv /usr/share/zsh/5.0.5/functions/_zoneadm /usr/share/zsh/5.0.5/functions/_zones /usr/share/zsh/5.0.5/functions/_zpool /usr/share/zsh/5.0.5/functions/_zpty /usr/share/zsh/5.0.5/functions/_zsh-mime-handler /usr/share/zsh/5.0.5/functions/_zstyle /usr/share/zsh/5.0.5/functions/_ztodo /usr/share/zsh/5.0.5/functions/_zypper ) 
+compdump:28> [[ -n '' ]]
+compdump:36> print '#files: 708\tversion: 5.0.5'
+compdump:42> print '\n_comps=('
+compdump:43> _d_f=-
+compdump:44> print -r - \''-'\' \''_precommand'\'
+compdump:43> _d_f=-array-value-
+compdump:44> print -r - \''-array-value-'\' \''_value'\'
+compdump:43> _d_f=-assign-parameter-
+compdump:44> print -r - \''-assign-parameter-'\' \''_assign'\'
+compdump:43> _d_f=-brace-parameter-
+compdump:44> print -r - \''-brace-parameter-'\' \''_brace_parameter'\'
+compdump:43> _d_f=-command-
+compdump:44> print -r - \''-command-'\' \''_autocd'\'
+compdump:43> _d_f=-command-line-
+compdump:44> print -r - \''-command-line-'\' \''_normal'\'
+compdump:43> _d_f=-condition-
+compdump:44> print -r - \''-condition-'\' \''_condition'\'
+compdump:43> _d_f=-default-
+compdump:44> print -r - \''-default-'\' \''_default'\'
+compdump:43> _d_f=-equal-
+compdump:44> print -r - \''-equal-'\' \''_equal'\'
+compdump:43> _d_f=-first-
+compdump:44> print -r - \''-first-'\' \''_first'\'
+compdump:43> _d_f=-math-
+compdump:44> print -r - \''-math-'\' \''_math'\'
+compdump:43> _d_f=-parameter-
+compdump:44> print -r - \''-parameter-'\' \''_parameter'\'
+compdump:43> _d_f=-redirect-
+compdump:44> print -r - \''-redirect-'\' \''_redirect'\'
+compdump:43> _d_f=-redirect-,-default-,-default-
+compdump:44> print -r - \''-redirect-,-default-,-default-'\' \''_files'\'
+compdump:43> _d_f=-redirect-,<,bunzip2
+compdump:44> print -r - \''-redirect-,<,bunzip2'\' \''_bzip2'\'
+compdump:43> _d_f=-redirect-,<,bzip2
+compdump:44> print -r - \''-redirect-,<,bzip2'\' \''_bzip2'\'
+compdump:43> _d_f=-redirect-,<,compress
+compdump:44> print -r - \''-redirect-,<,compress'\' \''_compress'\'
+compdump:43> _d_f=-redirect-,<,gunzip
+compdump:44> print -r - \''-redirect-,<,gunzip'\' \''_gzip'\'
+compdump:43> _d_f=-redirect-,<,gzip
+compdump:44> print -r - \''-redirect-,<,gzip'\' \''_gzip'\'
+compdump:43> _d_f=-redirect-,<,uncompress
+compdump:44> print -r - \''-redirect-,<,uncompress'\' \''_compress'\'
+compdump:43> _d_f=-redirect-,<,unxz
+compdump:44> print -r - \''-redirect-,<,unxz'\' \''_xz'\'
+compdump:43> _d_f=-redirect-,<,xz
+compdump:44> print -r - \''-redirect-,<,xz'\' \''_xz'\'
+compdump:43> _d_f=-redirect-,>,bzip2
+compdump:44> print -r - \''-redirect-,>,bzip2'\' \''_bzip2'\'
+compdump:43> _d_f=-redirect-,>,compress
+compdump:44> print -r - \''-redirect-,>,compress'\' \''_compress'\'
+compdump:43> _d_f=-redirect-,>,gzip
+compdump:44> print -r - \''-redirect-,>,gzip'\' \''_gzip'\'
+compdump:43> _d_f=-redirect-,>,xz
+compdump:44> print -r - \''-redirect-,>,xz'\' \''_xz'\'
+compdump:43> _d_f=-subscript-
+compdump:44> print -r - \''-subscript-'\' \''_subscript'\'
+compdump:43> _d_f=-tilde-
+compdump:44> print -r - \''-tilde-'\' \''_tilde'\'
+compdump:43> _d_f=-value-
+compdump:44> print -r - \''-value-'\' \''_value'\'
+compdump:43> _d_f=-value-,-default-,-command-
+compdump:44> print -r - \''-value-,-default-,-command-'\' \''_zargs'\'
+compdump:43> _d_f=-value-,-default-,-default-
+compdump:44> print -r - \''-value-,-default-,-default-'\' \''_value'\'
+compdump:43> _d_f=-value-,ADB_TRACE,-default-
+compdump:44> print -r - \''-value-,ADB_TRACE,-default-'\' \''_adb'\'
+compdump:43> _d_f=-value-,ANDROID_LOG_TAGS,-default-
+compdump:44> print -r - \''-value-,ANDROID_LOG_TAGS,-default-'\' \''_adb'\'
+compdump:43> _d_f=-value-,ANDROID_SERIAL,-default-
+compdump:44> print -r - \''-value-,ANDROID_SERIAL,-default-'\' \''_adb'\'
+compdump:43> _d_f=-value-,ANT_ARGS,-default-
+compdump:44> print -r - \''-value-,ANT_ARGS,-default-'\' \''_ant'\'
+compdump:43> _d_f=-value-,CFLAGS,-default-
+compdump:44> print -r - \''-value-,CFLAGS,-default-'\' \''_gcc'\'
+compdump:43> _d_f=-value-,CPPFLAGS,-default-
+compdump:44> print -r - \''-value-,CPPFLAGS,-default-'\' \''_gcc'\'
+compdump:43> _d_f=-value-,DISPLAY,-default-
+compdump:44> print -r - \''-value-,DISPLAY,-default-'\' \''_x_display'\'
+compdump:43> _d_f=-value-,GREP_OPTIONS,-default-
+compdump:44> print -r - \''-value-,GREP_OPTIONS,-default-'\' \''_grep'\'
+compdump:43> _d_f=-value-,GZIP,-default-
+compdump:44> print -r - \''-value-,GZIP,-default-'\' \''_gzip'\'
+compdump:43> _d_f=-value-,LANG,-default-
+compdump:44> print -r - \''-value-,LANG,-default-'\' \''_locales'\'
+compdump:43> _d_f=-value-,LANGUAGE,-default-
+compdump:44> print -r - \''-value-,LANGUAGE,-default-'\' \''_locales'\'
+compdump:43> _d_f=-value-,LDFLAGS,-default-
+compdump:44> print -r - \''-value-,LDFLAGS,-default-'\' \''_gcc'\'
+compdump:43> _d_f=-value-,LESS,-default-
+compdump:44> print -r - \''-value-,LESS,-default-'\' \''_less'\'
+compdump:43> _d_f=-value-,LESSCHARSET,-default-
+compdump:44> print -r - \''-value-,LESSCHARSET,-default-'\' \''_less'\'
+compdump:43> _d_f=-value-,LPDEST,-default-
+compdump:44> print -r - \''-value-,LPDEST,-default-'\' \''_printers'\'
+compdump:43> _d_f=-value-,P4CLIENT,-default-
+compdump:44> print -r - \''-value-,P4CLIENT,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,P4MERGE,-default-
+compdump:44> print -r - \''-value-,P4MERGE,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,P4PORT,-default-
+compdump:44> print -r - \''-value-,P4PORT,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,P4USER,-default-
+compdump:44> print -r - \''-value-,P4USER,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,PERLDOC,-default-
+compdump:44> print -r - \''-value-,PERLDOC,-default-'\' \''_perldoc'\'
+compdump:43> _d_f=-value-,PRINTER,-default-
+compdump:44> print -r - \''-value-,PRINTER,-default-'\' \''_printers'\'
+compdump:43> _d_f=-value-,PROMPT,-default-
+compdump:44> print -r - \''-value-,PROMPT,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PROMPT2,-default-
+compdump:44> print -r - \''-value-,PROMPT2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PROMPT3,-default-
+compdump:44> print -r - \''-value-,PROMPT3,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PROMPT4,-default-
+compdump:44> print -r - \''-value-,PROMPT4,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS1,-default-
+compdump:44> print -r - \''-value-,PS1,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS2,-default-
+compdump:44> print -r - \''-value-,PS2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS3,-default-
+compdump:44> print -r - \''-value-,PS3,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS4,-default-
+compdump:44> print -r - \''-value-,PS4,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPROMPT,-default-
+compdump:44> print -r - \''-value-,RPROMPT,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPROMPT2,-default-
+compdump:44> print -r - \''-value-,RPROMPT2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPS1,-default-
+compdump:44> print -r - \''-value-,RPS1,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPS2,-default-
+compdump:44> print -r - \''-value-,RPS2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,SPROMPT,-default-
+compdump:44> print -r - \''-value-,SPROMPT,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,TERM,-default-
+compdump:44> print -r - \''-value-,TERM,-default-'\' \''_terminals'\'
+compdump:43> _d_f=-value-,TERMINFO_DIRS,-default-
+compdump:44> print -r - \''-value-,TERMINFO_DIRS,-default-'\' \''_dir_list'\'
+compdump:43> _d_f=-value-,TZ,-default-
+compdump:44> print -r - \''-value-,TZ,-default-'\' \''_time_zone'\'
+compdump:43> _d_f=-value-,VALGRIND_OPTS,-default-
+compdump:44> print -r - \''-value-,VALGRIND_OPTS,-default-'\' \''_valgrind'\'
+compdump:43> _d_f=-value-,WWW_HOME,-default-
+compdump:44> print -r - \''-value-,WWW_HOME,-default-'\' \''_urls'\'
+compdump:43> _d_f=-value-,XML_CATALOG_FILES,-default-
+compdump:44> print -r - \''-value-,XML_CATALOG_FILES,-default-'\' \''_xmlsoft'\'
+compdump:43> _d_f=-value-,XZ_DEFAULTS,-default-
+compdump:44> print -r - \''-value-,XZ_DEFAULTS,-default-'\' \''_xz'\'
+compdump:43> _d_f=-value-,XZ_OPT,-default-
+compdump:44> print -r - \''-value-,XZ_OPT,-default-'\' \''_xz'\'
+compdump:43> _d_f=-vared-
+compdump:44> print -r - \''-vared-'\' \''_in_vared'\'
+compdump:43> _d_f=-zcalc-line-
+compdump:44> print -r - \''-zcalc-line-'\' \''_zcalc_line'\'
+compdump:43> _d_f=.
+compdump:44> print -r - \''.'\' \''_source'\'
+compdump:43> _d_f=5g
+compdump:44> print -r - \''5g'\' \''_go'\'
+compdump:43> _d_f=5l
+compdump:44> print -r - \''5l'\' \''_go'\'
+compdump:43> _d_f=6g
+compdump:44> print -r - \''6g'\' \''_go'\'
+compdump:43> _d_f=6l
+compdump:44> print -r - \''6l'\' \''_go'\'
+compdump:43> _d_f=8g
+compdump:44> print -r - \''8g'\' \''_go'\'
+compdump:43> _d_f=8l
+compdump:44> print -r - \''8l'\' \''_go'\'
+compdump:43> _d_f=Mail
+compdump:44> print -r - \''Mail'\' \''_mail'\'
+compdump:43> _d_f=Mosaic
+compdump:44> print -r - \''Mosaic'\' \''_webbrowser'\'
+compdump:43> _d_f=SuSEconfig
+compdump:44> print -r - \''SuSEconfig'\' \''_SuSEconfig'\'
+compdump:43> _d_f=a2dismod
+compdump:44> print -r - \''a2dismod'\' \''_a2utils'\'
+compdump:43> _d_f=a2dissite
+compdump:44> print -r - \''a2dissite'\' \''_a2utils'\'
+compdump:43> _d_f=a2enmod
+compdump:44> print -r - \''a2enmod'\' \''_a2utils'\'
+compdump:43> _d_f=a2ensite
+compdump:44> print -r - \''a2ensite'\' \''_a2utils'\'
+compdump:43> _d_f=a2ps
+compdump:44> print -r - \''a2ps'\' \''_a2ps'\'
+compdump:43> _d_f=aaaa
+compdump:44> print -r - \''aaaa'\' \''_hosts'\'
+compdump:43> _d_f=aap
+compdump:44> print -r - \''aap'\' \''_aap'\'
+compdump:43> _d_f=acpi
+compdump:44> print -r - \''acpi'\' \''_acpi'\'
+compdump:43> _d_f=acpitool
+compdump:44> print -r - \''acpitool'\' \''_acpitool'\'
+compdump:43> _d_f=acroread
+compdump:44> print -r - \''acroread'\' \''_acroread'\'
+compdump:43> _d_f=adb
+compdump:44> print -r - \''adb'\' \''_adb'\'
+compdump:43> _d_f=admin
+compdump:44> print -r - \''admin'\' \''_sccs'\'
+compdump:43> _d_f=ali
+compdump:44> print -r - \''ali'\' \''_mh'\'
+compdump:43> _d_f=alias
+compdump:44> print -r - \''alias'\' \''_alias'\'
+compdump:43> _d_f=amaya
+compdump:44> print -r - \''amaya'\' \''_webbrowser'\'
+compdump:43> _d_f=analyseplugin
+compdump:44> print -r - \''analyseplugin'\' \''_analyseplugin'\'
+compdump:43> _d_f=animate
+compdump:44> print -r - \''animate'\' \''_imagemagick'\'
+compdump:43> _d_f=anno
+compdump:44> print -r - \''anno'\' \''_mh'\'
+compdump:43> _d_f=ant
+compdump:44> print -r - \''ant'\' \''_ant'\'
+compdump:43> _d_f=antiword
+compdump:44> print -r - \''antiword'\' \''_antiword'\'
+compdump:43> _d_f=aoss
+compdump:44> print -r - \''aoss'\' \''_precommand'\'
+compdump:43> _d_f=apache2ctl
+compdump:44> print -r - \''apache2ctl'\' \''_apachectl'\'
+compdump:43> _d_f=apachectl
+compdump:44> print -r - \''apachectl'\' \''_apachectl'\'
+compdump:43> _d_f=apm
+compdump:44> print -r - \''apm'\' \''_apm'\'
+compdump:43> _d_f=appletviewer
+compdump:44> print -r - \''appletviewer'\' \''_java'\'
+compdump:43> _d_f=apropos
+compdump:44> print -r - \''apropos'\' \''_man'\'
+compdump:43> _d_f=apt-cache
+compdump:44> print -r - \''apt-cache'\' \''_apt'\'
+compdump:43> _d_f=apt-cdrom
+compdump:44> print -r - \''apt-cdrom'\' \''_apt'\'
+compdump:43> _d_f=apt-config
+compdump:44> print -r - \''apt-config'\' \''_apt'\'
+compdump:43> _d_f=apt-file
+compdump:44> print -r - \''apt-file'\' \''_apt-file'\'
+compdump:43> _d_f=apt-get
+compdump:44> print -r - \''apt-get'\' \''_apt'\'
+compdump:43> _d_f=apt-move
+compdump:44> print -r - \''apt-move'\' \''_apt-move'\'
+compdump:43> _d_f=apt-show-versions
+compdump:44> print -r - \''apt-show-versions'\' \''_apt-show-versions'\'
+compdump:43> _d_f=aptitude
+compdump:44> print -r - \''aptitude'\' \''_aptitude'\'
+compdump:43> _d_f=apvlv
+compdump:44> print -r - \''apvlv'\' \''_pdf'\'
+compdump:43> _d_f=arena
+compdump:44> print -r - \''arena'\' \''_webbrowser'\'
+compdump:43> _d_f=arp
+compdump:44> print -r - \''arp'\' \''_arp'\'
+compdump:43> _d_f=arping
+compdump:44> print -r - \''arping'\' \''_arping'\'
+compdump:43> _d_f=at
+compdump:44> print -r - \''at'\' \''_at'\'
+compdump:43> _d_f=atq
+compdump:44> print -r - \''atq'\' \''_at'\'
+compdump:43> _d_f=atrm
+compdump:44> print -r - \''atrm'\' \''_at'\'
+compdump:43> _d_f=attr
+compdump:44> print -r - \''attr'\' \''_attr'\'
+compdump:43> _d_f=auto-apt
+compdump:44> print -r - \''auto-apt'\' \''_auto-apt'\'
+compdump:43> _d_f=autoload
+compdump:44> print -r - \''autoload'\' \''_typeset'\'
+compdump:43> _d_f=awk
+compdump:44> print -r - \''awk'\' \''_awk'\'
+compdump:43> _d_f=axi-cache
+compdump:44> print -r - \''axi-cache'\' \''_axi-cache'\'
+compdump:43> _d_f=bash
+compdump:44> print -r - \''bash'\' \''_sh'\'
+compdump:43> _d_f=batch
+compdump:44> print -r - \''batch'\' \''_at'\'
+compdump:43> _d_f=baz
+compdump:44> print -r - \''baz'\' \''_baz'\'
+compdump:43> _d_f=beadm
+compdump:44> print -r - \''beadm'\' \''_beadm'\'
+compdump:43> _d_f=bg
+compdump:44> print -r - \''bg'\' \''_jobs_bg'\'
+compdump:43> _d_f=bindkey
+compdump:44> print -r - \''bindkey'\' \''_bindkey'\'
+compdump:43> _d_f=bison
+compdump:44> print -r - \''bison'\' \''_bison'\'
+compdump:43> _d_f=bmake
+compdump:44> print -r - \''bmake'\' \''_make'\'
+compdump:43> _d_f=bogofilter
+compdump:44> print -r - \''bogofilter'\' \''_bogofilter'\'
+compdump:43> _d_f=bogotune
+compdump:44> print -r - \''bogotune'\' \''_bogofilter'\'
+compdump:43> _d_f=bogoutil
+compdump:44> print -r - \''bogoutil'\' \''_bogofilter'\'
+compdump:43> _d_f=brctl
+compdump:44> print -r - \''brctl'\' \''_brctl'\'
+compdump:43> _d_f=btdownloadcurses
+compdump:44> print -r - \''btdownloadcurses'\' \''_bittorrent'\'
+compdump:43> _d_f=btdownloadgui
+compdump:44> print -r - \''btdownloadgui'\' \''_bittorrent'\'
+compdump:43> _d_f=btdownloadheadless
+compdump:44> print -r - \''btdownloadheadless'\' \''_bittorrent'\'
+compdump:43> _d_f=btlaunchmany
+compdump:44> print -r - \''btlaunchmany'\' \''_bittorrent'\'
+compdump:43> _d_f=btlaunchmanycurses
+compdump:44> print -r - \''btlaunchmanycurses'\' \''_bittorrent'\'
+compdump:43> _d_f=btmakemetafile
+compdump:44> print -r - \''btmakemetafile'\' \''_bittorrent'\'
+compdump:43> _d_f=btreannounce
+compdump:44> print -r - \''btreannounce'\' \''_bittorrent'\'
+compdump:43> _d_f=btrename
+compdump:44> print -r - \''btrename'\' \''_bittorrent'\'
+compdump:43> _d_f=btrfs
+compdump:44> print -r - \''btrfs'\' \''_btrfs'\'
+compdump:43> _d_f=bts
+compdump:44> print -r - \''bts'\' \''_bts'\'
+compdump:43> _d_f=btshowmetainfo
+compdump:44> print -r - \''btshowmetainfo'\' \''_bittorrent'\'
+compdump:43> _d_f=bttrack
+compdump:44> print -r - \''bttrack'\' \''_bittorrent'\'
+compdump:43> _d_f=bug
+compdump:44> print -r - \''bug'\' \''_bug'\'
+compdump:43> _d_f=buildhash
+compdump:44> print -r - \''buildhash'\' \''_ispell'\'
+compdump:43> _d_f=builtin
+compdump:44> print -r - \''builtin'\' \''_builtin'\'
+compdump:43> _d_f=bunzip2
+compdump:44> print -r - \''bunzip2'\' \''_bzip2'\'
+compdump:43> _d_f=burst
+compdump:44> print -r - \''burst'\' \''_mh'\'
+compdump:43> _d_f=bzcat
+compdump:44> print -r - \''bzcat'\' \''_bzip2'\'
+compdump:43> _d_f=bzip2
+compdump:44> print -r - \''bzip2'\' \''_bzip2'\'
+compdump:43> _d_f=bzip2recover
+compdump:44> print -r - \''bzip2recover'\' \''_bzip2'\'
+compdump:43> _d_f=bzr
+compdump:44> print -r - \''bzr'\' \''_bzr'\'
+compdump:43> _d_f=c++
+compdump:44> print -r - \''c++'\' \''_gcc'\'
+compdump:43> _d_f=cal
+compdump:44> print -r - \''cal'\' \''_cal'\'
+compdump:43> _d_f=calendar
+compdump:44> print -r - \''calendar'\' \''_calendar'\'
+compdump:43> _d_f=cat
+compdump:44> print -r - \''cat'\' \''_cat'\'
+compdump:43> _d_f=catchsegv
+compdump:44> print -r - \''catchsegv'\' \''_precommand'\'
+compdump:43> _d_f=cc
+compdump:44> print -r - \''cc'\' \''_gcc'\'
+compdump:43> _d_f=ccal
+compdump:44> print -r - \''ccal'\' \''_ccal'\'
+compdump:43> _d_f=cd
+compdump:44> print -r - \''cd'\' \''_cd'\'
+compdump:43> _d_f=cdbs-edit-patch
+compdump:44> print -r - \''cdbs-edit-patch'\' \''_cdbs-edit-patch'\'
+compdump:43> _d_f=cdc
+compdump:44> print -r - \''cdc'\' \''_sccs'\'
+compdump:43> _d_f=cdcd
+compdump:44> print -r - \''cdcd'\' \''_cdcd'\'
+compdump:43> _d_f=cdr
+compdump:44> print -r - \''cdr'\' \''_cdr'\'
+compdump:43> _d_f=cdrdao
+compdump:44> print -r - \''cdrdao'\' \''_cdrdao'\'
+compdump:43> _d_f=cdrecord
+compdump:44> print -r - \''cdrecord'\' \''_cdrecord'\'
+compdump:43> _d_f=certtool
+compdump:44> print -r - \''certtool'\' \''_gnutls'\'
+compdump:43> _d_f=cftp
+compdump:44> print -r - \''cftp'\' \''_twisted'\'
+compdump:43> _d_f=chage
+compdump:44> print -r - \''chage'\' \''_users'\'
+compdump:43> _d_f=chdir
+compdump:44> print -r - \''chdir'\' \''_cd'\'
+compdump:43> _d_f=chflags
+compdump:44> print -r - \''chflags'\' \''_chflags'\'
+compdump:43> _d_f=chfn
+compdump:44> print -r - \''chfn'\' \''_users'\'
+compdump:43> _d_f=chgrp
+compdump:44> print -r - \''chgrp'\' \''_chown'\'
+compdump:43> _d_f=chimera
+compdump:44> print -r - \''chimera'\' \''_webbrowser'\'
+compdump:43> _d_f=chkconfig
+compdump:44> print -r - \''chkconfig'\' \''_chkconfig'\'
+compdump:43> _d_f=chmod
+compdump:44> print -r - \''chmod'\' \''_chmod'\'
+compdump:43> _d_f=chown
+compdump:44> print -r - \''chown'\' \''_chown'\'
+compdump:43> _d_f=chrt
+compdump:44> print -r - \''chrt'\' \''_chrt'\'
+compdump:43> _d_f=chsh
+compdump:44> print -r - \''chsh'\' \''_users'\'
+compdump:43> _d_f=ci
+compdump:44> print -r - \''ci'\' \''_rcs'\'
+compdump:43> _d_f=ckeygen
+compdump:44> print -r - \''ckeygen'\' \''_twisted'\'
+compdump:43> _d_f=clang
+compdump:44> print -r - \''clang'\' \''_gcc'\'
+compdump:43> _d_f=clang++
+compdump:44> print -r - \''clang++'\' \''_gcc'\'
+compdump:43> _d_f=clay
+compdump:44> print -r - \''clay'\' \''_clay'\'
+compdump:43> _d_f=clear
+compdump:44> print -r - \''clear'\' \''_nothing'\'
+compdump:43> _d_f=co
+compdump:44> print -r - \''co'\' \''_rcs'\'
+compdump:43> _d_f=coffee
+compdump:44> print -r - \''coffee'\' \''_coffee'\'
+compdump:43> _d_f=comb
+compdump:44> print -r - \''comb'\' \''_sccs'\'
+compdump:43> _d_f=combine
+compdump:44> print -r - \''combine'\' \''_imagemagick'\'
+compdump:43> _d_f=comm
+compdump:44> print -r - \''comm'\' \''_comm'\'
+compdump:43> _d_f=command
+compdump:44> print -r - \''command'\' \''_command'\'
+compdump:43> _d_f=comp
+compdump:44> print -r - \''comp'\' \''_mh'\'
+compdump:43> _d_f=compdef
+compdump:44> print -r - \''compdef'\' \''_compdef'\'
+compdump:43> _d_f=composite
+compdump:44> print -r - \''composite'\' \''_imagemagick'\'
+compdump:43> _d_f=compress
+compdump:44> print -r - \''compress'\' \''_compress'\'
+compdump:43> _d_f=conch
+compdump:44> print -r - \''conch'\' \''_twisted'\'
+compdump:43> _d_f=config.status
+compdump:44> print -r - \''config.status'\' \''_configure'\'
+compdump:43> _d_f=configure
+compdump:44> print -r - \''configure'\' \''_configure'\'
+compdump:43> _d_f=convert
+compdump:44> print -r - \''convert'\' \''_imagemagick'\'
+compdump:43> _d_f=coreadm
+compdump:44> print -r - \''coreadm'\' \''_coreadm'\'
+compdump:43> _d_f=cowsay
+compdump:44> print -r - \''cowsay'\' \''_cowsay'\'
+compdump:43> _d_f=cowthink
+compdump:44> print -r - \''cowthink'\' \''_cowsay'\'
+compdump:43> _d_f=cp
+compdump:44> print -r - \''cp'\' \''_cp'\'
+compdump:43> _d_f=cpio
+compdump:44> print -r - \''cpio'\' \''_cpio'\'
+compdump:43> _d_f=cplay
+compdump:44> print -r - \''cplay'\' \''_cplay'\'
+compdump:43> _d_f=crsh
+compdump:44> print -r - \''crsh'\' \''_cssh'\'
+compdump:43> _d_f=cryptsetup
+compdump:44> print -r - \''cryptsetup'\' \''_cryptsetup'\'
+compdump:43> _d_f=csh
+compdump:44> print -r - \''csh'\' \''_sh'\'
+compdump:43> _d_f=cssh
+compdump:44> print -r - \''cssh'\' \''_cssh'\'
+compdump:43> _d_f=csup
+compdump:44> print -r - \''csup'\' \''_csup'\'
+compdump:43> _d_f=curl
+compdump:44> print -r - \''curl'\' \''_urls'\'
+compdump:43> _d_f=cut
+compdump:44> print -r - \''cut'\' \''_cut'\'
+compdump:43> _d_f=cvs
+compdump:44> print -r - \''cvs'\' \''_cvs'\'
+compdump:43> _d_f=cvsup
+compdump:44> print -r - \''cvsup'\' \''_cvsup'\'
+compdump:43> _d_f=cygcheck
+compdump:44> print -r - \''cygcheck'\' \''_cygcheck'\'
+compdump:43> _d_f=cygcheck.exe
+compdump:44> print -r - \''cygcheck.exe'\' \''_cygcheck'\'
+compdump:43> _d_f=cygpath
+compdump:44> print -r - \''cygpath'\' \''_cygpath'\'
+compdump:43> _d_f=cygpath.exe
+compdump:44> print -r - \''cygpath.exe'\' \''_cygpath'\'
+compdump:43> _d_f=cygrunsrv
+compdump:44> print -r - \''cygrunsrv'\' \''_cygrunsrv'\'
+compdump:43> _d_f=cygrunsrv.exe
+compdump:44> print -r - \''cygrunsrv.exe'\' \''_cygrunsrv'\'
+compdump:43> _d_f=cygserver
+compdump:44> print -r - \''cygserver'\' \''_cygserver'\'
+compdump:43> _d_f=cygserver.exe
+compdump:44> print -r - \''cygserver.exe'\' \''_cygserver'\'
+compdump:43> _d_f=cygstart
+compdump:44> print -r - \''cygstart'\' \''_cygstart'\'
+compdump:43> _d_f=cygstart.exe
+compdump:44> print -r - \''cygstart.exe'\' \''_cygstart'\'
+compdump:43> _d_f=dak
+compdump:44> print -r - \''dak'\' \''_dak'\'
+compdump:43> _d_f=darcs
+compdump:44> print -r - \''darcs'\' \''_darcs'\'
+compdump:43> _d_f=date
+compdump:44> print -r - \''date'\' \''_date'\'
+compdump:43> _d_f=dbus-monitor
+compdump:44> print -r - \''dbus-monitor'\' \''_dbus'\'
+compdump:43> _d_f=dbus-send
+compdump:44> print -r - \''dbus-send'\' \''_dbus'\'
+compdump:43> _d_f=dch
+compdump:44> print -r - \''dch'\' \''_debchange'\'
+compdump:43> _d_f=dchroot
+compdump:44> print -r - \''dchroot'\' \''_dchroot'\'
+compdump:43> _d_f=dchroot-dsa
+compdump:44> print -r - \''dchroot-dsa'\' \''_dchroot-dsa'\'
+compdump:43> _d_f=dcop
+compdump:44> print -r - \''dcop'\' \''_dcop'\'
+compdump:43> _d_f=dcopclient
+compdump:44> print -r - \''dcopclient'\' \''_dcop'\'
+compdump:43> _d_f=dcopfind
+compdump:44> print -r - \''dcopfind'\' \''_dcop'\'
+compdump:43> _d_f=dcopobject
+compdump:44> print -r - \''dcopobject'\' \''_dcop'\'
+compdump:43> _d_f=dcopref
+compdump:44> print -r - \''dcopref'\' \''_dcop'\'
+compdump:43> _d_f=dcopstart
+compdump:44> print -r - \''dcopstart'\' \''_dcop'\'
+compdump:43> _d_f=dcut
+compdump:44> print -r - \''dcut'\' \''_dcut'\'
+compdump:43> _d_f=dd
+compdump:44> print -r - \''dd'\' \''_dd'\'
+compdump:43> _d_f=debchange
+compdump:44> print -r - \''debchange'\' \''_debchange'\'
+compdump:43> _d_f=debdiff
+compdump:44> print -r - \''debdiff'\' \''_debdiff'\'
+compdump:43> _d_f=debfoster
+compdump:44> print -r - \''debfoster'\' \''_debfoster'\'
+compdump:43> _d_f=debsign
+compdump:44> print -r - \''debsign'\' \''_debsign'\'
+compdump:43> _d_f=declare
+compdump:44> print -r - \''declare'\' \''_typeset'\'
+compdump:43> _d_f=defaults
+compdump:44> print -r - \''defaults'\' \''_defaults'\'
+compdump:43> _d_f=delta
+compdump:44> print -r - \''delta'\' \''_sccs'\'
+compdump:43> _d_f=devtodo
+compdump:44> print -r - \''devtodo'\' \''_devtodo'\'
+compdump:43> _d_f=df
+compdump:44> print -r - \''df'\' \''_df'\'
+compdump:43> _d_f=dhclient
+compdump:44> print -r - \''dhclient'\' \''_dhclient'\'
+compdump:43> _d_f=dhclient3
+compdump:44> print -r - \''dhclient3'\' \''_dhclient'\'
+compdump:43> _d_f=dhcpinfo
+compdump:44> print -r - \''dhcpinfo'\' \''_dhcpinfo'\'
+compdump:43> _d_f=dict
+compdump:44> print -r - \''dict'\' \''_dict'\'
+compdump:43> _d_f=diff
+compdump:44> print -r - \''diff'\' \''_diff'\'
+compdump:43> _d_f=diffstat
+compdump:44> print -r - \''diffstat'\' \''_diffstat'\'
+compdump:43> _d_f=dillo
+compdump:44> print -r - \''dillo'\' \''_webbrowser'\'
+compdump:43> _d_f=dircmp
+compdump:44> print -r - \''dircmp'\' \''_directories'\'
+compdump:43> _d_f=dirs
+compdump:44> print -r - \''dirs'\' \''_dirs'\'
+compdump:43> _d_f=disable
+compdump:44> print -r - \''disable'\' \''_disable'\'
+compdump:43> _d_f=disown
+compdump:44> print -r - \''disown'\' \''_jobs_fg'\'
+compdump:43> _d_f=display
+compdump:44> print -r - \''display'\' \''_imagemagick'\'
+compdump:43> _d_f=dist
+compdump:44> print -r - \''dist'\' \''_mh'\'
+compdump:43> _d_f=django-admin
+compdump:44> print -r - \''django-admin'\' \''_django'\'
+compdump:43> _d_f=django-admin.py
+compdump:44> print -r - \''django-admin.py'\' \''_django'\'
+compdump:43> _d_f=dladm
+compdump:44> print -r - \''dladm'\' \''_dladm'\'
+compdump:43> _d_f=dlocate
+compdump:44> print -r - \''dlocate'\' \''_dlocate'\'
+compdump:43> _d_f=dmake
+compdump:44> print -r - \''dmake'\' \''_make'\'
+compdump:43> _d_f=dmidecode
+compdump:44> print -r - \''dmidecode'\' \''_dmidecode'\'
+compdump:43> _d_f=domainname
+compdump:44> print -r - \''domainname'\' \''_yp'\'
+compdump:43> _d_f=dosdel
+compdump:44> print -r - \''dosdel'\' \''_floppy'\'
+compdump:43> _d_f=dosread
+compdump:44> print -r - \''dosread'\' \''_floppy'\'
+compdump:43> _d_f=dpatch-edit-patch
+compdump:44> print -r - \''dpatch-edit-patch'\' \''_dpatch-edit-patch'\'
+compdump:43> _d_f=dpkg
+compdump:44> print -r - \''dpkg'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-buildpackage
+compdump:44> print -r - \''dpkg-buildpackage'\' \''_dpkg-buildpackage'\'
+compdump:43> _d_f=dpkg-cross
+compdump:44> print -r - \''dpkg-cross'\' \''_dpkg-cross'\'
+compdump:43> _d_f=dpkg-deb
+compdump:44> print -r - \''dpkg-deb'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-query
+compdump:44> print -r - \''dpkg-query'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-reconfigure
+compdump:44> print -r - \''dpkg-reconfigure'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-repack
+compdump:44> print -r - \''dpkg-repack'\' \''_dpkg-repack'\'
+compdump:43> _d_f=dpkg-source
+compdump:44> print -r - \''dpkg-source'\' \''_dpkg_source'\'
+compdump:43> _d_f=dput
+compdump:44> print -r - \''dput'\' \''_dput'\'
+compdump:43> _d_f=dtrace
+compdump:44> print -r - \''dtrace'\' \''_dtrace'\'
+compdump:43> _d_f=du
+compdump:44> print -r - \''du'\' \''_du'\'
+compdump:43> _d_f=dumpadm
+compdump:44> print -r - \''dumpadm'\' \''_dumpadm'\'
+compdump:43> _d_f=dumper
+compdump:44> print -r - \''dumper'\' \''_dumper'\'
+compdump:43> _d_f=dumper.exe
+compdump:44> print -r - \''dumper.exe'\' \''_dumper'\'
+compdump:43> _d_f=dupload
+compdump:44> print -r - \''dupload'\' \''_dupload'\'
+compdump:43> _d_f=dvibook
+compdump:44> print -r - \''dvibook'\' \''_dvi'\'
+compdump:43> _d_f=dviconcat
+compdump:44> print -r - \''dviconcat'\' \''_dvi'\'
+compdump:43> _d_f=dvicopy
+compdump:44> print -r - \''dvicopy'\' \''_dvi'\'
+compdump:43> _d_f=dvidvi
+compdump:44> print -r - \''dvidvi'\' \''_dvi'\'
+compdump:43> _d_f=dvips
+compdump:44> print -r - \''dvips'\' \''_dvi'\'
+compdump:43> _d_f=dviselect
+compdump:44> print -r - \''dviselect'\' \''_dvi'\'
+compdump:43> _d_f=dvitodvi
+compdump:44> print -r - \''dvitodvi'\' \''_dvi'\'
+compdump:43> _d_f=dvitype
+compdump:44> print -r - \''dvitype'\' \''_dvi'\'
+compdump:43> _d_f=dwb
+compdump:44> print -r - \''dwb'\' \''_webbrowser'\'
+compdump:43> _d_f=ecasound
+compdump:44> print -r - \''ecasound'\' \''_ecasound'\'
+compdump:43> _d_f=echotc
+compdump:44> print -r - \''echotc'\' \''_echotc'\'
+compdump:43> _d_f=echoti
+compdump:44> print -r - \''echoti'\' \''_echoti'\'
+compdump:43> _d_f=egrep
+compdump:44> print -r - \''egrep'\' \''_grep'\'
+compdump:43> _d_f=elinks
+compdump:44> print -r - \''elinks'\' \''_elinks'\'
+compdump:43> _d_f=elm
+compdump:44> print -r - \''elm'\' \''_elm'\'
+compdump:43> _d_f=emulate
+compdump:44> print -r - \''emulate'\' \''_emulate'\'
+compdump:43> _d_f=enable
+compdump:44> print -r - \''enable'\' \''_enable'\'
+compdump:43> _d_f=enscript
+compdump:44> print -r - \''enscript'\' \''_enscript'\'
+compdump:43> _d_f=env
+compdump:44> print -r - \''env'\' \''_env'\'
+compdump:43> _d_f=epdfview
+compdump:44> print -r - \''epdfview'\' \''_pdf'\'
+compdump:43> _d_f=epsffit
+compdump:44> print -r - \''epsffit'\' \''_psutils'\'
+compdump:43> _d_f=espeak
+compdump:44> print -r - \''espeak'\' \''_espeak'\'
+compdump:43> _d_f=etags
+compdump:44> print -r - \''etags'\' \''_etags'\'
+compdump:43> _d_f=ethtool
+compdump:44> print -r - \''ethtool'\' \''_ethtool'\'
+compdump:43> _d_f=eval
+compdump:44> print -r - \''eval'\' \''_precommand'\'
+compdump:43> _d_f=eview
+compdump:44> print -r - \''eview'\' \''_vim'\'
+compdump:43> _d_f=evim
+compdump:44> print -r - \''evim'\' \''_vim'\'
+compdump:43> _d_f=evince
+compdump:44> print -r - \''evince'\' \''_pdf'\'
+compdump:43> _d_f=exec
+compdump:44> print -r - \''exec'\' \''_precommand'\'
+compdump:43> _d_f=exim
+compdump:44> print -r - \''exim'\' \''_vim'\'
+compdump:43> _d_f=explodepkg
+compdump:44> print -r - \''explodepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=export
+compdump:44> print -r - \''export'\' \''_typeset'\'
+compdump:43> _d_f=express
+compdump:44> print -r - \''express'\' \''_webbrowser'\'
+compdump:43> _d_f=extcheck
+compdump:44> print -r - \''extcheck'\' \''_java'\'
+compdump:43> _d_f=extractres
+compdump:44> print -r - \''extractres'\' \''_psutils'\'
+compdump:43> _d_f=fakeroot
+compdump:44> print -r - \''fakeroot'\' \''_fakeroot'\'
+compdump:43> _d_f=false
+compdump:44> print -r - \''false'\' \''_nothing'\'
+compdump:43> _d_f=fc
+compdump:44> print -r - \''fc'\' \''_fc'\'
+compdump:43> _d_f=fc-list
+compdump:44> print -r - \''fc-list'\' \''_xft_fonts'\'
+compdump:43> _d_f=fc-match
+compdump:44> print -r - \''fc-match'\' \''_xft_fonts'\'
+compdump:43> _d_f=feh
+compdump:44> print -r - \''feh'\' \''_feh'\'
+compdump:43> _d_f=fetch
+compdump:44> print -r - \''fetch'\' \''_fetch'\'
+compdump:43> _d_f=fetchmail
+compdump:44> print -r - \''fetchmail'\' \''_fetchmail'\'
+compdump:43> _d_f=ffmpeg
+compdump:44> print -r - \''ffmpeg'\' \''_ffmpeg'\'
+compdump:43> _d_f=fg
+compdump:44> print -r - \''fg'\' \''_jobs_fg'\'
+compdump:43> _d_f=fgrep
+compdump:44> print -r - \''fgrep'\' \''_grep'\'
+compdump:43> _d_f=figlet
+compdump:44> print -r - \''figlet'\' \''_figlet'\'
+compdump:43> _d_f=find
+compdump:44> print -r - \''find'\' \''_find'\'
+compdump:43> _d_f=findaffix
+compdump:44> print -r - \''findaffix'\' \''_ispell'\'
+compdump:43> _d_f=finger
+compdump:44> print -r - \''finger'\' \''_finger'\'
+compdump:43> _d_f=fink
+compdump:44> print -r - \''fink'\' \''_fink'\'
+compdump:43> _d_f=firefox
+compdump:44> print -r - \''firefox'\' \''_mozilla'\'
+compdump:43> _d_f=fixdlsrps
+compdump:44> print -r - \''fixdlsrps'\' \''_psutils'\'
+compdump:43> _d_f=fixfmps
+compdump:44> print -r - \''fixfmps'\' \''_psutils'\'
+compdump:43> _d_f=fixmacps
+compdump:44> print -r - \''fixmacps'\' \''_psutils'\'
+compdump:43> _d_f=fixpsditps
+compdump:44> print -r - \''fixpsditps'\' \''_psutils'\'
+compdump:43> _d_f=fixpspps
+compdump:44> print -r - \''fixpspps'\' \''_psutils'\'
+compdump:43> _d_f=fixscribeps
+compdump:44> print -r - \''fixscribeps'\' \''_psutils'\'
+compdump:43> _d_f=fixtpps
+compdump:44> print -r - \''fixtpps'\' \''_psutils'\'
+compdump:43> _d_f=fixwfwps
+compdump:44> print -r - \''fixwfwps'\' \''_psutils'\'
+compdump:43> _d_f=fixwpps
+compdump:44> print -r - \''fixwpps'\' \''_psutils'\'
+compdump:43> _d_f=fixwwps
+compdump:44> print -r - \''fixwwps'\' \''_psutils'\'
+compdump:43> _d_f=flasher
+compdump:44> print -r - \''flasher'\' \''_flasher'\'
+compdump:43> _d_f=flex
+compdump:44> print -r - \''flex'\' \''_flex'\'
+compdump:43> _d_f=flist
+compdump:44> print -r - \''flist'\' \''_mh'\'
+compdump:43> _d_f=flists
+compdump:44> print -r - \''flists'\' \''_mh'\'
+compdump:43> _d_f=float
+compdump:44> print -r - \''float'\' \''_typeset'\'
+compdump:43> _d_f=flowadm
+compdump:44> print -r - \''flowadm'\' \''_flowadm'\'
+compdump:43> _d_f=fmadm
+compdump:44> print -r - \''fmadm'\' \''_fmadm'\'
+compdump:43> _d_f=fned
+compdump:44> print -r - \''fned'\' \''_zed'\'
+compdump:43> _d_f=folder
+compdump:44> print -r - \''folder'\' \''_mh'\'
+compdump:43> _d_f=folders
+compdump:44> print -r - \''folders'\' \''_mh'\'
+compdump:43> _d_f=fortune
+compdump:44> print -r - \''fortune'\' \''_fortune'\'
+compdump:43> _d_f=forw
+compdump:44> print -r - \''forw'\' \''_mh'\'
+compdump:43> _d_f=freebsd-make
+compdump:44> print -r - \''freebsd-make'\' \''_make'\'
+compdump:43> _d_f=freebsd-update
+compdump:44> print -r - \''freebsd-update'\' \''_freebsd-update'\'
+compdump:43> _d_f=fsh
+compdump:44> print -r - \''fsh'\' \''_fsh'\'
+compdump:43> _d_f=fstat
+compdump:44> print -r - \''fstat'\' \''_fstat'\'
+compdump:43> _d_f=ftp
+compdump:44> print -r - \''ftp'\' \''_hosts'\'
+compdump:43> _d_f=functions
+compdump:44> print -r - \''functions'\' \''_typeset'\'
+compdump:43> _d_f=fuser
+compdump:44> print -r - \''fuser'\' \''_fuser'\'
+compdump:43> _d_f=fusermount
+compdump:44> print -r - \''fusermount'\' \''_fusermount'\'
+compdump:43> _d_f=fwhois
+compdump:44> print -r - \''fwhois'\' \''_whois'\'
+compdump:43> _d_f=g++
+compdump:44> print -r - \''g++'\' \''_gcc'\'
+compdump:43> _d_f=galeon
+compdump:44> print -r - \''galeon'\' \''_webbrowser'\'
+compdump:43> _d_f=gcc
+compdump:44> print -r - \''gcc'\' \''_gcc'\'
+compdump:43> _d_f=gccgo
+compdump:44> print -r - \''gccgo'\' \''_go'\'
+compdump:43> _d_f=gcore
+compdump:44> print -r - \''gcore'\' \''_gcore'\'
+compdump:43> _d_f=gdb
+compdump:44> print -r - \''gdb'\' \''_gdb'\'
+compdump:43> _d_f=gdiff
+compdump:44> print -r - \''gdiff'\' \''_diff'\'
+compdump:43> _d_f=gem
+compdump:44> print -r - \''gem'\' \''_gem'\'
+compdump:43> _d_f=genisoimage
+compdump:44> print -r - \''genisoimage'\' \''_genisoimage'\'
+compdump:43> _d_f=get
+compdump:44> print -r - \''get'\' \''_sccs'\'
+compdump:43> _d_f=getafm
+compdump:44> print -r - \''getafm'\' \''_psutils'\'
+compdump:43> _d_f=getclip
+compdump:44> print -r - \''getclip'\' \''_getclip'\'
+compdump:43> _d_f=getclip.exe
+compdump:44> print -r - \''getclip.exe'\' \''_getclip'\'
+compdump:43> _d_f=getconf
+compdump:44> print -r - \''getconf'\' \''_getconf'\'
+compdump:43> _d_f=getent
+compdump:44> print -r - \''getent'\' \''_getent'\'
+compdump:43> _d_f=getfacl
+compdump:44> print -r - \''getfacl'\' \''_getfacl'\'
+compdump:43> _d_f=getfacl.exe
+compdump:44> print -r - \''getfacl.exe'\' \''_getfacl'\'
+compdump:43> _d_f=getfattr
+compdump:44> print -r - \''getfattr'\' \''_attr'\'
+compdump:43> _d_f=getmail
+compdump:44> print -r - \''getmail'\' \''_getmail'\'
+compdump:43> _d_f=getopts
+compdump:44> print -r - \''getopts'\' \''_vars'\'
+compdump:43> _d_f=gex
+compdump:44> print -r - \''gex'\' \''_vim'\'
+compdump:43> _d_f=ggv
+compdump:44> print -r - \''ggv'\' \''_gnome-gv'\'
+compdump:43> _d_f=ghostscript
+compdump:44> print -r - \''ghostscript'\' \''_gs'\'
+compdump:43> _d_f=ghostview
+compdump:44> print -r - \''ghostview'\' \''_pspdf'\'
+compdump:43> _d_f=git
+compdump:44> print -r - \''git'\' \''_git'\'
+compdump:43> _d_f=git-branch
+compdump:44> print -r - \''git-branch'\' \''_git-branch'\'
+compdump:43> _d_f=git-buildpackage
+compdump:44> print -r - \''git-buildpackage'\' \''_git-buildpackage'\'
+compdump:43> _d_f=git-cvsserver
+compdump:44> print -r - \''git-cvsserver'\' \''_git'\'
+compdump:43> _d_f=git-receive-pack
+compdump:44> print -r - \''git-receive-pack'\' \''_git'\'
+compdump:43> _d_f=git-remote
+compdump:44> print -r - \''git-remote'\' \''_git-remote'\'
+compdump:43> _d_f=git-shell
+compdump:44> print -r - \''git-shell'\' \''_git'\'
+compdump:43> _d_f=git-upload-archive
+compdump:44> print -r - \''git-upload-archive'\' \''_git'\'
+compdump:43> _d_f=git-upload-pack
+compdump:44> print -r - \''git-upload-pack'\' \''_git'\'
+compdump:43> _d_f=github
+compdump:44> print -r - \''github'\' \''_github'\'
+compdump:43> _d_f=gitk
+compdump:44> print -r - \''gitk'\' \''_git'\'
+compdump:43> _d_f=gln
+compdump:44> print -r - \''gln'\' \''_ln'\'
+compdump:43> _d_f=global
+compdump:44> print -r - \''global'\' \''_global'\'
+compdump:43> _d_f=gls
+compdump:44> print -r - \''gls'\' \''_ls'\'
+compdump:43> _d_f=gm
+compdump:44> print -r - \''gm'\' \''_graphicsmagick'\'
+compdump:43> _d_f=gmake
+compdump:44> print -r - \''gmake'\' \''_make'\'
+compdump:43> _d_f=gmplayer
+compdump:44> print -r - \''gmplayer'\' \''_mplayer'\'
+compdump:43> _d_f=gnome-gv
+compdump:44> print -r - \''gnome-gv'\' \''_gnome-gv'\'
+compdump:43> _d_f=gnupod_INIT
+compdump:44> print -r - \''gnupod_INIT'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_INIT.pl
+compdump:44> print -r - \''gnupod_INIT.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_addsong
+compdump:44> print -r - \''gnupod_addsong'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_addsong.pl
+compdump:44> print -r - \''gnupod_addsong.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_check
+compdump:44> print -r - \''gnupod_check'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_check.pl
+compdump:44> print -r - \''gnupod_check.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_search
+compdump:44> print -r - \''gnupod_search'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_search.pl
+compdump:44> print -r - \''gnupod_search.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnutls-cli
+compdump:44> print -r - \''gnutls-cli'\' \''_gnutls'\'
+compdump:43> _d_f=gnutls-cli-debug
+compdump:44> print -r - \''gnutls-cli-debug'\' \''_gnutls'\'
+compdump:43> _d_f=gofmt
+compdump:44> print -r - \''gofmt'\' \''_go'\'
+compdump:43> _d_f=gpg
+compdump:44> print -r - \''gpg'\' \''_gpg'\'
+compdump:43> _d_f=gpg-zip
+compdump:44> print -r - \''gpg-zip'\' \''_gpg'\'
+compdump:43> _d_f=gpgv
+compdump:44> print -r - \''gpgv'\' \''_gpg'\'
+compdump:43> _d_f=gphoto2
+compdump:44> print -r - \''gphoto2'\' \''_gphoto2'\'
+compdump:43> _d_f=gprof
+compdump:44> print -r - \''gprof'\' \''_gprof'\'
+compdump:43> _d_f=gqview
+compdump:44> print -r - \''gqview'\' \''_gqview'\'
+compdump:43> _d_f=gradle
+compdump:44> print -r - \''gradle'\' \''_gradle'\'
+compdump:43> _d_f=gradlew
+compdump:44> print -r - \''gradlew'\' \''_gradle'\'
+compdump:43> _d_f=grail
+compdump:44> print -r - \''grail'\' \''_webbrowser'\'
+compdump:43> _d_f=grep
+compdump:44> print -r - \''grep'\' \''_grep'\'
+compdump:43> _d_f=grep-excuses
+compdump:44> print -r - \''grep-excuses'\' \''_grep-excuses'\'
+compdump:43> _d_f=groff
+compdump:44> print -r - \''groff'\' \''_groff'\'
+compdump:43> _d_f=groupadd
+compdump:44> print -r - \''groupadd'\' \''_user_admin'\'
+compdump:43> _d_f=groupdel
+compdump:44> print -r - \''groupdel'\' \''_groups'\'
+compdump:43> _d_f=groupmod
+compdump:44> print -r - \''groupmod'\' \''_user_admin'\'
+compdump:43> _d_f=groups
+compdump:44> print -r - \''groups'\' \''_users'\'
+compdump:43> _d_f=growisofs
+compdump:44> print -r - \''growisofs'\' \''_growisofs'\'
+compdump:43> _d_f=gs
+compdump:44> print -r - \''gs'\' \''_gs'\'
+compdump:43> _d_f=gsbj
+compdump:44> print -r - \''gsbj'\' \''_pspdf'\'
+compdump:43> _d_f=gsdj
+compdump:44> print -r - \''gsdj'\' \''_pspdf'\'
+compdump:43> _d_f=gsdj500
+compdump:44> print -r - \''gsdj500'\' \''_pspdf'\'
+compdump:43> _d_f=gslj
+compdump:44> print -r - \''gslj'\' \''_pspdf'\'
+compdump:43> _d_f=gslp
+compdump:44> print -r - \''gslp'\' \''_pspdf'\'
+compdump:43> _d_f=gsnd
+compdump:44> print -r - \''gsnd'\' \''_pspdf'\'
+compdump:43> _d_f=gtar
+compdump:44> print -r - \''gtar'\' \''_tar'\'
+compdump:43> _d_f=guilt
+compdump:44> print -r - \''guilt'\' \''_guilt'\'
+compdump:43> _d_f=guilt-add
+compdump:44> print -r - \''guilt-add'\' \''_guilt'\'
+compdump:43> _d_f=guilt-applied
+compdump:44> print -r - \''guilt-applied'\' \''_guilt'\'
+compdump:43> _d_f=guilt-delete
+compdump:44> print -r - \''guilt-delete'\' \''_guilt'\'
+compdump:43> _d_f=guilt-files
+compdump:44> print -r - \''guilt-files'\' \''_guilt'\'
+compdump:43> _d_f=guilt-fold
+compdump:44> print -r - \''guilt-fold'\' \''_guilt'\'
+compdump:43> _d_f=guilt-fork
+compdump:44> print -r - \''guilt-fork'\' \''_guilt'\'
+compdump:43> _d_f=guilt-header
+compdump:44> print -r - \''guilt-header'\' \''_guilt'\'
+compdump:43> _d_f=guilt-help
+compdump:44> print -r - \''guilt-help'\' \''_guilt'\'
+compdump:43> _d_f=guilt-import
+compdump:44> print -r - \''guilt-import'\' \''_guilt'\'
+compdump:43> _d_f=guilt-import-commit
+compdump:44> print -r - \''guilt-import-commit'\' \''_guilt'\'
+compdump:43> _d_f=guilt-init
+compdump:44> print -r - \''guilt-init'\' \''_guilt'\'
+compdump:43> _d_f=guilt-new
+compdump:44> print -r - \''guilt-new'\' \''_guilt'\'
+compdump:43> _d_f=guilt-next
+compdump:44> print -r - \''guilt-next'\' \''_guilt'\'
+compdump:43> _d_f=guilt-patchbomb
+compdump:44> print -r - \''guilt-patchbomb'\' \''_guilt'\'
+compdump:43> _d_f=guilt-pop
+compdump:44> print -r - \''guilt-pop'\' \''_guilt'\'
+compdump:43> _d_f=guilt-prev
+compdump:44> print -r - \''guilt-prev'\' \''_guilt'\'
+compdump:43> _d_f=guilt-push
+compdump:44> print -r - \''guilt-push'\' \''_guilt'\'
+compdump:43> _d_f=guilt-rebase
+compdump:44> print -r - \''guilt-rebase'\' \''_guilt'\'
+compdump:43> _d_f=guilt-refresh
+compdump:44> print -r - \''guilt-refresh'\' \''_guilt'\'
+compdump:43> _d_f=guilt-rm
+compdump:44> print -r - \''guilt-rm'\' \''_guilt'\'
+compdump:43> _d_f=guilt-series
+compdump:44> print -r - \''guilt-series'\' \''_guilt'\'
+compdump:43> _d_f=guilt-status
+compdump:44> print -r - \''guilt-status'\' \''_guilt'\'
+compdump:43> _d_f=guilt-top
+compdump:44> print -r - \''guilt-top'\' \''_guilt'\'
+compdump:43> _d_f=guilt-unapplied
+compdump:44> print -r - \''guilt-unapplied'\' \''_guilt'\'
+compdump:43> _d_f=gunzip
+compdump:44> print -r - \''gunzip'\' \''_gzip'\'
+compdump:43> _d_f=gv
+compdump:44> print -r - \''gv'\' \''_gv'\'
+compdump:43> _d_f=gview
+compdump:44> print -r - \''gview'\' \''_vim'\'
+compdump:43> _d_f=gvim
+compdump:44> print -r - \''gvim'\' \''_vim'\'
+compdump:43> _d_f=gvimdiff
+compdump:44> print -r - \''gvimdiff'\' \''_vim'\'
+compdump:43> _d_f=gzcat
+compdump:44> print -r - \''gzcat'\' \''_gzip'\'
+compdump:43> _d_f=gzilla
+compdump:44> print -r - \''gzilla'\' \''_webbrowser'\'
+compdump:43> _d_f=gzip
+compdump:44> print -r - \''gzip'\' \''_gzip'\'
+compdump:43> _d_f=hash
+compdump:44> print -r - \''hash'\' \''_hash'\'
+compdump:43> _d_f=hdiutil
+compdump:44> print -r - \''hdiutil'\' \''_hdiutil'\'
+compdump:43> _d_f=help
+compdump:44> print -r - \''help'\' \''_sccs'\'
+compdump:43> _d_f=heroku
+compdump:44> print -r - \''heroku'\' \''_heroku'\'
+compdump:43> _d_f=hg
+compdump:44> print -r - \''hg'\' \''_hg'\'
+compdump:43> _d_f=hilite
+compdump:44> print -r - \''hilite'\' \''_precommand'\'
+compdump:43> _d_f=history
+compdump:44> print -r - \''history'\' \''_fc'\'
+compdump:43> _d_f=host
+compdump:44> print -r - \''host'\' \''_hosts'\'
+compdump:43> _d_f=hotjava
+compdump:44> print -r - \''hotjava'\' \''_webbrowser'\'
+compdump:43> _d_f=hwinfo
+compdump:44> print -r - \''hwinfo'\' \''_hwinfo'\'
+compdump:43> _d_f=iceweasel
+compdump:44> print -r - \''iceweasel'\' \''_mozilla'\'
+compdump:43> _d_f=icombine
+compdump:44> print -r - \''icombine'\' \''_ispell'\'
+compdump:43> _d_f=iconv
+compdump:44> print -r - \''iconv'\' \''_iconv'\'
+compdump:43> _d_f=id
+compdump:44> print -r - \''id'\' \''_id'\'
+compdump:43> _d_f=identify
+compdump:44> print -r - \''identify'\' \''_imagemagick'\'
+compdump:43> _d_f=ifconfig
+compdump:44> print -r - \''ifconfig'\' \''_ifconfig'\'
+compdump:43> _d_f=ifdown
+compdump:44> print -r - \''ifdown'\' \''_net_interfaces'\'
+compdump:43> _d_f=iftop
+compdump:44> print -r - \''iftop'\' \''_iftop'\'
+compdump:43> _d_f=ifup
+compdump:44> print -r - \''ifup'\' \''_net_interfaces'\'
+compdump:43> _d_f=ijoin
+compdump:44> print -r - \''ijoin'\' \''_ispell'\'
+compdump:43> _d_f=import
+compdump:44> print -r - \''import'\' \''_imagemagick'\'
+compdump:43> _d_f=inc
+compdump:44> print -r - \''inc'\' \''_mh'\'
+compdump:43> _d_f=includeres
+compdump:44> print -r - \''includeres'\' \''_psutils'\'
+compdump:43> _d_f=inetadm
+compdump:44> print -r - \''inetadm'\' \''_inetadm'\'
+compdump:43> _d_f=info
+compdump:44> print -r - \''info'\' \''_texinfo'\'
+compdump:43> _d_f=infocmp
+compdump:44> print -r - \''infocmp'\' \''_terminals'\'
+compdump:43> _d_f=initctl
+compdump:44> print -r - \''initctl'\' \''_initctl'\'
+compdump:43> _d_f=insmod
+compdump:44> print -r - \''insmod'\' \''_modutils'\'
+compdump:43> _d_f=install-info
+compdump:44> print -r - \''install-info'\' \''_texinfo'\'
+compdump:43> _d_f=installpkg
+compdump:44> print -r - \''installpkg'\' \''_pkgtool'\'
+compdump:43> _d_f=integer
+compdump:44> print -r - \''integer'\' \''_typeset'\'
+compdump:43> _d_f=invoke-rc.d
+compdump:44> print -r - \''invoke-rc.d'\' \''_invoke-rc.d'\'
+compdump:43> _d_f=ionice
+compdump:44> print -r - \''ionice'\' \''_ionice'\'
+compdump:43> _d_f=ip
+compdump:44> print -r - \''ip'\' \''_ip'\'
+compdump:43> _d_f=ipadm
+compdump:44> print -r - \''ipadm'\' \''_ipadm'\'
+compdump:43> _d_f=ipset
+compdump:44> print -r - \''ipset'\' \''_ipset'\'
+compdump:43> _d_f=iptables
+compdump:44> print -r - \''iptables'\' \''_iptables'\'
+compdump:43> _d_f=iptables-restore
+compdump:44> print -r - \''iptables-restore'\' \''_iptables'\'
+compdump:43> _d_f=iptables-save
+compdump:44> print -r - \''iptables-save'\' \''_iptables'\'
+compdump:43> _d_f=irssi
+compdump:44> print -r - \''irssi'\' \''_irssi'\'
+compdump:43> _d_f=ispell
+compdump:44> print -r - \''ispell'\' \''_ispell'\'
+compdump:43> _d_f=iwconfig
+compdump:44> print -r - \''iwconfig'\' \''_iwconfig'\'
+compdump:43> _d_f=jadetex
+compdump:44> print -r - \''jadetex'\' \''_tex'\'
+compdump:43> _d_f=jar
+compdump:44> print -r - \''jar'\' \''_java'\'
+compdump:43> _d_f=jarsigner
+compdump:44> print -r - \''jarsigner'\' \''_java'\'
+compdump:43> _d_f=java
+compdump:44> print -r - \''java'\' \''_java'\'
+compdump:43> _d_f=javac
+compdump:44> print -r - \''javac'\' \''_java'\'
+compdump:43> _d_f=javadoc
+compdump:44> print -r - \''javadoc'\' \''_java'\'
+compdump:43> _d_f=javah
+compdump:44> print -r - \''javah'\' \''_java'\'
+compdump:43> _d_f=javap
+compdump:44> print -r - \''javap'\' \''_java'\'
+compdump:43> _d_f=jdb
+compdump:44> print -r - \''jdb'\' \''_java'\'
+compdump:43> _d_f=jobs
+compdump:44> print -r - \''jobs'\' \''_jobs_builtin'\'
+compdump:43> _d_f=joe
+compdump:44> print -r - \''joe'\' \''_joe'\'
+compdump:43> _d_f=join
+compdump:44> print -r - \''join'\' \''_join'\'
+compdump:43> _d_f=keytool
+compdump:44> print -r - \''keytool'\' \''_java'\'
+compdump:43> _d_f=kfmclient
+compdump:44> print -r - \''kfmclient'\' \''_kfmclient'\'
+compdump:43> _d_f=kill
+compdump:44> print -r - \''kill'\' \''_kill'\'
+compdump:43> _d_f=killall
+compdump:44> print -r - \''killall'\' \''_killall'\'
+compdump:43> _d_f=killall5
+compdump:44> print -r - \''killall5'\' \''_killall'\'
+compdump:43> _d_f=kioclient
+compdump:44> print -r - \''kioclient'\' \''_kfmclient'\'
+compdump:43> _d_f=kldload
+compdump:44> print -r - \''kldload'\' \''_kld'\'
+compdump:43> _d_f=kldunload
+compdump:44> print -r - \''kldunload'\' \''_kld'\'
+compdump:43> _d_f=knock
+compdump:44> print -r - \''knock'\' \''_knock'\'
+compdump:43> _d_f=konqueror
+compdump:44> print -r - \''konqueror'\' \''_webbrowser'\'
+compdump:43> _d_f=kpdf
+compdump:44> print -r - \''kpdf'\' \''_pdf'\'
+compdump:43> _d_f=ksh
+compdump:44> print -r - \''ksh'\' \''_sh'\'
+compdump:43> _d_f=kvno
+compdump:44> print -r - \''kvno'\' \''_kvno'\'
+compdump:43> _d_f=last
+compdump:44> print -r - \''last'\' \''_last'\'
+compdump:43> _d_f=lastb
+compdump:44> print -r - \''lastb'\' \''_last'\'
+compdump:43> _d_f=latex
+compdump:44> print -r - \''latex'\' \''_tex'\'
+compdump:43> _d_f=latexmk
+compdump:44> print -r - \''latexmk'\' \''_tex'\'
+compdump:43> _d_f=ldd
+compdump:44> print -r - \''ldd'\' \''_ldd'\'
+compdump:43> _d_f=less
+compdump:44> print -r - \''less'\' \''_less'\'
+compdump:43> _d_f=let
+compdump:44> print -r - \''let'\' \''_math'\'
+compdump:43> _d_f=lftp
+compdump:44> print -r - \''lftp'\' \''_ncftp'\'
+compdump:43> _d_f=lha
+compdump:44> print -r - \''lha'\' \''_lha'\'
+compdump:43> _d_f=light
+compdump:44> print -r - \''light'\' \''_webbrowser'\'
+compdump:43> _d_f=lighty-disable-mod
+compdump:44> print -r - \''lighty-disable-mod'\' \''_lighttpd'\'
+compdump:43> _d_f=lighty-enable-mod
+compdump:44> print -r - \''lighty-enable-mod'\' \''_lighttpd'\'
+compdump:43> _d_f=limit
+compdump:44> print -r - \''limit'\' \''_limit'\'
+compdump:43> _d_f=links
+compdump:44> print -r - \''links'\' \''_links'\'
+compdump:43> _d_f=lintian
+compdump:44> print -r - \''lintian'\' \''_lintian'\'
+compdump:43> _d_f=lintian-info
+compdump:44> print -r - \''lintian-info'\' \''_lintian'\'
+compdump:43> _d_f=linux
+compdump:44> print -r - \''linux'\' \''_uml'\'
+compdump:43> _d_f=llvm-g++
+compdump:44> print -r - \''llvm-g++'\' \''_gcc'\'
+compdump:43> _d_f=llvm-gcc
+compdump:44> print -r - \''llvm-gcc'\' \''_gcc'\'
+compdump:43> _d_f=ln
+compdump:44> print -r - \''ln'\' \''_ln'\'
+compdump:43> _d_f=loadkeys
+compdump:44> print -r - \''loadkeys'\' \''_loadkeys'\'
+compdump:43> _d_f=local
+compdump:44> print -r - \''local'\' \''_typeset'\'
+compdump:43> _d_f=locate
+compdump:44> print -r - \''locate'\' \''_locate'\'
+compdump:43> _d_f=log
+compdump:44> print -r - \''log'\' \''_nothing'\'
+compdump:43> _d_f=logname
+compdump:44> print -r - \''logname'\' \''_nothing'\'
+compdump:43> _d_f=look
+compdump:44> print -r - \''look'\' \''_look'\'
+compdump:43> _d_f=lore
+compdump:44> print -r - \''lore'\' \''_twisted'\'
+compdump:43> _d_f=losetup
+compdump:44> print -r - \''losetup'\' \''_losetup'\'
+compdump:43> _d_f=lp
+compdump:44> print -r - \''lp'\' \''_lp'\'
+compdump:43> _d_f=lpadmin
+compdump:44> print -r - \''lpadmin'\' \''_lp'\'
+compdump:43> _d_f=lpinfo
+compdump:44> print -r - \''lpinfo'\' \''_lp'\'
+compdump:43> _d_f=lpoptions
+compdump:44> print -r - \''lpoptions'\' \''_lp'\'
+compdump:43> _d_f=lpq
+compdump:44> print -r - \''lpq'\' \''_lp'\'
+compdump:43> _d_f=lpr
+compdump:44> print -r - \''lpr'\' \''_lp'\'
+compdump:43> _d_f=lprm
+compdump:44> print -r - \''lprm'\' \''_lp'\'
+compdump:43> _d_f=lpstat
+compdump:44> print -r - \''lpstat'\' \''_lp'\'
+compdump:43> _d_f=ls
+compdump:44> print -r - \''ls'\' \''_ls'\'
+compdump:43> _d_f=lscfg
+compdump:44> print -r - \''lscfg'\' \''_lscfg'\'
+compdump:43> _d_f=lsdev
+compdump:44> print -r - \''lsdev'\' \''_lsdev'\'
+compdump:43> _d_f=lslv
+compdump:44> print -r - \''lslv'\' \''_lslv'\'
+compdump:43> _d_f=lsmod
+compdump:44> print -r - \''lsmod'\' \''_modutils'\'
+compdump:43> _d_f=lsof
+compdump:44> print -r - \''lsof'\' \''_lsof'\'
+compdump:43> _d_f=lspv
+compdump:44> print -r - \''lspv'\' \''_lspv'\'
+compdump:43> _d_f=lsusb
+compdump:44> print -r - \''lsusb'\' \''_lsusb'\'
+compdump:43> _d_f=lsvg
+compdump:44> print -r - \''lsvg'\' \''_lsvg'\'
+compdump:43> _d_f=lynx
+compdump:44> print -r - \''lynx'\' \''_lynx'\'
+compdump:43> _d_f=lzcat
+compdump:44> print -r - \''lzcat'\' \''_xz'\'
+compdump:43> _d_f=lzma
+compdump:44> print -r - \''lzma'\' \''_xz'\'
+compdump:43> _d_f=lzop
+compdump:44> print -r - \''lzop'\' \''_lzop'\'
+compdump:43> _d_f=m-a
+compdump:44> print -r - \''m-a'\' \''_module-assistant'\'
+compdump:43> _d_f=madison
+compdump:44> print -r - \''madison'\' \''_madison'\'
+compdump:43> _d_f=mail
+compdump:44> print -r - \''mail'\' \''_mail'\'
+compdump:43> _d_f=mailx
+compdump:44> print -r - \''mailx'\' \''_mail'\'
+compdump:43> _d_f=make
+compdump:44> print -r - \''make'\' \''_make'\'
+compdump:43> _d_f=make-kpkg
+compdump:44> print -r - \''make-kpkg'\' \''_make-kpkg'\'
+compdump:43> _d_f=makeinfo
+compdump:44> print -r - \''makeinfo'\' \''_texinfo'\'
+compdump:43> _d_f=makepkg
+compdump:44> print -r - \''makepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=man
+compdump:44> print -r - \''man'\' \''_man'\'
+compdump:43> _d_f=man-preview
+compdump:44> print -r - \''man-preview'\' \''_man-preview'\'
+compdump:43> _d_f=manage.py
+compdump:44> print -r - \''manage.py'\' \''_django'\'
+compdump:43> _d_f=manhole
+compdump:44> print -r - \''manhole'\' \''_twisted'\'
+compdump:43> _d_f=mark
+compdump:44> print -r - \''mark'\' \''_mh'\'
+compdump:43> _d_f=matlab
+compdump:44> print -r - \''matlab'\' \''_matlab'\'
+compdump:43> _d_f=mattrib
+compdump:44> print -r - \''mattrib'\' \''_mtools'\'
+compdump:43> _d_f=mcd
+compdump:44> print -r - \''mcd'\' \''_mtools'\'
+compdump:43> _d_f=mcopy
+compdump:44> print -r - \''mcopy'\' \''_mtools'\'
+compdump:43> _d_f=md5sum
+compdump:44> print -r - \''md5sum'\' \''_md5sum'\'
+compdump:43> _d_f=mdadm
+compdump:44> print -r - \''mdadm'\' \''_mdadm'\'
+compdump:43> _d_f=mdel
+compdump:44> print -r - \''mdel'\' \''_mtools'\'
+compdump:43> _d_f=mdeltree
+compdump:44> print -r - \''mdeltree'\' \''_mtools'\'
+compdump:43> _d_f=mdir
+compdump:44> print -r - \''mdir'\' \''_mtools'\'
+compdump:43> _d_f=mdu
+compdump:44> print -r - \''mdu'\' \''_mtools'\'
+compdump:43> _d_f=members
+compdump:44> print -r - \''members'\' \''_members'\'
+compdump:43> _d_f=mencal
+compdump:44> print -r - \''mencal'\' \''_mencal'\'
+compdump:43> _d_f=mere
+compdump:44> print -r - \''mere'\' \''_mere'\'
+compdump:43> _d_f=merge
+compdump:44> print -r - \''merge'\' \''_rcs'\'
+compdump:43> _d_f=mergechanges
+compdump:44> print -r - \''mergechanges'\' \''_mergechanges'\'
+compdump:43> _d_f=metaflac
+compdump:44> print -r - \''metaflac'\' \''_metaflac'\'
+compdump:43> _d_f=meteor
+compdump:44> print -r - \''meteor'\' \''_meteor'\'
+compdump:43> _d_f=mformat
+compdump:44> print -r - \''mformat'\' \''_mtools'\'
+compdump:43> _d_f=mgv
+compdump:44> print -r - \''mgv'\' \''_pspdf'\'
+compdump:43> _d_f=mhlist
+compdump:44> print -r - \''mhlist'\' \''_mh'\'
+compdump:43> _d_f=mhmail
+compdump:44> print -r - \''mhmail'\' \''_mh'\'
+compdump:43> _d_f=mhn
+compdump:44> print -r - \''mhn'\' \''_mh'\'
+compdump:43> _d_f=mhparam
+compdump:44> print -r - \''mhparam'\' \''_mh'\'
+compdump:43> _d_f=mhpath
+compdump:44> print -r - \''mhpath'\' \''_mh'\'
+compdump:43> _d_f=mhshow
+compdump:44> print -r - \''mhshow'\' \''_mh'\'
+compdump:43> _d_f=mhstore
+compdump:44> print -r - \''mhstore'\' \''_mh'\'
+compdump:43> _d_f=mii-tool
+compdump:44> print -r - \''mii-tool'\' \''_mii-tool'\'
+compdump:43> _d_f=mkdir
+compdump:44> print -r - \''mkdir'\' \''_mkdir'\'
+compdump:43> _d_f=mkisofs
+compdump:44> print -r - \''mkisofs'\' \''_growisofs'\'
+compdump:43> _d_f=mkshortcut
+compdump:44> print -r - \''mkshortcut'\' \''_mkshortcut'\'
+compdump:43> _d_f=mkshortcut.exe
+compdump:44> print -r - \''mkshortcut.exe'\' \''_mkshortcut'\'
+compdump:43> _d_f=mktunes
+compdump:44> print -r - \''mktunes'\' \''_gnupod'\'
+compdump:43> _d_f=mktunes.pl
+compdump:44> print -r - \''mktunes.pl'\' \''_gnupod'\'
+compdump:43> _d_f=mkzsh
+compdump:44> print -r - \''mkzsh'\' \''_mkzsh'\'
+compdump:43> _d_f=mkzsh.exe
+compdump:44> print -r - \''mkzsh.exe'\' \''_mkzsh'\'
+compdump:43> _d_f=mlabel
+compdump:44> print -r - \''mlabel'\' \''_mtools'\'
+compdump:43> _d_f=mlocate
+compdump:44> print -r - \''mlocate'\' \''_locate'\'
+compdump:43> _d_f=mmd
+compdump:44> print -r - \''mmd'\' \''_mtools'\'
+compdump:43> _d_f=mmm
+compdump:44> print -r - \''mmm'\' \''_webbrowser'\'
+compdump:43> _d_f=mmount
+compdump:44> print -r - \''mmount'\' \''_mtools'\'
+compdump:43> _d_f=mmove
+compdump:44> print -r - \''mmove'\' \''_mtools'\'
+compdump:43> _d_f=modinfo
+compdump:44> print -r - \''modinfo'\' \''_modutils'\'
+compdump:43> _d_f=modprobe
+compdump:44> print -r - \''modprobe'\' \''_modutils'\'
+compdump:43> _d_f=module
+compdump:44> print -r - \''module'\' \''_module'\'
+compdump:43> _d_f=module-assistant
+compdump:44> print -r - \''module-assistant'\' \''_module-assistant'\'
+compdump:43> _d_f=mogrify
+compdump:44> print -r - \''mogrify'\' \''_imagemagick'\'
+compdump:43> _d_f=mondoarchive
+compdump:44> print -r - \''mondoarchive'\' \''_mondo'\'
+compdump:43> _d_f=montage
+compdump:44> print -r - \''montage'\' \''_imagemagick'\'
+compdump:43> _d_f=mosh
+compdump:44> print -r - \''mosh'\' \''_mosh'\'
+compdump:43> _d_f=mount
+compdump:44> print -r - \''mount'\' \''_mount'\'
+compdump:43> _d_f=mozilla
+compdump:44> print -r - \''mozilla'\' \''_mozilla'\'
+compdump:43> _d_f=mozilla-firefox
+compdump:44> print -r - \''mozilla-firefox'\' \''_mozilla'\'
+compdump:43> _d_f=mozilla-xremote-client
+compdump:44> print -r - \''mozilla-xremote-client'\' \''_mozilla'\'
+compdump:43> _d_f=mpc
+compdump:44> print -r - \''mpc'\' \''_mpc'\'
+compdump:43> _d_f=mplayer
+compdump:44> print -r - \''mplayer'\' \''_mplayer'\'
+compdump:43> _d_f=mrd
+compdump:44> print -r - \''mrd'\' \''_mtools'\'
+compdump:43> _d_f=mread
+compdump:44> print -r - \''mread'\' \''_mtools'\'
+compdump:43> _d_f=mren
+compdump:44> print -r - \''mren'\' \''_mtools'\'
+compdump:43> _d_f=msgchk
+compdump:44> print -r - \''msgchk'\' \''_mh'\'
+compdump:43> _d_f=mt
+compdump:44> print -r - \''mt'\' \''_mt'\'
+compdump:43> _d_f=mtn
+compdump:44> print -r - \''mtn'\' \''_monotone'\'
+compdump:43> _d_f=mtoolstest
+compdump:44> print -r - \''mtoolstest'\' \''_mtools'\'
+compdump:43> _d_f=mtr
+compdump:44> print -r - \''mtr'\' \''_mtr'\'
+compdump:43> _d_f=mtype
+compdump:44> print -r - \''mtype'\' \''_mtools'\'
+compdump:43> _d_f=munchlist
+compdump:44> print -r - \''munchlist'\' \''_ispell'\'
+compdump:43> _d_f=mush
+compdump:44> print -r - \''mush'\' \''_mail'\'
+compdump:43> _d_f=mutt
+compdump:44> print -r - \''mutt'\' \''_mutt'\'
+compdump:43> _d_f=mx
+compdump:44> print -r - \''mx'\' \''_hosts'\'
+compdump:43> _d_f=mysql
+compdump:44> print -r - \''mysql'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqladmin
+compdump:44> print -r - \''mysqladmin'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqldiff
+compdump:44> print -r - \''mysqldiff'\' \''_mysqldiff'\'
+compdump:43> _d_f=mysqldump
+compdump:44> print -r - \''mysqldump'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqlimport
+compdump:44> print -r - \''mysqlimport'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqlshow
+compdump:44> print -r - \''mysqlshow'\' \''_mysql_utils'\'
+compdump:43> _d_f=nail
+compdump:44> print -r - \''nail'\' \''_mail'\'
+compdump:43> _d_f=native2ascii
+compdump:44> print -r - \''native2ascii'\' \''_java'\'
+compdump:43> _d_f=nautilus
+compdump:44> print -r - \''nautilus'\' \''_nautilus'\'
+compdump:43> _d_f=nc
+compdump:44> print -r - \''nc'\' \''_netcat'\'
+compdump:43> _d_f=ncal
+compdump:44> print -r - \''ncal'\' \''_cal'\'
+compdump:43> _d_f=ncftp
+compdump:44> print -r - \''ncftp'\' \''_ncftp'\'
+compdump:43> _d_f=ncl
+compdump:44> print -r - \''ncl'\' \''_nedit'\'
+compdump:43> _d_f=nedit
+compdump:44> print -r - \''nedit'\' \''_nedit'\'
+compdump:43> _d_f=nedit-nc
+compdump:44> print -r - \''nedit-nc'\' \''_nedit'\'
+compdump:43> _d_f=netcat
+compdump:44> print -r - \''netcat'\' \''_netcat'\'
+compdump:43> _d_f=netrik
+compdump:44> print -r - \''netrik'\' \''_webbrowser'\'
+compdump:43> _d_f=netscape
+compdump:44> print -r - \''netscape'\' \''_netscape'\'
+compdump:43> _d_f=netstat
+compdump:44> print -r - \''netstat'\' \''_netstat'\'
+compdump:43> _d_f=newgrp
+compdump:44> print -r - \''newgrp'\' \''_groups'\'
+compdump:43> _d_f=next
+compdump:44> print -r - \''next'\' \''_mh'\'
+compdump:43> _d_f=nice
+compdump:44> print -r - \''nice'\' \''_nice'\'
+compdump:43> _d_f=nkf
+compdump:44> print -r - \''nkf'\' \''_nkf'\'
+compdump:43> _d_f=nm
+compdump:44> print -r - \''nm'\' \''_nm'\'
+compdump:43> _d_f=nmap
+compdump:44> print -r - \''nmap'\' \''_nmap'\'
+compdump:43> _d_f=nmblookup
+compdump:44> print -r - \''nmblookup'\' \''_samba'\'
+compdump:43> _d_f=nmcli
+compdump:44> print -r - \''nmcli'\' \''_nmcli'\'
+compdump:43> _d_f=nocorrect
+compdump:44> print -r - \''nocorrect'\' \''_precommand'\'
+compdump:43> _d_f=noglob
+compdump:44> print -r - \''noglob'\' \''_precommand'\'
+compdump:43> _d_f=nohup
+compdump:44> print -r - \''nohup'\' \''_precommand'\'
+compdump:43> _d_f=notmuch
+compdump:44> print -r - \''notmuch'\' \''_notmuch'\'
+compdump:43> _d_f=npm
+compdump:44> print -r - \''npm'\' \''_npm'\'
+compdump:43> _d_f=ns
+compdump:44> print -r - \''ns'\' \''_hosts'\'
+compdump:43> _d_f=nslookup
+compdump:44> print -r - \''nslookup'\' \''_nslookup'\'
+compdump:43> _d_f=ntalk
+compdump:44> print -r - \''ntalk'\' \''_other_accounts'\'
+compdump:43> _d_f=odme
+compdump:44> print -r - \''odme'\' \''_object_classes'\'
+compdump:43> _d_f=odmget
+compdump:44> print -r - \''odmget'\' \''_object_classes'\'
+compdump:43> _d_f=odmshow
+compdump:44> print -r - \''odmshow'\' \''_object_classes'\'
+compdump:43> _d_f=ogg123
+compdump:44> print -r - \''ogg123'\' \''_vorbis'\'
+compdump:43> _d_f=oggdec
+compdump:44> print -r - \''oggdec'\' \''_vorbis'\'
+compdump:43> _d_f=oggenc
+compdump:44> print -r - \''oggenc'\' \''_vorbis'\'
+compdump:43> _d_f=ogginfo
+compdump:44> print -r - \''ogginfo'\' \''_vorbis'\'
+compdump:43> _d_f=okular
+compdump:44> print -r - \''okular'\' \''_okular'\'
+compdump:43> _d_f=open
+compdump:44> print -r - \''open'\' \''_open'\'
+compdump:43> _d_f=opera
+compdump:44> print -r - \''opera'\' \''_webbrowser'\'
+compdump:43> _d_f=opera-next
+compdump:44> print -r - \''opera-next'\' \''_webbrowser'\'
+compdump:43> _d_f=osc
+compdump:44> print -r - \''osc'\' \''_osc'\'
+compdump:43> _d_f=p4
+compdump:44> print -r - \''p4'\' \''_perforce'\'
+compdump:43> _d_f=p4d
+compdump:44> print -r - \''p4d'\' \''_perforce'\'
+compdump:43> _d_f=pack
+compdump:44> print -r - \''pack'\' \''_pack'\'
+compdump:43> _d_f=packf
+compdump:44> print -r - \''packf'\' \''_mh'\'
+compdump:43> _d_f=parsehdlist
+compdump:44> print -r - \''parsehdlist'\' \''_urpmi'\'
+compdump:43> _d_f=passwd
+compdump:44> print -r - \''passwd'\' \''_users'\'
+compdump:43> _d_f=patch
+compdump:44> print -r - \''patch'\' \''_patch'\'
+compdump:43> _d_f=pax
+compdump:44> print -r - \''pax'\' \''_pax'\'
+compdump:43> _d_f=pbuilder
+compdump:44> print -r - \''pbuilder'\' \''_pbuilder'\'
+compdump:43> _d_f=pcat
+compdump:44> print -r - \''pcat'\' \''_pack'\'
+compdump:43> _d_f=pcred
+compdump:44> print -r - \''pcred'\' \''_pids'\'
+compdump:43> _d_f=pdf2dsc
+compdump:44> print -r - \''pdf2dsc'\' \''_pdf'\'
+compdump:43> _d_f=pdf2ps
+compdump:44> print -r - \''pdf2ps'\' \''_pdf'\'
+compdump:43> _d_f=pdffonts
+compdump:44> print -r - \''pdffonts'\' \''_pdf'\'
+compdump:43> _d_f=pdfimages
+compdump:44> print -r - \''pdfimages'\' \''_pdf'\'
+compdump:43> _d_f=pdfinfo
+compdump:44> print -r - \''pdfinfo'\' \''_pdf'\'
+compdump:43> _d_f=pdfjadetex
+compdump:44> print -r - \''pdfjadetex'\' \''_tex'\'
+compdump:43> _d_f=pdflatex
+compdump:44> print -r - \''pdflatex'\' \''_tex'\'
+compdump:43> _d_f=pdfopt
+compdump:44> print -r - \''pdfopt'\' \''_pdf'\'
+compdump:43> _d_f=pdftex
+compdump:44> print -r - \''pdftex'\' \''_tex'\'
+compdump:43> _d_f=pdftk
+compdump:44> print -r - \''pdftk'\' \''_pdftk'\'
+compdump:43> _d_f=pdftopbm
+compdump:44> print -r - \''pdftopbm'\' \''_pdf'\'
+compdump:43> _d_f=pdftops
+compdump:44> print -r - \''pdftops'\' \''_pdf'\'
+compdump:43> _d_f=pdftotext
+compdump:44> print -r - \''pdftotext'\' \''_pdf'\'
+compdump:43> _d_f=perl
+compdump:44> print -r - \''perl'\' \''_perl'\'
+compdump:43> _d_f=perldoc
+compdump:44> print -r - \''perldoc'\' \''_perldoc'\'
+compdump:43> _d_f=pfctl
+compdump:44> print -r - \''pfctl'\' \''_pfctl'\'
+compdump:43> _d_f=pfexec
+compdump:44> print -r - \''pfexec'\' \''_pfexec'\'
+compdump:43> _d_f=pfiles
+compdump:44> print -r - \''pfiles'\' \''_pids'\'
+compdump:43> _d_f=pflags
+compdump:44> print -r - \''pflags'\' \''_pids'\'
+compdump:43> _d_f=pgrep
+compdump:44> print -r - \''pgrep'\' \''_pgrep'\'
+compdump:43> _d_f=php
+compdump:44> print -r - \''php'\' \''_php'\'
+compdump:43> _d_f=pick
+compdump:44> print -r - \''pick'\' \''_mh'\'
+compdump:43> _d_f=pine
+compdump:44> print -r - \''pine'\' \''_pine'\'
+compdump:43> _d_f=pinef
+compdump:44> print -r - \''pinef'\' \''_pine'\'
+compdump:43> _d_f=ping
+compdump:44> print -r - \''ping'\' \''_ping'\'
+compdump:43> _d_f=piuparts
+compdump:44> print -r - \''piuparts'\' \''_piuparts'\'
+compdump:43> _d_f=pkg
+compdump:44> print -r - \''pkg'\' \''_pkg5'\'
+compdump:43> _d_f=pkg-config
+compdump:44> print -r - \''pkg-config'\' \''_pkg-config'\'
+compdump:43> _d_f=pkg_add
+compdump:44> print -r - \''pkg_add'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkg_create
+compdump:44> print -r - \''pkg_create'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkg_delete
+compdump:44> print -r - \''pkg_delete'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkg_info
+compdump:44> print -r - \''pkg_info'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkgadd
+compdump:44> print -r - \''pkgadd'\' \''_pkgadd'\'
+compdump:43> _d_f=pkginfo
+compdump:44> print -r - \''pkginfo'\' \''_pkginfo'\'
+compdump:43> _d_f=pkgrm
+compdump:44> print -r - \''pkgrm'\' \''_pkgrm'\'
+compdump:43> _d_f=pkgtool
+compdump:44> print -r - \''pkgtool'\' \''_pkgtool'\'
+compdump:43> _d_f=pkill
+compdump:44> print -r - \''pkill'\' \''_pgrep'\'
+compdump:43> _d_f=pldd
+compdump:44> print -r - \''pldd'\' \''_pids'\'
+compdump:43> _d_f=pmake
+compdump:44> print -r - \''pmake'\' \''_make'\'
+compdump:43> _d_f=pman
+compdump:44> print -r - \''pman'\' \''_perl_modules'\'
+compdump:43> _d_f=pmap
+compdump:44> print -r - \''pmap'\' \''_pids'\'
+compdump:43> _d_f=pmcat
+compdump:44> print -r - \''pmcat'\' \''_perl_modules'\'
+compdump:43> _d_f=pmdesc
+compdump:44> print -r - \''pmdesc'\' \''_perl_modules'\'
+compdump:43> _d_f=pmeth
+compdump:44> print -r - \''pmeth'\' \''_perl_modules'\'
+compdump:43> _d_f=pmexp
+compdump:44> print -r - \''pmexp'\' \''_perl_modules'\'
+compdump:43> _d_f=pmfunc
+compdump:44> print -r - \''pmfunc'\' \''_perl_modules'\'
+compdump:43> _d_f=pmload
+compdump:44> print -r - \''pmload'\' \''_perl_modules'\'
+compdump:43> _d_f=pmls
+compdump:44> print -r - \''pmls'\' \''_perl_modules'\'
+compdump:43> _d_f=pmpath
+compdump:44> print -r - \''pmpath'\' \''_perl_modules'\'
+compdump:43> _d_f=pmvers
+compdump:44> print -r - \''pmvers'\' \''_perl_modules'\'
+compdump:43> _d_f=podgrep
+compdump:44> print -r - \''podgrep'\' \''_perl_modules'\'
+compdump:43> _d_f=podpath
+compdump:44> print -r - \''podpath'\' \''_perl_modules'\'
+compdump:43> _d_f=podtoc
+compdump:44> print -r - \''podtoc'\' \''_perl_modules'\'
+compdump:43> _d_f=poff
+compdump:44> print -r - \''poff'\' \''_pon'\'
+compdump:43> _d_f=policytool
+compdump:44> print -r - \''policytool'\' \''_java'\'
+compdump:43> _d_f=pon
+compdump:44> print -r - \''pon'\' \''_pon'\'
+compdump:43> _d_f=popd
+compdump:44> print -r - \''popd'\' \''_directory_stack'\'
+compdump:43> _d_f=portaudit
+compdump:44> print -r - \''portaudit'\' \''_portaudit'\'
+compdump:43> _d_f=portlint
+compdump:44> print -r - \''portlint'\' \''_portlint'\'
+compdump:43> _d_f=portmaster
+compdump:44> print -r - \''portmaster'\' \''_portmaster'\'
+compdump:43> _d_f=portsnap
+compdump:44> print -r - \''portsnap'\' \''_portsnap'\'
+compdump:43> _d_f=postsuper
+compdump:44> print -r - \''postsuper'\' \''_postfix'\'
+compdump:43> _d_f=powerd
+compdump:44> print -r - \''powerd'\' \''_powerd'\'
+compdump:43> _d_f=prcs
+compdump:44> print -r - \''prcs'\' \''_prcs'\'
+compdump:43> _d_f=prev
+compdump:44> print -r - \''prev'\' \''_mh'\'
+compdump:43> _d_f=print
+compdump:44> print -r - \''print'\' \''_print'\'
+compdump:43> _d_f=printenv
+compdump:44> print -r - \''printenv'\' \''_printenv'\'
+compdump:43> _d_f=printf
+compdump:44> print -r - \''printf'\' \''_print'\'
+compdump:43> _d_f=procstat
+compdump:44> print -r - \''procstat'\' \''_procstat'\'
+compdump:43> _d_f=prompt
+compdump:44> print -r - \''prompt'\' \''_prompt'\'
+compdump:43> _d_f=prove
+compdump:44> print -r - \''prove'\' \''_prove'\'
+compdump:43> _d_f=prs
+compdump:44> print -r - \''prs'\' \''_sccs'\'
+compdump:43> _d_f=prstat
+compdump:44> print -r - \''prstat'\' \''_prstat'\'
+compdump:43> _d_f=prt
+compdump:44> print -r - \''prt'\' \''_sccs'\'
+compdump:43> _d_f=prun
+compdump:44> print -r - \''prun'\' \''_pids'\'
+compdump:43> _d_f=ps
+compdump:44> print -r - \''ps'\' \''_ps'\'
+compdump:43> _d_f=ps2ascii
+compdump:44> print -r - \''ps2ascii'\' \''_pspdf'\'
+compdump:43> _d_f=ps2epsi
+compdump:44> print -r - \''ps2epsi'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf
+compdump:44> print -r - \''ps2pdf'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf12
+compdump:44> print -r - \''ps2pdf12'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf13
+compdump:44> print -r - \''ps2pdf13'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf14
+compdump:44> print -r - \''ps2pdf14'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdfwr
+compdump:44> print -r - \''ps2pdfwr'\' \''_postscript'\'
+compdump:43> _d_f=ps2ps
+compdump:44> print -r - \''ps2ps'\' \''_postscript'\'
+compdump:43> _d_f=psbook
+compdump:44> print -r - \''psbook'\' \''_psutils'\'
+compdump:43> _d_f=pscp
+compdump:44> print -r - \''pscp'\' \''_pscp'\'
+compdump:43> _d_f=pscp.exe
+compdump:44> print -r - \''pscp.exe'\' \''_pscp'\'
+compdump:43> _d_f=psig
+compdump:44> print -r - \''psig'\' \''_pids'\'
+compdump:43> _d_f=psmerge
+compdump:44> print -r - \''psmerge'\' \''_psutils'\'
+compdump:43> _d_f=psmulti
+compdump:44> print -r - \''psmulti'\' \''_postscript'\'
+compdump:43> _d_f=psnup
+compdump:44> print -r - \''psnup'\' \''_psutils'\'
+compdump:43> _d_f=psresize
+compdump:44> print -r - \''psresize'\' \''_psutils'\'
+compdump:43> _d_f=psselect
+compdump:44> print -r - \''psselect'\' \''_psutils'\'
+compdump:43> _d_f=pstack
+compdump:44> print -r - \''pstack'\' \''_pids'\'
+compdump:43> _d_f=pstoedit
+compdump:44> print -r - \''pstoedit'\' \''_pspdf'\'
+compdump:43> _d_f=pstop
+compdump:44> print -r - \''pstop'\' \''_pids'\'
+compdump:43> _d_f=pstops
+compdump:44> print -r - \''pstops'\' \''_psutils'\'
+compdump:43> _d_f=pstotgif
+compdump:44> print -r - \''pstotgif'\' \''_pspdf'\'
+compdump:43> _d_f=pswrap
+compdump:44> print -r - \''pswrap'\' \''_postscript'\'
+compdump:43> _d_f=ptree
+compdump:44> print -r - \''ptree'\' \''_pids'\'
+compdump:43> _d_f=pump
+compdump:44> print -r - \''pump'\' \''_pump'\'
+compdump:43> _d_f=pushd
+compdump:44> print -r - \''pushd'\' \''_cd'\'
+compdump:43> _d_f=putclip
+compdump:44> print -r - \''putclip'\' \''_putclip'\'
+compdump:43> _d_f=putclip.exe
+compdump:44> print -r - \''putclip.exe'\' \''_putclip'\'
+compdump:43> _d_f=pwait
+compdump:44> print -r - \''pwait'\' \''_pids'\'
+compdump:43> _d_f=pwdx
+compdump:44> print -r - \''pwdx'\' \''_pids'\'
+compdump:43> _d_f=pydoc
+compdump:44> print -r - \''pydoc'\' \''_pydoc'\'
+compdump:43> _d_f=pyhtmlizer
+compdump:44> print -r - \''pyhtmlizer'\' \''_twisted'\'
+compdump:43> _d_f=python
+compdump:44> print -r - \''python'\' \''_python'\'
+compdump:43> _d_f=qiv
+compdump:44> print -r - \''qiv'\' \''_qiv'\'
+compdump:43> _d_f=qtplay
+compdump:44> print -r - \''qtplay'\' \''_qtplay'\'
+compdump:43> _d_f=querybts
+compdump:44> print -r - \''querybts'\' \''_bug'\'
+compdump:43> _d_f=quilt
+compdump:44> print -r - \''quilt'\' \''_quilt'\'
+compdump:43> _d_f=r
+compdump:44> print -r - \''r'\' \''_fc'\'
+compdump:43> _d_f=raggle
+compdump:44> print -r - \''raggle'\' \''_raggle'\'
+compdump:43> _d_f=rake
+compdump:44> print -r - \''rake'\' \''_rake'\'
+compdump:43> _d_f=ranlib
+compdump:44> print -r - \''ranlib'\' \''_ranlib'\'
+compdump:43> _d_f=rar
+compdump:44> print -r - \''rar'\' \''_rar'\'
+compdump:43> _d_f=rc
+compdump:44> print -r - \''rc'\' \''_sh'\'
+compdump:43> _d_f=rcp
+compdump:44> print -r - \''rcp'\' \''_rlogin'\'
+compdump:43> _d_f=rcs
+compdump:44> print -r - \''rcs'\' \''_rcs'\'
+compdump:43> _d_f=rcsdiff
+compdump:44> print -r - \''rcsdiff'\' \''_rcs'\'
+compdump:43> _d_f=read
+compdump:44> print -r - \''read'\' \''_read'\'
+compdump:43> _d_f=readonly
+compdump:44> print -r - \''readonly'\' \''_typeset'\'
+compdump:43> _d_f=readshortcut
+compdump:44> print -r - \''readshortcut'\' \''_readshortcut'\'
+compdump:43> _d_f=readshortcut.exe
+compdump:44> print -r - \''readshortcut.exe'\' \''_readshortcut'\'
+compdump:43> _d_f=rebootin
+compdump:44> print -r - \''rebootin'\' \''_rebootin'\'
+compdump:43> _d_f=refile
+compdump:44> print -r - \''refile'\' \''_mh'\'
+compdump:43> _d_f=rehash
+compdump:44> print -r - \''rehash'\' \''_hash'\'
+compdump:43> _d_f=reload
+compdump:44> print -r - \''reload'\' \''_initctl'\'
+compdump:43> _d_f=removepkg
+compdump:44> print -r - \''removepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=remsh
+compdump:44> print -r - \''remsh'\' \''_rlogin'\'
+compdump:43> _d_f=renice
+compdump:44> print -r - \''renice'\' \''_renice'\'
+compdump:43> _d_f=repl
+compdump:44> print -r - \''repl'\' \''_mh'\'
+compdump:43> _d_f=reportbug
+compdump:44> print -r - \''reportbug'\' \''_bug'\'
+compdump:43> _d_f=reprepro
+compdump:44> print -r - \''reprepro'\' \''_reprepro'\'
+compdump:43> _d_f=restart
+compdump:44> print -r - \''restart'\' \''_initctl'\'
+compdump:43> _d_f=retawq
+compdump:44> print -r - \''retawq'\' \''_webbrowser'\'
+compdump:43> _d_f=rgview
+compdump:44> print -r - \''rgview'\' \''_vim'\'
+compdump:43> _d_f=rgvim
+compdump:44> print -r - \''rgvim'\' \''_vim'\'
+compdump:43> _d_f=ri
+compdump:44> print -r - \''ri'\' \''_ri'\'
+compdump:43> _d_f=rlogin
+compdump:44> print -r - \''rlogin'\' \''_rlogin'\'
+compdump:43> _d_f=rm
+compdump:44> print -r - \''rm'\' \''_rm'\'
+compdump:43> _d_f=rmadison
+compdump:44> print -r - \''rmadison'\' \''_madison'\'
+compdump:43> _d_f=rmdel
+compdump:44> print -r - \''rmdel'\' \''_sccs'\'
+compdump:43> _d_f=rmdir
+compdump:44> print -r - \''rmdir'\' \''_directories'\'
+compdump:43> _d_f=rmf
+compdump:44> print -r - \''rmf'\' \''_mh'\'
+compdump:43> _d_f=rmic
+compdump:44> print -r - \''rmic'\' \''_java'\'
+compdump:43> _d_f=rmid
+compdump:44> print -r - \''rmid'\' \''_java'\'
+compdump:43> _d_f=rmiregistry
+compdump:44> print -r - \''rmiregistry'\' \''_java'\'
+compdump:43> _d_f=rmm
+compdump:44> print -r - \''rmm'\' \''_mh'\'
+compdump:43> _d_f=rmmod
+compdump:44> print -r - \''rmmod'\' \''_modutils'\'
+compdump:43> _d_f=rpm
+compdump:44> print -r - \''rpm'\' \''_rpm'\'
+compdump:43> _d_f=rpmbuild
+compdump:44> print -r - \''rpmbuild'\' \''_rpmbuild'\'
+compdump:43> _d_f=rrdtool
+compdump:44> print -r - \''rrdtool'\' \''_rrdtool'\'
+compdump:43> _d_f=rsh
+compdump:44> print -r - \''rsh'\' \''_rlogin'\'
+compdump:43> _d_f=rsync
+compdump:44> print -r - \''rsync'\' \''_rsync'\'
+compdump:43> _d_f=rtin
+compdump:44> print -r - \''rtin'\' \''_tin'\'
+compdump:43> _d_f=rubber
+compdump:44> print -r - \''rubber'\' \''_rubber'\'
+compdump:43> _d_f=rubber-info
+compdump:44> print -r - \''rubber-info'\' \''_rubber'\'
+compdump:43> _d_f=rubber-pipe
+compdump:44> print -r - \''rubber-pipe'\' \''_rubber'\'
+compdump:43> _d_f=ruby
+compdump:44> print -r - \''ruby'\' \''_ruby'\'
+compdump:43> _d_f=run-help
+compdump:44> print -r - \''run-help'\' \''_run-help'\'
+compdump:43> _d_f=rup
+compdump:44> print -r - \''rup'\' \''_hosts'\'
+compdump:43> _d_f=rusage
+compdump:44> print -r - \''rusage'\' \''_precommand'\'
+compdump:43> _d_f=rview
+compdump:44> print -r - \''rview'\' \''_vim'\'
+compdump:43> _d_f=rvim
+compdump:44> print -r - \''rvim'\' \''_vim'\'
+compdump:43> _d_f=rwho
+compdump:44> print -r - \''rwho'\' \''_hosts'\'
+compdump:43> _d_f=rxvt
+compdump:44> print -r - \''rxvt'\' \''_urxvt'\'
+compdump:43> _d_f=sabcmd
+compdump:44> print -r - \''sabcmd'\' \''_sablotron'\'
+compdump:43> _d_f=sact
+compdump:44> print -r - \''sact'\' \''_sccs'\'
+compdump:43> _d_f=savecore
+compdump:44> print -r - \''savecore'\' \''_savecore'\'
+compdump:43> _d_f=scan
+compdump:44> print -r - \''scan'\' \''_mh'\'
+compdump:43> _d_f=sccs
+compdump:44> print -r - \''sccs'\' \''_sccs'\'
+compdump:43> _d_f=sccsdiff
+compdump:44> print -r - \''sccsdiff'\' \''_sccs'\'
+compdump:43> _d_f=sched
+compdump:44> print -r - \''sched'\' \''_sched'\'
+compdump:43> _d_f=schedtool
+compdump:44> print -r - \''schedtool'\' \''_schedtool'\'
+compdump:43> _d_f=schroot
+compdump:44> print -r - \''schroot'\' \''_schroot'\'
+compdump:43> _d_f=scp
+compdump:44> print -r - \''scp'\' \''_ssh'\'
+compdump:43> _d_f=screen
+compdump:44> print -r - \''screen'\' \''_screen'\'
+compdump:43> _d_f=sed
+compdump:44> print -r - \''sed'\' \''_sed'\'
+compdump:43> _d_f=serialver
+compdump:44> print -r - \''serialver'\' \''_java'\'
+compdump:43> _d_f=service
+compdump:44> print -r - \''service'\' \''_service'\'
+compdump:43> _d_f=set
+compdump:44> print -r - \''set'\' \''_set'\'
+compdump:43> _d_f=setfacl
+compdump:44> print -r - \''setfacl'\' \''_setfacl'\'
+compdump:43> _d_f=setfacl.exe
+compdump:44> print -r - \''setfacl.exe'\' \''_setfacl'\'
+compdump:43> _d_f=setfattr
+compdump:44> print -r - \''setfattr'\' \''_attr'\'
+compdump:43> _d_f=setopt
+compdump:44> print -r - \''setopt'\' \''_setopt'\'
+compdump:43> _d_f=sftp
+compdump:44> print -r - \''sftp'\' \''_ssh'\'
+compdump:43> _d_f=sh
+compdump:44> print -r - \''sh'\' \''_sh'\'
+compdump:43> _d_f=shift
+compdump:44> print -r - \''shift'\' \''_arrays'\'
+compdump:43> _d_f=show
+compdump:44> print -r - \''show'\' \''_mh'\'
+compdump:43> _d_f=showchar
+compdump:44> print -r - \''showchar'\' \''_psutils'\'
+compdump:43> _d_f=showmount
+compdump:44> print -r - \''showmount'\' \''_showmount'\'
+compdump:43> _d_f=sisu
+compdump:44> print -r - \''sisu'\' \''_sisu'\'
+compdump:43> _d_f=skipstone
+compdump:44> print -r - \''skipstone'\' \''_webbrowser'\'
+compdump:43> _d_f=slitex
+compdump:44> print -r - \''slitex'\' \''_tex'\'
+compdump:43> _d_f=slocate
+compdump:44> print -r - \''slocate'\' \''_locate'\'
+compdump:43> _d_f=slogin
+compdump:44> print -r - \''slogin'\' \''_ssh'\'
+compdump:43> _d_f=slrn
+compdump:44> print -r - \''slrn'\' \''_slrn'\'
+compdump:43> _d_f=smbclient
+compdump:44> print -r - \''smbclient'\' \''_samba'\'
+compdump:43> _d_f=smbcontrol
+compdump:44> print -r - \''smbcontrol'\' \''_samba'\'
+compdump:43> _d_f=smbstatus
+compdump:44> print -r - \''smbstatus'\' \''_samba'\'
+compdump:43> _d_f=smit
+compdump:44> print -r - \''smit'\' \''_smit'\'
+compdump:43> _d_f=smitty
+compdump:44> print -r - \''smitty'\' \''_smit'\'
+compdump:43> _d_f=snoop
+compdump:44> print -r - \''snoop'\' \''_snoop'\'
+compdump:43> _d_f=soa
+compdump:44> print -r - \''soa'\' \''_hosts'\'
+compdump:43> _d_f=socket
+compdump:44> print -r - \''socket'\' \''_socket'\'
+compdump:43> _d_f=sockstat
+compdump:44> print -r - \''sockstat'\' \''_sockstat'\'
+compdump:43> _d_f=softwareupdate
+compdump:44> print -r - \''softwareupdate'\' \''_softwareupdate'\'
+compdump:43> _d_f=sort
+compdump:44> print -r - \''sort'\' \''_sort'\'
+compdump:43> _d_f=sortm
+compdump:44> print -r - \''sortm'\' \''_mh'\'
+compdump:43> _d_f=source
+compdump:44> print -r - \''source'\' \''_source'\'
+compdump:43> _d_f=spamassassin
+compdump:44> print -r - \''spamassassin'\' \''_spamassassin'\'
+compdump:43> _d_f=sqlite
+compdump:44> print -r - \''sqlite'\' \''_sqlite'\'
+compdump:43> _d_f=sqlite3
+compdump:44> print -r - \''sqlite3'\' \''_sqlite'\'
+compdump:43> _d_f=sqsh
+compdump:44> print -r - \''sqsh'\' \''_sqsh'\'
+compdump:43> _d_f=sr
+compdump:44> print -r - \''sr'\' \''_surfraw'\'
+compdump:43> _d_f=srptool
+compdump:44> print -r - \''srptool'\' \''_gnutls'\'
+compdump:43> _d_f=ssh
+compdump:44> print -r - \''ssh'\' \''_ssh'\'
+compdump:43> _d_f=ssh-add
+compdump:44> print -r - \''ssh-add'\' \''_ssh'\'
+compdump:43> _d_f=ssh-agent
+compdump:44> print -r - \''ssh-agent'\' \''_ssh'\'
+compdump:43> _d_f=ssh-copy-id
+compdump:44> print -r - \''ssh-copy-id'\' \''_ssh'\'
+compdump:43> _d_f=ssh-keygen
+compdump:44> print -r - \''ssh-keygen'\' \''_ssh'\'
+compdump:43> _d_f=sshfs
+compdump:44> print -r - \''sshfs'\' \''_sshfs'\'
+compdump:43> _d_f=star
+compdump:44> print -r - \''star'\' \''_tar'\'
+compdump:43> _d_f=start
+compdump:44> print -r - \''start'\' \''_initctl'\'
+compdump:43> _d_f=stat
+compdump:44> print -r - \''stat'\' \''_stat'\'
+compdump:43> _d_f=status
+compdump:44> print -r - \''status'\' \''_initctl'\'
+compdump:43> _d_f=stg
+compdump:44> print -r - \''stg'\' \''_stgit'\'
+compdump:43> _d_f=stop
+compdump:44> print -r - \''stop'\' \''_initctl'\'
+compdump:43> _d_f=strace
+compdump:44> print -r - \''strace'\' \''_strace'\'
+compdump:43> _d_f=strip
+compdump:44> print -r - \''strip'\' \''_strip'\'
+compdump:43> _d_f=stty
+compdump:44> print -r - \''stty'\' \''_stty'\'
+compdump:43> _d_f=su
+compdump:44> print -r - \''su'\' \''_su'\'
+compdump:43> _d_f=sudo
+compdump:44> print -r - \''sudo'\' \''_sudo'\'
+compdump:43> _d_f=sudoedit
+compdump:44> print -r - \''sudoedit'\' \''_sudo'\'
+compdump:43> _d_f=surfraw
+compdump:44> print -r - \''surfraw'\' \''_surfraw'\'
+compdump:43> _d_f=svcadm
+compdump:44> print -r - \''svcadm'\' \''_svcadm'\'
+compdump:43> _d_f=svccfg
+compdump:44> print -r - \''svccfg'\' \''_svccfg'\'
+compdump:43> _d_f=svcprop
+compdump:44> print -r - \''svcprop'\' \''_svcprop'\'
+compdump:43> _d_f=svcs
+compdump:44> print -r - \''svcs'\' \''_svcs'\'
+compdump:43> _d_f=svn
+compdump:44> print -r - \''svn'\' \''_subversion'\'
+compdump:43> _d_f=svn-buildpackage
+compdump:44> print -r - \''svn-buildpackage'\' \''_svn-buildpackage'\'
+compdump:43> _d_f=svnadmin
+compdump:44> print -r - \''svnadmin'\' \''_subversion'\'
+compdump:43> _d_f=svnadmin-static
+compdump:44> print -r - \''svnadmin-static'\' \''_subversion'\'
+compdump:43> _d_f=sync
+compdump:44> print -r - \''sync'\' \''_nothing'\'
+compdump:43> _d_f=sysctl
+compdump:44> print -r - \''sysctl'\' \''_sysctl'\'
+compdump:43> _d_f=systemctl
+compdump:44> print -r - \''systemctl'\' \''_systemd'\'
+compdump:43> _d_f=systemd-loginctl
+compdump:44> print -r - \''systemd-loginctl'\' \''_systemd'\'
+compdump:43> _d_f=talk
+compdump:44> print -r - \''talk'\' \''_other_accounts'\'
+compdump:43> _d_f=tap2deb
+compdump:44> print -r - \''tap2deb'\' \''_twisted'\'
+compdump:43> _d_f=tap2rpm
+compdump:44> print -r - \''tap2rpm'\' \''_twisted'\'
+compdump:43> _d_f=tapconvert
+compdump:44> print -r - \''tapconvert'\' \''_twisted'\'
+compdump:43> _d_f=tar
+compdump:44> print -r - \''tar'\' \''_tar'\'
+compdump:43> _d_f=tardy
+compdump:44> print -r - \''tardy'\' \''_tardy'\'
+compdump:43> _d_f=tcp_open
+compdump:44> print -r - \''tcp_open'\' \''_tcpsys'\'
+compdump:43> _d_f=tcpdump
+compdump:44> print -r - \''tcpdump'\' \''_tcpdump'\'
+compdump:43> _d_f=tcptraceroute
+compdump:44> print -r - \''tcptraceroute'\' \''_tcptraceroute'\'
+compdump:43> _d_f=tcsh
+compdump:44> print -r - \''tcsh'\' \''_sh'\'
+compdump:43> _d_f=tda
+compdump:44> print -r - \''tda'\' \''_devtodo'\'
+compdump:43> _d_f=tdd
+compdump:44> print -r - \''tdd'\' \''_devtodo'\'
+compdump:43> _d_f=tde
+compdump:44> print -r - \''tde'\' \''_devtodo'\'
+compdump:43> _d_f=tdr
+compdump:44> print -r - \''tdr'\' \''_devtodo'\'
+compdump:43> _d_f=telnet
+compdump:44> print -r - \''telnet'\' \''_telnet'\'
+compdump:43> _d_f=tex
+compdump:44> print -r - \''tex'\' \''_tex'\'
+compdump:43> _d_f=texi2dvi
+compdump:44> print -r - \''texi2dvi'\' \''_texinfo'\'
+compdump:43> _d_f=texindex
+compdump:44> print -r - \''texindex'\' \''_texinfo'\'
+compdump:43> _d_f=tg
+compdump:44> print -r - \''tg'\' \''_topgit'\'
+compdump:43> _d_f=tidy
+compdump:44> print -r - \''tidy'\' \''_tidy'\'
+compdump:43> _d_f=tig
+compdump:44> print -r - \''tig'\' \''_git'\'
+compdump:43> _d_f=time
+compdump:44> print -r - \''time'\' \''_precommand'\'
+compdump:43> _d_f=times
+compdump:44> print -r - \''times'\' \''_nothing'\'
+compdump:43> _d_f=tin
+compdump:44> print -r - \''tin'\' \''_tin'\'
+compdump:43> _d_f=tkconch
+compdump:44> print -r - \''tkconch'\' \''_twisted'\'
+compdump:43> _d_f=tkinfo
+compdump:44> print -r - \''tkinfo'\' \''_texinfo'\'
+compdump:43> _d_f=tla
+compdump:44> print -r - \''tla'\' \''_tla'\'
+compdump:43> _d_f=tmux
+compdump:44> print -r - \''tmux'\' \''_tmux'\'
+compdump:43> _d_f=todo
+compdump:44> print -r - \''todo'\' \''_devtodo'\'
+compdump:43> _d_f=todo.sh
+compdump:44> print -r - \''todo.sh'\' \''_todo.sh'\'
+compdump:43> _d_f=toilet
+compdump:44> print -r - \''toilet'\' \''_toilet'\'
+compdump:43> _d_f=totdconfig
+compdump:44> print -r - \''totdconfig'\' \''_totd'\'
+compdump:43> _d_f=tpb
+compdump:44> print -r - \''tpb'\' \''_tpb'\'
+compdump:43> _d_f=tpconfig
+compdump:44> print -r - \''tpconfig'\' \''_tpconfig'\'
+compdump:43> _d_f=tpkg-debarch
+compdump:44> print -r - \''tpkg-debarch'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-install
+compdump:44> print -r - \''tpkg-install'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-install-libc
+compdump:44> print -r - \''tpkg-install-libc'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-make
+compdump:44> print -r - \''tpkg-make'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-update
+compdump:44> print -r - \''tpkg-update'\' \''_toolchain-source'\'
+compdump:43> _d_f=tracepath
+compdump:44> print -r - \''tracepath'\' \''_tracepath'\'
+compdump:43> _d_f=tracepath6
+compdump:44> print -r - \''tracepath6'\' \''_tracepath'\'
+compdump:43> _d_f=traceroute
+compdump:44> print -r - \''traceroute'\' \''_hosts'\'
+compdump:43> _d_f=trap
+compdump:44> print -r - \''trap'\' \''_trap'\'
+compdump:43> _d_f=tree
+compdump:44> print -r - \''tree'\' \''_tree'\'
+compdump:43> _d_f=trial
+compdump:44> print -r - \''trial'\' \''_twisted'\'
+compdump:43> _d_f=true
+compdump:44> print -r - \''true'\' \''_nothing'\'
+compdump:43> _d_f=tryaffix
+compdump:44> print -r - \''tryaffix'\' \''_ispell'\'
+compdump:43> _d_f=ttyctl
+compdump:44> print -r - \''ttyctl'\' \''_ttyctl'\'
+compdump:43> _d_f=tunctl
+compdump:44> print -r - \''tunctl'\' \''_uml'\'
+compdump:43> _d_f=tune2fs
+compdump:44> print -r - \''tune2fs'\' \''_tune2fs'\'
+compdump:43> _d_f=tunes2pod
+compdump:44> print -r - \''tunes2pod'\' \''_gnupod'\'
+compdump:43> _d_f=tunes2pod.pl
+compdump:44> print -r - \''tunes2pod.pl'\' \''_gnupod'\'
+compdump:43> _d_f=twidge
+compdump:44> print -r - \''twidge'\' \''_twidge'\'
+compdump:43> _d_f=twistd
+compdump:44> print -r - \''twistd'\' \''_twisted'\'
+compdump:43> _d_f=txt
+compdump:44> print -r - \''txt'\' \''_hosts'\'
+compdump:43> _d_f=type
+compdump:44> print -r - \''type'\' \''_which'\'
+compdump:43> _d_f=typeset
+compdump:44> print -r - \''typeset'\' \''_typeset'\'
+compdump:43> _d_f=ulimit
+compdump:44> print -r - \''ulimit'\' \''_ulimit'\'
+compdump:43> _d_f=uml_mconsole
+compdump:44> print -r - \''uml_mconsole'\' \''_uml'\'
+compdump:43> _d_f=uml_moo
+compdump:44> print -r - \''uml_moo'\' \''_uml'\'
+compdump:43> _d_f=uml_switch
+compdump:44> print -r - \''uml_switch'\' \''_uml'\'
+compdump:43> _d_f=umount
+compdump:44> print -r - \''umount'\' \''_mount'\'
+compdump:43> _d_f=unace
+compdump:44> print -r - \''unace'\' \''_unace'\'
+compdump:43> _d_f=unalias
+compdump:44> print -r - \''unalias'\' \''_aliases'\'
+compdump:43> _d_f=uname
+compdump:44> print -r - \''uname'\' \''_uname'\'
+compdump:43> _d_f=uncompress
+compdump:44> print -r - \''uncompress'\' \''_compress'\'
+compdump:43> _d_f=unexpand
+compdump:44> print -r - \''unexpand'\' \''_unexpand'\'
+compdump:43> _d_f=unfunction
+compdump:44> print -r - \''unfunction'\' \''_functions'\'
+compdump:43> _d_f=unget
+compdump:44> print -r - \''unget'\' \''_sccs'\'
+compdump:43> _d_f=unhash
+compdump:44> print -r - \''unhash'\' \''_unhash'\'
+compdump:43> _d_f=uniq
+compdump:44> print -r - \''uniq'\' \''_uniq'\'
+compdump:43> _d_f=unison
+compdump:44> print -r - \''unison'\' \''_unison'\'
+compdump:43> _d_f=units
+compdump:44> print -r - \''units'\' \''_units'\'
+compdump:43> _d_f=unlimit
+compdump:44> print -r - \''unlimit'\' \''_limits'\'
+compdump:43> _d_f=unlzma
+compdump:44> print -r - \''unlzma'\' \''_xz'\'
+compdump:43> _d_f=unpack
+compdump:44> print -r - \''unpack'\' \''_pack'\'
+compdump:43> _d_f=unrar
+compdump:44> print -r - \''unrar'\' \''_rar'\'
+compdump:43> _d_f=unset
+compdump:44> print -r - \''unset'\' \''_vars'\'
+compdump:43> _d_f=unsetopt
+compdump:44> print -r - \''unsetopt'\' \''_unsetopt'\'
+compdump:43> _d_f=unxz
+compdump:44> print -r - \''unxz'\' \''_xz'\'
+compdump:43> _d_f=unzip
+compdump:44> print -r - \''unzip'\' \''_zip'\'
+compdump:43> _d_f=update-alternatives
+compdump:44> print -r - \''update-alternatives'\' \''_update-alternatives'\'
+compdump:43> _d_f=update-rc.d
+compdump:44> print -r - \''update-rc.d'\' \''_update-rc.d'\'
+compdump:43> _d_f=upgradepkg
+compdump:44> print -r - \''upgradepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=urpme
+compdump:44> print -r - \''urpme'\' \''_urpmi'\'
+compdump:43> _d_f=urpmf
+compdump:44> print -r - \''urpmf'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi
+compdump:44> print -r - \''urpmi'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi.addmedia
+compdump:44> print -r - \''urpmi.addmedia'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi.removemedia
+compdump:44> print -r - \''urpmi.removemedia'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi.update
+compdump:44> print -r - \''urpmi.update'\' \''_urpmi'\'
+compdump:43> _d_f=urpmq
+compdump:44> print -r - \''urpmq'\' \''_urpmi'\'
+compdump:43> _d_f=urxvt
+compdump:44> print -r - \''urxvt'\' \''_urxvt'\'
+compdump:43> _d_f=urxvtc
+compdump:44> print -r - \''urxvtc'\' \''_urxvt'\'
+compdump:43> _d_f=uscan
+compdump:44> print -r - \''uscan'\' \''_uscan'\'
+compdump:43> _d_f=useradd
+compdump:44> print -r - \''useradd'\' \''_user_admin'\'
+compdump:43> _d_f=userdel
+compdump:44> print -r - \''userdel'\' \''_users'\'
+compdump:43> _d_f=usermod
+compdump:44> print -r - \''usermod'\' \''_user_admin'\'
+compdump:43> _d_f=uzbl
+compdump:44> print -r - \''uzbl'\' \''_uzbl'\'
+compdump:43> _d_f=uzbl-browser
+compdump:44> print -r - \''uzbl-browser'\' \''_uzbl'\'
+compdump:43> _d_f=uzbl-tabbed
+compdump:44> print -r - \''uzbl-tabbed'\' \''_uzbl'\'
+compdump:43> _d_f=val
+compdump:44> print -r - \''val'\' \''_sccs'\'
+compdump:43> _d_f=valgrind
+compdump:44> print -r - \''valgrind'\' \''_valgrind'\'
+compdump:43> _d_f=vared
+compdump:44> print -r - \''vared'\' \''_vared'\'
+compdump:43> _d_f=vcsh
+compdump:44> print -r - \''vcsh'\' \''_vcsh'\'
+compdump:43> _d_f=vim
+compdump:44> print -r - \''vim'\' \''_vim'\'
+compdump:43> _d_f=vim-addons
+compdump:44> print -r - \''vim-addons'\' \''_vim-addons'\'
+compdump:43> _d_f=vimdiff
+compdump:44> print -r - \''vimdiff'\' \''_vim'\'
+compdump:43> _d_f=vncserver
+compdump:44> print -r - \''vncserver'\' \''_vnc'\'
+compdump:43> _d_f=vncviewer
+compdump:44> print -r - \''vncviewer'\' \''_vnc'\'
+compdump:43> _d_f=vorbiscomment
+compdump:44> print -r - \''vorbiscomment'\' \''_vorbiscomment'\'
+compdump:43> _d_f=vserver
+compdump:44> print -r - \''vserver'\' \''_vserver'\'
+compdump:43> _d_f=vux
+compdump:44> print -r - \''vux'\' \''_vux'\'
+compdump:43> _d_f=vuxctl
+compdump:44> print -r - \''vuxctl'\' \''_vux'\'
+compdump:43> _d_f=w3m
+compdump:44> print -r - \''w3m'\' \''_w3m'\'
+compdump:43> _d_f=wait
+compdump:44> print -r - \''wait'\' \''_wait'\'
+compdump:43> _d_f=wajig
+compdump:44> print -r - \''wajig'\' \''_wajig'\'
+compdump:43> _d_f=wanna-build
+compdump:44> print -r - \''wanna-build'\' \''_wanna-build'\'
+compdump:43> _d_f=wget
+compdump:44> print -r - \''wget'\' \''_wget'\'
+compdump:43> _d_f=what
+compdump:44> print -r - \''what'\' \''_sccs'\'
+compdump:43> _d_f=whatis
+compdump:44> print -r - \''whatis'\' \''_man'\'
+compdump:43> _d_f=whence
+compdump:44> print -r - \''whence'\' \''_which'\'
+compdump:43> _d_f=where
+compdump:44> print -r - \''where'\' \''_which'\'
+compdump:43> _d_f=whereis
+compdump:44> print -r - \''whereis'\' \''_whereis'\'
+compdump:43> _d_f=which
+compdump:44> print -r - \''which'\' \''_which'\'
+compdump:43> _d_f=whoami
+compdump:44> print -r - \''whoami'\' \''_nothing'\'
+compdump:43> _d_f=whois
+compdump:44> print -r - \''whois'\' \''_whois'\'
+compdump:43> _d_f=whom
+compdump:44> print -r - \''whom'\' \''_mh'\'
+compdump:43> _d_f=wiggle
+compdump:44> print -r - \''wiggle'\' \''_wiggle'\'
+compdump:43> _d_f=wodim
+compdump:44> print -r - \''wodim'\' \''_cdrecord'\'
+compdump:43> _d_f=wpa_cli
+compdump:44> print -r - \''wpa_cli'\' \''_wpa_cli'\'
+compdump:43> _d_f=write
+compdump:44> print -r - \''write'\' \''_users_on'\'
+compdump:43> _d_f=www
+compdump:44> print -r - \''www'\' \''_webbrowser'\'
+compdump:43> _d_f=xargs
+compdump:44> print -r - \''xargs'\' \''_xargs'\'
+compdump:43> _d_f=xauth
+compdump:44> print -r - \''xauth'\' \''_xauth'\'
+compdump:43> _d_f=xclip
+compdump:44> print -r - \''xclip'\' \''_xclip'\'
+compdump:43> _d_f=xdpyinfo
+compdump:44> print -r - \''xdpyinfo'\' \''_x_utils'\'
+compdump:43> _d_f=xdvi
+compdump:44> print -r - \''xdvi'\' \''_xdvi'\'
+compdump:43> _d_f=xelatex
+compdump:44> print -r - \''xelatex'\' \''_tex'\'
+compdump:43> _d_f=xetex
+compdump:44> print -r - \''xetex'\' \''_tex'\'
+compdump:43> _d_f=xev
+compdump:44> print -r - \''xev'\' \''_x_utils'\'
+compdump:43> _d_f=xfd
+compdump:44> print -r - \''xfd'\' \''_x_utils'\'
+compdump:43> _d_f=xfig
+compdump:44> print -r - \''xfig'\' \''_xfig'\'
+compdump:43> _d_f=xfontsel
+compdump:44> print -r - \''xfontsel'\' \''_x_utils'\'
+compdump:43> _d_f=xhost
+compdump:44> print -r - \''xhost'\' \''_x_utils'\'
+compdump:43> _d_f=xkill
+compdump:44> print -r - \''xkill'\' \''_x_utils'\'
+compdump:43> _d_f=xli
+compdump:44> print -r - \''xli'\' \''_xloadimage'\'
+compdump:43> _d_f=xloadimage
+compdump:44> print -r - \''xloadimage'\' \''_xloadimage'\'
+compdump:43> _d_f=xlsatoms
+compdump:44> print -r - \''xlsatoms'\' \''_x_utils'\'
+compdump:43> _d_f=xmllint
+compdump:44> print -r - \''xmllint'\' \''_xmlsoft'\'
+compdump:43> _d_f=xmms2
+compdump:44> print -r - \''xmms2'\' \''_xmms2'\'
+compdump:43> _d_f=xmodmap
+compdump:44> print -r - \''xmodmap'\' \''_xmodmap'\'
+compdump:43> _d_f=xmosaic
+compdump:44> print -r - \''xmosaic'\' \''_webbrowser'\'
+compdump:43> _d_f=xon
+compdump:44> print -r - \''xon'\' \''_x_utils'\'
+compdump:43> _d_f=xournal
+compdump:44> print -r - \''xournal'\' \''_xournal'\'
+compdump:43> _d_f=xpdf
+compdump:44> print -r - \''xpdf'\' \''_xpdf'\'
+compdump:43> _d_f=xping
+compdump:44> print -r - \''xping'\' \''_hosts'\'
+compdump:43> _d_f=xprop
+compdump:44> print -r - \''xprop'\' \''_x_utils'\'
+compdump:43> _d_f=xrandr
+compdump:44> print -r - \''xrandr'\' \''_xrandr'\'
+compdump:43> _d_f=xrdb
+compdump:44> print -r - \''xrdb'\' \''_x_utils'\'
+compdump:43> _d_f=xscreensaver-command
+compdump:44> print -r - \''xscreensaver-command'\' \''_xscreensaver'\'
+compdump:43> _d_f=xset
+compdump:44> print -r - \''xset'\' \''_xset'\'
+compdump:43> _d_f=xsetbg
+compdump:44> print -r - \''xsetbg'\' \''_xloadimage'\'
+compdump:43> _d_f=xsetroot
+compdump:44> print -r - \''xsetroot'\' \''_x_utils'\'
+compdump:43> _d_f=xsltproc
+compdump:44> print -r - \''xsltproc'\' \''_xmlsoft'\'
+compdump:43> _d_f=xterm
+compdump:44> print -r - \''xterm'\' \''_xterm'\'
+compdump:43> _d_f=xtightvncviewer
+compdump:44> print -r - \''xtightvncviewer'\' \''_vnc'\'
+compdump:43> _d_f=xtp
+compdump:44> print -r - \''xtp'\' \''_imagemagick'\'
+compdump:43> _d_f=xv
+compdump:44> print -r - \''xv'\' \''_xv'\'
+compdump:43> _d_f=xview
+compdump:44> print -r - \''xview'\' \''_xloadimage'\'
+compdump:43> _d_f=xvnc4viewer
+compdump:44> print -r - \''xvnc4viewer'\' \''_vnc'\'
+compdump:43> _d_f=xvncviewer
+compdump:44> print -r - \''xvncviewer'\' \''_vnc'\'
+compdump:43> _d_f=xwd
+compdump:44> print -r - \''xwd'\' \''_x_utils'\'
+compdump:43> _d_f=xwininfo
+compdump:44> print -r - \''xwininfo'\' \''_x_utils'\'
+compdump:43> _d_f=xwit
+compdump:44> print -r - \''xwit'\' \''_xwit'\'
+compdump:43> _d_f=xwud
+compdump:44> print -r - \''xwud'\' \''_x_utils'\'
+compdump:43> _d_f=xz
+compdump:44> print -r - \''xz'\' \''_xz'\'
+compdump:43> _d_f=xzcat
+compdump:44> print -r - \''xzcat'\' \''_xz'\'
+compdump:43> _d_f=yast
+compdump:44> print -r - \''yast'\' \''_yast'\'
+compdump:43> _d_f=yast2
+compdump:44> print -r - \''yast2'\' \''_yast'\'
+compdump:43> _d_f=ypbind
+compdump:44> print -r - \''ypbind'\' \''_yp'\'
+compdump:43> _d_f=ypcat
+compdump:44> print -r - \''ypcat'\' \''_yp'\'
+compdump:43> _d_f=ypmatch
+compdump:44> print -r - \''ypmatch'\' \''_yp'\'
+compdump:43> _d_f=yppasswd
+compdump:44> print -r - \''yppasswd'\' \''_yp'\'
+compdump:43> _d_f=yppoll
+compdump:44> print -r - \''yppoll'\' \''_yp'\'
+compdump:43> _d_f=yppush
+compdump:44> print -r - \''yppush'\' \''_yp'\'
+compdump:43> _d_f=ypserv
+compdump:44> print -r - \''ypserv'\' \''_yp'\'
+compdump:43> _d_f=ypset
+compdump:44> print -r - \''ypset'\' \''_yp'\'
+compdump:43> _d_f=ypwhich
+compdump:44> print -r - \''ypwhich'\' \''_yp'\'
+compdump:43> _d_f=ypxfr
+compdump:44> print -r - \''ypxfr'\' \''_yp'\'
+compdump:43> _d_f=ytalk
+compdump:44> print -r - \''ytalk'\' \''_other_accounts'\'
+compdump:43> _d_f=yum
+compdump:44> print -r - \''yum'\' \''_yum'\'
+compdump:43> _d_f=zargs
+compdump:44> print -r - \''zargs'\' \''_zargs'\'
+compdump:43> _d_f=zathura
+compdump:44> print -r - \''zathura'\' \''_pspdf'\'
+compdump:43> _d_f=zcat
+compdump:44> print -r - \''zcat'\' \''_zcat'\'
+compdump:43> _d_f=zcompile
+compdump:44> print -r - \''zcompile'\' \''_zcompile'\'
+compdump:43> _d_f=zcp
+compdump:44> print -r - \''zcp'\' \''_zmv'\'
+compdump:43> _d_f=zdelattr
+compdump:44> print -r - \''zdelattr'\' \''_zattr'\'
+compdump:43> _d_f=zdump
+compdump:44> print -r - \''zdump'\' \''_zdump'\'
+compdump:43> _d_f=zed
+compdump:44> print -r - \''zed'\' \''_zed'\'
+compdump:43> _d_f=zen
+compdump:44> print -r - \''zen'\' \''_webbrowser'\'
+compdump:43> _d_f=zfs
+compdump:44> print -r - \''zfs'\' \''_zfs'\'
+compdump:43> _d_f=zgetattr
+compdump:44> print -r - \''zgetattr'\' \''_zattr'\'
+compdump:43> _d_f=zip
+compdump:44> print -r - \''zip'\' \''_zip'\'
+compdump:43> _d_f=zipinfo
+compdump:44> print -r - \''zipinfo'\' \''_zip'\'
+compdump:43> _d_f=zle
+compdump:44> print -r - \''zle'\' \''_zle'\'
+compdump:43> _d_f=zlistattr
+compdump:44> print -r - \''zlistattr'\' \''_zattr'\'
+compdump:43> _d_f=zln
+compdump:44> print -r - \''zln'\' \''_zmv'\'
+compdump:43> _d_f=zlogin
+compdump:44> print -r - \''zlogin'\' \''_zlogin'\'
+compdump:43> _d_f=zmail
+compdump:44> print -r - \''zmail'\' \''_mail'\'
+compdump:43> _d_f=zmodload
+compdump:44> print -r - \''zmodload'\' \''_zmodload'\'
+compdump:43> _d_f=zmv
+compdump:44> print -r - \''zmv'\' \''_zmv'\'
+compdump:43> _d_f=zone
+compdump:44> print -r - \''zone'\' \''_hosts'\'
+compdump:43> _d_f=zoneadm
+compdump:44> print -r - \''zoneadm'\' \''_zoneadm'\'
+compdump:43> _d_f=zpool
+compdump:44> print -r - \''zpool'\' \''_zpool'\'
+compdump:43> _d_f=zpty
+compdump:44> print -r - \''zpty'\' \''_zpty'\'
+compdump:43> _d_f=zsetattr
+compdump:44> print -r - \''zsetattr'\' \''_zattr'\'
+compdump:43> _d_f=zsh
+compdump:44> print -r - \''zsh'\' \''_sh'\'
+compdump:43> _d_f=zsh-mime-handler
+compdump:44> print -r - \''zsh-mime-handler'\' \''_zsh-mime-handler'\'
+compdump:43> _d_f=zstat
+compdump:44> print -r - \''zstat'\' \''_stat'\'
+compdump:43> _d_f=zstyle
+compdump:44> print -r - \''zstyle'\' \''_zstyle'\'
+compdump:43> _d_f=ztodo
+compdump:44> print -r - \''ztodo'\' \''_ztodo'\'
+compdump:43> _d_f=zxpdf
+compdump:44> print -r - \''zxpdf'\' \''_xpdf'\'
+compdump:43> _d_f=zypper
+compdump:44> print -r - \''zypper'\' \''_zypper'\'
+compdump:46> print ')'
+compdump:48> print '\n_services=('
+compdump:49> _d_f=-redirect-,<,bunzip2
+compdump:50> print -r - \''-redirect-,<,bunzip2'\' \''bunzip2'\'
+compdump:49> _d_f=-redirect-,<,bzip2
+compdump:50> print -r - \''-redirect-,<,bzip2'\' \''bzip2'\'
+compdump:49> _d_f=-redirect-,<,compress
+compdump:50> print -r - \''-redirect-,<,compress'\' \''compress'\'
+compdump:49> _d_f=-redirect-,<,gunzip
+compdump:50> print -r - \''-redirect-,<,gunzip'\' \''gunzip'\'
+compdump:49> _d_f=-redirect-,<,gzip
+compdump:50> print -r - \''-redirect-,<,gzip'\' \''gzip'\'
+compdump:49> _d_f=-redirect-,<,uncompress
+compdump:50> print -r - \''-redirect-,<,uncompress'\' \''uncompress'\'
+compdump:49> _d_f=-redirect-,<,unxz
+compdump:50> print -r - \''-redirect-,<,unxz'\' \''unxz'\'
+compdump:49> _d_f=-redirect-,<,xz
+compdump:50> print -r - \''-redirect-,<,xz'\' \''xz'\'
+compdump:49> _d_f=-redirect-,>,bzip2
+compdump:50> print -r - \''-redirect-,>,bzip2'\' \''bunzip2'\'
+compdump:49> _d_f=-redirect-,>,compress
+compdump:50> print -r - \''-redirect-,>,compress'\' \''uncompress'\'
+compdump:49> _d_f=-redirect-,>,gzip
+compdump:50> print -r - \''-redirect-,>,gzip'\' \''gunzip'\'
+compdump:49> _d_f=-redirect-,>,xz
+compdump:50> print -r - \''-redirect-,>,xz'\' \''unxz'\'
+compdump:49> _d_f=Mail
+compdump:50> print -r - \''Mail'\' \''mail'\'
+compdump:49> _d_f=bzcat
+compdump:50> print -r - \''bzcat'\' \''bunzip2'\'
+compdump:49> _d_f=dch
+compdump:50> print -r - \''dch'\' \''debchange'\'
+compdump:49> _d_f=gnupod_INIT.pl
+compdump:50> print -r - \''gnupod_INIT.pl'\' \''gnupod_INIT'\'
+compdump:49> _d_f=gnupod_addsong.pl
+compdump:50> print -r - \''gnupod_addsong.pl'\' \''gnupod_addsong'\'
+compdump:49> _d_f=gnupod_check.pl
+compdump:50> print -r - \''gnupod_check.pl'\' \''gnupod_check'\'
+compdump:49> _d_f=gnupod_search.pl
+compdump:50> print -r - \''gnupod_search.pl'\' \''gnupod_search'\'
+compdump:49> _d_f=gzcat
+compdump:50> print -r - \''gzcat'\' \''gunzip'\'
+compdump:49> _d_f=iceweasel
+compdump:50> print -r - \''iceweasel'\' \''firefox'\'
+compdump:49> _d_f=lzcat
+compdump:50> print -r - \''lzcat'\' \''unxz'\'
+compdump:49> _d_f=lzma
+compdump:50> print -r - \''lzma'\' \''xz'\'
+compdump:49> _d_f=mailx
+compdump:50> print -r - \''mailx'\' \''mail'\'
+compdump:49> _d_f=mktunes.pl
+compdump:50> print -r - \''mktunes.pl'\' \''mktunes'\'
+compdump:49> _d_f=nail
+compdump:50> print -r - \''nail'\' \''mail'\'
+compdump:49> _d_f=ncl
+compdump:50> print -r - \''ncl'\' \''nc'\'
+compdump:49> _d_f=nedit-nc
+compdump:50> print -r - \''nedit-nc'\' \''nc'\'
+compdump:49> _d_f=pcat
+compdump:50> print -r - \''pcat'\' \''unpack'\'
+compdump:49> _d_f=remsh
+compdump:50> print -r - \''remsh'\' \''rsh'\'
+compdump:49> _d_f=slogin
+compdump:50> print -r - \''slogin'\' \''ssh'\'
+compdump:49> _d_f=svnadmin-static
+compdump:50> print -r - \''svnadmin-static'\' \''svnadmin'\'
+compdump:49> _d_f=tunes2pod.pl
+compdump:50> print -r - \''tunes2pod.pl'\' \''tunes2pod'\'
+compdump:49> _d_f=unlzma
+compdump:50> print -r - \''unlzma'\' \''unxz'\'
+compdump:49> _d_f=xelatex
+compdump:50> print -r - \''xelatex'\' \''latex'\'
+compdump:49> _d_f=xetex
+compdump:50> print -r - \''xetex'\' \''tex'\'
+compdump:49> _d_f=xzcat
+compdump:50> print -r - \''xzcat'\' \''unxz'\'
+compdump:52> print ')'
+compdump:54> print '\n_patcomps=('
+compdump:55> _d_f=*/(init|rc[0-9S]#).d/*
+compdump:56> print -r - \''*/(init|rc[0-9S]#).d/*'\' \''_init_d'\'
+compdump:55> _d_f=zf*
+compdump:56> print -r - \''zf*'\' \''_zftp'\'
+compdump:58> print ')'
+compdump:60> _d_tmp=_postpatcomps 
+compdump:61> print '\n_postpatcomps=('
+compdump:62> _d_f=(p[bgpn]m*|*top[bgpn]m)
+compdump:63> print -r - \''(p[bgpn]m*|*top[bgpn]m)'\' \''_pbm'\'
+compdump:62> _d_f=(texi(2*|ndex))
+compdump:63> print -r - \''(texi(2*|ndex))'\' \''_texi'\'
+compdump:62> _d_f=(tiff*|*2tiff|pal2rgb)
+compdump:63> print -r - \''(tiff*|*2tiff|pal2rgb)'\' \''_tiff'\'
+compdump:62> _d_f=*/X11(|R<4->)/*
+compdump:63> print -r - \''*/X11(|R<4->)/*'\' \''_x_arguments'\'
+compdump:62> _d_f=-value-,(ftp|http(|s))_proxy,-default-
+compdump:63> print -r - \''-value-,(ftp|http(|s))_proxy,-default-'\' \''_urls'\'
+compdump:62> _d_f=-value-,*PATH,-default-
+compdump:63> print -r - \''-value-,*PATH,-default-'\' \''_dir_list'\'
+compdump:62> _d_f=-value-,*path,-default-
+compdump:63> print -r - \''-value-,*path,-default-'\' \''_directories'\'
+compdump:62> _d_f=-value-,LC_*,-default-
+compdump:63> print -r - \''-value-,LC_*,-default-'\' \''_locales'\'
+compdump:62> _d_f=-value-,RUBY(LIB|OPT|PATH),-default-
+compdump:63> print -r - \''-value-,RUBY(LIB|OPT|PATH),-default-'\' \''_ruby'\'
+compdump:62> _d_f=qemu(|-system-*)
+compdump:63> print -r - \''qemu(|-system-*)'\' \''_qemu'\'
+compdump:62> _d_f=yodl(|2*)
+compdump:63> print -r - \''yodl(|2*)'\' \''_yodl'\'
+compdump:65> print ')'
+compdump:67> print '\n_compautos=('
+compdump:68> _d_f=_call_program
+compdump:69> print -r - \''_call_program'\' \''+X'\'
+compdump:71> print ')'
+compdump:73> print
+compdump:81> _d_bks=( ) 
+compdump:82> typeset '_d_complist='
+compdump:83> zle -lL
+compdump:84> read -rA _d_line
+compdump:85> [[ _bash_complete-word == _* && _bash_completions == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _bash_complete-word .complete-word _bash_completions
+compdump:91> _d_bks+=( _bash_complete-word ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _bash_list-choices == _* && _bash_completions == _* ]]
+compdump:86> [[ -z '' && .list-choices == .menu-select ]]
+compdump:90> print -r - zle -C _bash_list-choices .list-choices _bash_completions
+compdump:91> _d_bks+=( _bash_list-choices ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _complete_debug == _* && _complete_debug == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _complete_debug .complete-word _complete_debug
+compdump:91> _d_bks+=( _complete_debug ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _complete_help == _* && _complete_help == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _complete_help .complete-word _complete_help
+compdump:91> _d_bks+=( _complete_help ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _complete_tag == _* && _complete_tag == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _complete_tag .complete-word _complete_tag
+compdump:91> _d_bks+=( _complete_tag ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _correct_filename == _* && _correct_filename == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _correct_filename .complete-word _correct_filename
+compdump:91> _d_bks+=( _correct_filename ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _correct_word == _* && _correct_word == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _correct_word .complete-word _correct_word
+compdump:91> _d_bks+=( _correct_word ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _expand_alias == _* && _expand_alias == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _expand_alias .complete-word _expand_alias
+compdump:91> _d_bks+=( _expand_alias ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _expand_word == _* && _expand_word == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _expand_word .complete-word _expand_word
+compdump:91> _d_bks+=( _expand_word ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _history-complete-newer == _* && _history_complete_word == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _history-complete-newer .complete-word _history_complete_word
+compdump:91> _d_bks+=( _history-complete-newer ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _history-complete-older == _* && _history_complete_word == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _history-complete-older .complete-word _history_complete_word
+compdump:91> _d_bks+=( _history-complete-older ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _list_expansions == _* && _expand_word == _* ]]
+compdump:86> [[ -z '' && .list-choices == .menu-select ]]
+compdump:90> print -r - zle -C _list_expansions .list-choices _expand_word
+compdump:91> _d_bks+=( _list_expansions ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _most_recent_file == _* && _most_recent_file == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _most_recent_file .complete-word _most_recent_file
+compdump:91> _d_bks+=( _most_recent_file ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _next_tags == _* && _next_tags == _* ]]
+compdump:86> [[ -z '' && .list-choices == .menu-select ]]
+compdump:90> print -r - zle -C _next_tags .list-choices _next_tags
+compdump:91> _d_bks+=( _next_tags ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _read_comp == _* && _read_comp == _* ]]
+compdump:86> [[ -z '' && .complete-word == .menu-select ]]
+compdump:90> print -r - zle -C _read_comp .complete-word _read_comp
+compdump:91> _d_bks+=( _read_comp ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ edit-command-line == _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ expand-or-complete-with-dots == _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ self-insert == _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ zle-line-finish == _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ zle-line-init == _* ]]
+compdump:84> read -rA _d_line
+compdump:94> bindkey
+compdump:95> read -rA _d_line
+compdump:96> [[ set-mark-command == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ beginning-of-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ delete-char-or-list == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ end-of-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ send-break == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-delete-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ expand-or-complete-with-dots == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ clear-screen == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-line-and-down-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ push-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-backward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-forward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ transpose-chars == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-whole-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ quoted-insert == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-kill-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-match-bracket == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ edit-command-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-find-next-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-join == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-buffer == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ infer-next-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ overwrite-mode == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _read_comp == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^X^R'\'' _read_comp'
+compdump:95> read -rA _d_line
+compdump:96> [[ undo == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-cmd-mode == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ exchange-point-and-mark == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ expand-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ what-cursor-position == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _complete_debug == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^X?'\'' _complete_debug'
+compdump:95> read -rA _d_line
+compdump:96> [[ _correct_filename == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^XC'\'' _correct_filename'
+compdump:95> read -rA _d_line
+compdump:96> [[ list-expand == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _expand_alias == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xa'\'' _expand_alias'
+compdump:95> read -rA _d_line
+compdump:96> [[ _correct_word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xc'\'' _correct_word'
+compdump:95> read -rA _d_line
+compdump:96> [[ _list_expansions == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xd'\'' _list_expansions'
+compdump:95> read -rA _d_line
+compdump:96> [[ _expand_word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xe'\'' _expand_word'
+compdump:95> read -rA _d_line
+compdump:96> [[ list-expand == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _complete_help == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xh'\'' _complete_help'
+compdump:95> read -rA _d_line
+compdump:96> [[ _most_recent_file == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xm'\'' _most_recent_file'
+compdump:95> read -rA _d_line
+compdump:96> [[ _next_tags == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xn'\'' _next_tags'
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-backward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-forward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _complete_tag == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xt'\'' _complete_tag'
+compdump:95> read -rA _d_line
+compdump:96> [[ undo == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _bash_list-choices == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^X~'\'' _bash_list-choices'
+compdump:95> read -rA _d_line
+compdump:96> [[ yank == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ list-choices == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ send-break == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-kill-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert-unmeta == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert-unmeta == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ clear-screen == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert-unmeta == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ copy-prev-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ '"' == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ expand-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ quote-region == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ spell-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ quote-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _history-complete-newer == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^[,'\'' _history-complete-newer'
+compdump:95> read -rA _d_line
+compdump:96> [[ neg-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ insert-last-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _history-complete-older == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^[/'\'' _history-complete-older'
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ beginning-of-buffer-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ end-of-buffer-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ which-command == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-and-hold == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ capitalize-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ get-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ run-help == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-case-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-forward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-search == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-search == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ end-of-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ beginning-of-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-backward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ push-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ spell-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ transpose-words == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-case-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ copy-region-as-kill == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ delete-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-history == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ reverse-menu-complete == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ insert-last-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-and-hold == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ capitalize-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ get-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ run-help == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ '"ls^J"' == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ copy-prev-shell-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-forward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-backward == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ push-line == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ spell-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ transpose-words == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-case-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-region == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ execute-named-cmd == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ yank-pop == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ execute-last-named-cmd == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-goto-column == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _bash_complete-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^[~'\'' _bash_complete-word'
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-kill-word == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ undo == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ '"' == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-delete-char == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert == (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:101> print
+compdump:106> _d_als=+compdump:106> typeset +fm '_*'
+compdump:106> _d_als=( _SuSEconfig _a2ps _a2utils _aap _acpi _acpitool _acroread _adb _alias _aliases _all_labels _all_matches _alternative _analyseplugin _ant _antiword _apachectl _apm _approximate _apt _apt-file _apt-move _apt-show-versions _aptitude _arch_archives _arch_namespace _arg_compile _arguments _arp _arping _arrays _assign _at _attr _auto-apt _autocd _awk _axi-cache _bash_completions _baz _be_name _beadm _bind_addresses _bindkey _bison _bittorrent _bogofilter _brace_parameter _brctl _bsd_pkg _btrfs _bts _bug _builtin _bzip2 _bzr _cache_invalid _cal _calendar _call_function _call_program _canonical_paths _cat _ccal _cd _cdbs-edit-patch _cdcd _cdr _cdrdao _cdrecord _chflags _chkconfig _chmod _chown _chrt _clay _coffee _combination _comm _command _command_names _comp_locale _compdef _complete _complete_debug _complete_help _complete_help_generic _complete_tag _compress _condition _configure _coreadm _correct _correct_filename _correct_word _cowsay _cp _cpio _cplay _cryptsetup _cssh _csup _ctags_tags _cut _cvs _cvsup _cygcheck _cygpath _cygrunsrv _cygserver _cygstart _dak _darcs _date _dbus _dchroot _dchroot-dsa _dcop _dcut _dd _deb_packages _debchange _debdiff _debfoster _debsign _default _defaults _delimiters _describe _description _devtodo _df _dhclient _dhcpinfo _dict _dict_words _diff _diff_options _diffstat _dir_list _directories _directory_stack _dirs _disable _dispatch _django _dladm _dlocate _dmidecode _domains _dpatch-edit-patch _dpkg _dpkg-buildpackage _dpkg-cross _dpkg-repack _dpkg_source _dput _dtrace _du _dumpadm _dumper _dupload _dvi _dynamic_directory_name _ecasound _echotc _echoti _elinks _elm _email_addresses _emulate _enable _enscript _env _equal _espeak _etags _ethtool _expand _expand_alias _expand_word _fakeroot _fc _feh _fetch _fetchmail _ffmpeg _figlet _file_descriptors _file_systems _files _find _finger _fink _first _flasher _flex _floppy _flowadm _fmadm _fortune _freebsd-update _fsh _fstat _functions _fuse_arguments _fuse_values _fuser _fusermount _gcc _gcore _gdb _gem _generic _genisoimage _getclip _getconf _getent _getfacl _getmail _git _git-branch _git-buildpackage _git-remote _github _global _global_tags _globflags _globqual_delims _globquals _gnome-gv _gnu_generic _gnupod _gnutls _go _gpg _gphoto2 _gprof _gqview _gradle _graphicsmagick _grep _grep-excuses _groff _groups _growisofs _gs _guard _guilt _gv _gzip _hash _have_glob_qual _hdiutil _heroku _hg _history _history_complete_word _history_modifiers _hosts _hwinfo _iconv _id _ifconfig _iftop _ignored _imagemagick _in_vared _inetadm _init_d _initctl _invoke-rc.d _ionice _ip _ipadm _ipset _iptables _irssi _ispell _iwconfig _java _java_class _jobs _jobs_bg _jobs_builtin _jobs_fg _joe _join _kfmclient _kill _killall _kld _knock _kvno _last _ldd _less _lha _lighttpd _limit _limits _links _lintian _list _list_files _ln _loadkeys _locales _locate _logical_volumes _look _losetup _lp _ls _lscfg _lsdev _lslv _lsof _lspv _lsusb _lsvg _lynx _lzop _mac_applications _mac_files_for_application _madison _mail _mailboxes _main_complete _make _make-kpkg _man _man-preview _match _math _math_params _matlab _md5sum _mdadm _members _mencal _menu _mere _mergechanges _message _metaflac _meteor _mh _mii-tool _mime_types _mkdir _mkshortcut _mkzsh _module _module-assistant _module_math_func _modutils _mondo _monotone _mosh _most_recent_file _mount _mozilla _mpc _mplayer _mt _mtools _mtr _multi_parts _mutt _my_accounts _mysql_utils _mysqldiff _nautilus _ncftp _nedit _net_interfaces _netcat _netscape _netstat _newsgroups _next_label _next_tags _nice _nkf _nm _nmap _nmcli _normal _nothing _notmuch _npm _nslookup _object_classes _okular _oldlist _open _options _options_set _options_unset _osc _other_accounts _pack _parameter _parameters _patch _path_commands _path_files _pax _pbm _pbuilder _pdf _pdftk _perforce _perl _perl_basepods _perl_modules _perldoc _pfctl _pfexec _pgrep _php _physical_volumes _pick_variant _pids _pine _ping _piuparts _pkg-config _pkg5 _pkg_instance _pkgadd _pkginfo _pkgrm _pkgtool _pon _portaudit _portlint _portmaster _ports _portsnap _postfix _postscript _powerd _prcs _precommand _prefix _print _printenv _printers _procstat _prompt _prove _prstat _ps _ps1234 _pscp _pspdf _psutils _ptree _pump _putclip _pydoc _python _qemu _qiv _qtplay _quilt _raggle _rake _ranlib _rar _rcs _read _read_comp _readshortcut _rebootin _redirect _regex_arguments _regex_words _remote_files _renice _reprepro _requested _retrieve_cache _retrieve_mac_apps _ri _rlogin _rm _rpm _rpmbuild _rrdtool _rsync _rubber _ruby _run-help _sablotron _samba _savecore _sccs _sched _schedtool _schroot _screen _sed _sep_parts _service _services _set _set_command _setfacl _setopt _setup _sh _showmount _signals _sisu _slrn _smit _snoop _socket _sockstat _softwareupdate _sort _source _spamassassin _sqlite _sqsh _ssh _sshfs _stat _stgit _store_cache _strace _strip _stty _su _sub_commands _subscript _subversion _sudo _suffix_alias_files _surfraw _svcadm _svccfg _svcprop _svcs _svcs_fmri _svn-buildpackage _sysctl _systemd _tags _tar _tar_archive _tardy _tcpdump _tcpsys _tcptraceroute _telnet _terminals _tex _texi _texinfo _tidy _tiff _tilde _tilde_files _time_zone _tin _tla _tmux _todo.sh _toilet _toolchain-source _topgit _totd _tpb _tpconfig _tracepath _trap _tree _ttyctl _tune2fs _twidge _twisted _typeset _ulimit _uml _unace _uname _unexpand _unhash _uniq _unison _units _unsetopt _update-alternatives _update-rc.d _urls _urpmi _urxvt _uscan _user_admin _user_at_host _user_expand _user_math_func _users _users_on _uzbl _valgrind _value _values _vared _vars _vcsh _vim _vim-addons _vnc _volume_groups _vorbis _vorbiscomment _vserver _vux _w3m _wait _wajig _wakeup_capable_devices _wanna-build _wanted _webbrowser _wget _whereis _which _whois _wiggle _wpa_cli _x_arguments _x_borderwidth _x_color _x_colormapid _x_cursor _x_display _x_extension _x_font _x_geometry _x_keysym _x_locale _x_modifier _x_name _x_resource _x_selection_timeout _x_title _x_utils _x_visual _x_window _xargs _xauth _xclip _xdvi _xfig _xft_fonts _xloadimage _xmlsoft _xmms2 _xmodmap _xournal _xpdf _xrandr _xscreensaver _xset _xt_arguments _xt_session_id _xterm _xv _xwit _xz _yast _yast2 _yodl _yp _yum _zargs _zattr _zcalc_line _zcat _zcompile _zdump _zed _zfs _zfs_dataset _zfs_keysource_props _zfs_pool _zftp _zip _zle _zlogin _zmodload _zmv _zoneadm _zones _zpool _zpty _zsh-mime-handler _zstyle _ztodo _zypper ) 
+compdump:110> integer '_i=5'
+compdump:111> print -n autoload -Uz
+compdump:112> ((  706  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _SuSEconfig'
+compdump:115> ((  ! --_i && 706 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  705  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _a2ps'
+compdump:115> ((  ! --_i && 705 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  704  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _a2utils'
+compdump:115> ((  ! --_i && 704 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  703  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _aap'
+compdump:115> ((  ! --_i && 703 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  702  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _acpi'
+compdump:115> ((  ! --_i && 702 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  701  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _acpitool'
+compdump:115> ((  ! --_i && 701 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  700  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _acroread'
+compdump:115> ((  ! --_i && 700 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  699  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _adb'
+compdump:115> ((  ! --_i && 699 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  698  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _alias'
+compdump:115> ((  ! --_i && 698 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  697  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _aliases'
+compdump:115> ((  ! --_i && 697 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  696  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _all_labels'
+compdump:115> ((  ! --_i && 696 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  695  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _all_matches'
+compdump:115> ((  ! --_i && 695 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  694  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _alternative'
+compdump:115> ((  ! --_i && 694 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  693  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _analyseplugin'
+compdump:115> ((  ! --_i && 693 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  692  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ant'
+compdump:115> ((  ! --_i && 692 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  691  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _antiword'
+compdump:115> ((  ! --_i && 691 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  690  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _apachectl'
+compdump:115> ((  ! --_i && 690 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  689  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _apm'
+compdump:115> ((  ! --_i && 689 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  688  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _approximate'
+compdump:115> ((  ! --_i && 688 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  687  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _apt'
+compdump:115> ((  ! --_i && 687 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  686  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _apt-file'
+compdump:115> ((  ! --_i && 686 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  685  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _apt-move'
+compdump:115> ((  ! --_i && 685 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  684  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _apt-show-versions'
+compdump:115> ((  ! --_i && 684 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  683  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _aptitude'
+compdump:115> ((  ! --_i && 683 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  682  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _arch_archives'
+compdump:115> ((  ! --_i && 682 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  681  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _arch_namespace'
+compdump:115> ((  ! --_i && 681 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  680  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _arg_compile'
+compdump:115> ((  ! --_i && 680 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  679  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _arguments'
+compdump:115> ((  ! --_i && 679 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  678  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _arp'
+compdump:115> ((  ! --_i && 678 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  677  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _arping'
+compdump:115> ((  ! --_i && 677 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  676  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _arrays'
+compdump:115> ((  ! --_i && 676 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  675  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _assign'
+compdump:115> ((  ! --_i && 675 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  674  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _at'
+compdump:115> ((  ! --_i && 674 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  673  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _attr'
+compdump:115> ((  ! --_i && 673 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  672  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _auto-apt'
+compdump:115> ((  ! --_i && 672 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  671  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _autocd'
+compdump:115> ((  ! --_i && 671 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  670  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _awk'
+compdump:115> ((  ! --_i && 670 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  669  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _axi-cache'
+compdump:115> ((  ! --_i && 669 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  668  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bash_completions'
+compdump:115> ((  ! --_i && 668 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  667  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _baz'
+compdump:115> ((  ! --_i && 667 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  666  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _be_name'
+compdump:115> ((  ! --_i && 666 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  665  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _beadm'
+compdump:115> ((  ! --_i && 665 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  664  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bind_addresses'
+compdump:115> ((  ! --_i && 664 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  663  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bindkey'
+compdump:115> ((  ! --_i && 663 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  662  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bison'
+compdump:115> ((  ! --_i && 662 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  661  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bittorrent'
+compdump:115> ((  ! --_i && 661 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  660  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bogofilter'
+compdump:115> ((  ! --_i && 660 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  659  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _brace_parameter'
+compdump:115> ((  ! --_i && 659 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  658  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _brctl'
+compdump:115> ((  ! --_i && 658 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  657  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bsd_pkg'
+compdump:115> ((  ! --_i && 657 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  656  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _btrfs'
+compdump:115> ((  ! --_i && 656 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  655  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bts'
+compdump:115> ((  ! --_i && 655 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  654  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bug'
+compdump:115> ((  ! --_i && 654 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  653  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _builtin'
+compdump:115> ((  ! --_i && 653 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  652  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bzip2'
+compdump:115> ((  ! --_i && 652 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  651  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _bzr'
+compdump:115> ((  ! --_i && 651 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  650  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cache_invalid'
+compdump:115> ((  ! --_i && 650 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  649  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cal'
+compdump:115> ((  ! --_i && 649 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  648  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _calendar'
+compdump:115> ((  ! --_i && 648 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  647  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _call_function'
+compdump:115> ((  ! --_i && 647 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  646  ))
+compdump:113> ((  ! 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  645  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _canonical_paths'
+compdump:115> ((  ! --_i && 645 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  644  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cat'
+compdump:115> ((  ! --_i && 644 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  643  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ccal'
+compdump:115> ((  ! --_i && 643 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  642  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cd'
+compdump:115> ((  ! --_i && 642 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  641  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cdbs-edit-patch'
+compdump:115> ((  ! --_i && 641 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  640  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cdcd'
+compdump:115> ((  ! --_i && 640 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  639  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cdr'
+compdump:115> ((  ! --_i && 639 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  638  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cdrdao'
+compdump:115> ((  ! --_i && 638 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  637  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cdrecord'
+compdump:115> ((  ! --_i && 637 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  636  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _chflags'
+compdump:115> ((  ! --_i && 636 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  635  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _chkconfig'
+compdump:115> ((  ! --_i && 635 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  634  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _chmod'
+compdump:115> ((  ! --_i && 634 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  633  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _chown'
+compdump:115> ((  ! --_i && 633 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  632  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _chrt'
+compdump:115> ((  ! --_i && 632 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  631  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _clay'
+compdump:115> ((  ! --_i && 631 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  630  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _coffee'
+compdump:115> ((  ! --_i && 630 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  629  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _combination'
+compdump:115> ((  ! --_i && 629 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  628  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _comm'
+compdump:115> ((  ! --_i && 628 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  627  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _command'
+compdump:115> ((  ! --_i && 627 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  626  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _command_names'
+compdump:115> ((  ! --_i && 626 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  625  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _comp_locale'
+compdump:115> ((  ! --_i && 625 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  624  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _compdef'
+compdump:115> ((  ! --_i && 624 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  623  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _complete'
+compdump:115> ((  ! --_i && 623 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  622  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _complete_debug'
+compdump:115> ((  ! --_i && 622 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  621  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _complete_help'
+compdump:115> ((  ! --_i && 621 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  620  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _complete_help_generic'
+compdump:115> ((  ! --_i && 620 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  619  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _complete_tag'
+compdump:115> ((  ! --_i && 619 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  618  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _compress'
+compdump:115> ((  ! --_i && 618 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  617  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _condition'
+compdump:115> ((  ! --_i && 617 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  616  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _configure'
+compdump:115> ((  ! --_i && 616 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  615  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _coreadm'
+compdump:115> ((  ! --_i && 615 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  614  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _correct'
+compdump:115> ((  ! --_i && 614 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  613  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _correct_filename'
+compdump:115> ((  ! --_i && 613 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  612  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _correct_word'
+compdump:115> ((  ! --_i && 612 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  611  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cowsay'
+compdump:115> ((  ! --_i && 611 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  610  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cp'
+compdump:115> ((  ! --_i && 610 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  609  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cpio'
+compdump:115> ((  ! --_i && 609 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  608  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cplay'
+compdump:115> ((  ! --_i && 608 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  607  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cryptsetup'
+compdump:115> ((  ! --_i && 607 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  606  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cssh'
+compdump:115> ((  ! --_i && 606 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  605  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _csup'
+compdump:115> ((  ! --_i && 605 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  604  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ctags_tags'
+compdump:115> ((  ! --_i && 604 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  603  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cut'
+compdump:115> ((  ! --_i && 603 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  602  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cvs'
+compdump:115> ((  ! --_i && 602 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  601  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cvsup'
+compdump:115> ((  ! --_i && 601 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  600  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cygcheck'
+compdump:115> ((  ! --_i && 600 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  599  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cygpath'
+compdump:115> ((  ! --_i && 599 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  598  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cygrunsrv'
+compdump:115> ((  ! --_i && 598 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  597  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cygserver'
+compdump:115> ((  ! --_i && 597 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  596  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _cygstart'
+compdump:115> ((  ! --_i && 596 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  595  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dak'
+compdump:115> ((  ! --_i && 595 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  594  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _darcs'
+compdump:115> ((  ! --_i && 594 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  593  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _date'
+compdump:115> ((  ! --_i && 593 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  592  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dbus'
+compdump:115> ((  ! --_i && 592 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  591  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dchroot'
+compdump:115> ((  ! --_i && 591 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  590  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dchroot-dsa'
+compdump:115> ((  ! --_i && 590 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  589  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dcop'
+compdump:115> ((  ! --_i && 589 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  588  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dcut'
+compdump:115> ((  ! --_i && 588 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  587  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dd'
+compdump:115> ((  ! --_i && 587 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  586  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _deb_packages'
+compdump:115> ((  ! --_i && 586 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  585  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _debchange'
+compdump:115> ((  ! --_i && 585 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  584  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _debdiff'
+compdump:115> ((  ! --_i && 584 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  583  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _debfoster'
+compdump:115> ((  ! --_i && 583 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  582  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _debsign'
+compdump:115> ((  ! --_i && 582 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  581  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _default'
+compdump:115> ((  ! --_i && 581 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  580  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _defaults'
+compdump:115> ((  ! --_i && 580 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  579  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _delimiters'
+compdump:115> ((  ! --_i && 579 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  578  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _describe'
+compdump:115> ((  ! --_i && 578 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  577  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _description'
+compdump:115> ((  ! --_i && 577 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  576  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _devtodo'
+compdump:115> ((  ! --_i && 576 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  575  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _df'
+compdump:115> ((  ! --_i && 575 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  574  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dhclient'
+compdump:115> ((  ! --_i && 574 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  573  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dhcpinfo'
+compdump:115> ((  ! --_i && 573 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  572  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dict'
+compdump:115> ((  ! --_i && 572 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  571  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dict_words'
+compdump:115> ((  ! --_i && 571 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  570  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _diff'
+compdump:115> ((  ! --_i && 570 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  569  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _diff_options'
+compdump:115> ((  ! --_i && 569 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  568  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _diffstat'
+compdump:115> ((  ! --_i && 568 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  567  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dir_list'
+compdump:115> ((  ! --_i && 567 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  566  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _directories'
+compdump:115> ((  ! --_i && 566 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  565  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _directory_stack'
+compdump:115> ((  ! --_i && 565 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  564  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dirs'
+compdump:115> ((  ! --_i && 564 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  563  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _disable'
+compdump:115> ((  ! --_i && 563 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  562  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dispatch'
+compdump:115> ((  ! --_i && 562 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  561  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _django'
+compdump:115> ((  ! --_i && 561 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  560  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dladm'
+compdump:115> ((  ! --_i && 560 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  559  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dlocate'
+compdump:115> ((  ! --_i && 559 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  558  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dmidecode'
+compdump:115> ((  ! --_i && 558 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  557  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _domains'
+compdump:115> ((  ! --_i && 557 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  556  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dpatch-edit-patch'
+compdump:115> ((  ! --_i && 556 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  555  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dpkg'
+compdump:115> ((  ! --_i && 555 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  554  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dpkg-buildpackage'
+compdump:115> ((  ! --_i && 554 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  553  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dpkg-cross'
+compdump:115> ((  ! --_i && 553 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  552  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dpkg-repack'
+compdump:115> ((  ! --_i && 552 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  551  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dpkg_source'
+compdump:115> ((  ! --_i && 551 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  550  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dput'
+compdump:115> ((  ! --_i && 550 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  549  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dtrace'
+compdump:115> ((  ! --_i && 549 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  548  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _du'
+compdump:115> ((  ! --_i && 548 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  547  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dumpadm'
+compdump:115> ((  ! --_i && 547 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  546  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dumper'
+compdump:115> ((  ! --_i && 546 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  545  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dupload'
+compdump:115> ((  ! --_i && 545 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  544  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dvi'
+compdump:115> ((  ! --_i && 544 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  543  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _dynamic_directory_name'
+compdump:115> ((  ! --_i && 543 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  542  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ecasound'
+compdump:115> ((  ! --_i && 542 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  541  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _echotc'
+compdump:115> ((  ! --_i && 541 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  540  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _echoti'
+compdump:115> ((  ! --_i && 540 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  539  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _elinks'
+compdump:115> ((  ! --_i && 539 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  538  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _elm'
+compdump:115> ((  ! --_i && 538 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  537  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _email_addresses'
+compdump:115> ((  ! --_i && 537 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  536  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _emulate'
+compdump:115> ((  ! --_i && 536 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  535  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _enable'
+compdump:115> ((  ! --_i && 535 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  534  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _enscript'
+compdump:115> ((  ! --_i && 534 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  533  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _env'
+compdump:115> ((  ! --_i && 533 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  532  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _equal'
+compdump:115> ((  ! --_i && 532 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  531  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _espeak'
+compdump:115> ((  ! --_i && 531 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  530  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _etags'
+compdump:115> ((  ! --_i && 530 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  529  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ethtool'
+compdump:115> ((  ! --_i && 529 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  528  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _expand'
+compdump:115> ((  ! --_i && 528 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  527  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _expand_alias'
+compdump:115> ((  ! --_i && 527 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  526  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _expand_word'
+compdump:115> ((  ! --_i && 526 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  525  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fakeroot'
+compdump:115> ((  ! --_i && 525 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  524  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fc'
+compdump:115> ((  ! --_i && 524 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  523  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _feh'
+compdump:115> ((  ! --_i && 523 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  522  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fetch'
+compdump:115> ((  ! --_i && 522 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  521  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fetchmail'
+compdump:115> ((  ! --_i && 521 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  520  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ffmpeg'
+compdump:115> ((  ! --_i && 520 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  519  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _figlet'
+compdump:115> ((  ! --_i && 519 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  518  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _file_descriptors'
+compdump:115> ((  ! --_i && 518 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  517  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _file_systems'
+compdump:115> ((  ! --_i && 517 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  516  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _files'
+compdump:115> ((  ! --_i && 516 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  515  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _find'
+compdump:115> ((  ! --_i && 515 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  514  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _finger'
+compdump:115> ((  ! --_i && 514 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  513  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fink'
+compdump:115> ((  ! --_i && 513 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  512  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _first'
+compdump:115> ((  ! --_i && 512 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  511  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _flasher'
+compdump:115> ((  ! --_i && 511 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  510  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _flex'
+compdump:115> ((  ! --_i && 510 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  509  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _floppy'
+compdump:115> ((  ! --_i && 509 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  508  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _flowadm'
+compdump:115> ((  ! --_i && 508 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  507  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fmadm'
+compdump:115> ((  ! --_i && 507 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  506  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fortune'
+compdump:115> ((  ! --_i && 506 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  505  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _freebsd-update'
+compdump:115> ((  ! --_i && 505 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  504  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fsh'
+compdump:115> ((  ! --_i && 504 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  503  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fstat'
+compdump:115> ((  ! --_i && 503 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  502  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _functions'
+compdump:115> ((  ! --_i && 502 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  501  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fuse_arguments'
+compdump:115> ((  ! --_i && 501 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  500  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fuse_values'
+compdump:115> ((  ! --_i && 500 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  499  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fuser'
+compdump:115> ((  ! --_i && 499 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  498  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _fusermount'
+compdump:115> ((  ! --_i && 498 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  497  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gcc'
+compdump:115> ((  ! --_i && 497 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  496  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gcore'
+compdump:115> ((  ! --_i && 496 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  495  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gdb'
+compdump:115> ((  ! --_i && 495 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  494  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gem'
+compdump:115> ((  ! --_i && 494 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  493  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _generic'
+compdump:115> ((  ! --_i && 493 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  492  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _genisoimage'
+compdump:115> ((  ! --_i && 492 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  491  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _getclip'
+compdump:115> ((  ! --_i && 491 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  490  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _getconf'
+compdump:115> ((  ! --_i && 490 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  489  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _getent'
+compdump:115> ((  ! --_i && 489 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  488  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _getfacl'
+compdump:115> ((  ! --_i && 488 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  487  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _getmail'
+compdump:115> ((  ! --_i && 487 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  486  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _git'
+compdump:115> ((  ! --_i && 486 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  485  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _git-branch'
+compdump:115> ((  ! --_i && 485 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  484  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _git-buildpackage'
+compdump:115> ((  ! --_i && 484 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  483  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _git-remote'
+compdump:115> ((  ! --_i && 483 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  482  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _github'
+compdump:115> ((  ! --_i && 482 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  481  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _global'
+compdump:115> ((  ! --_i && 481 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  480  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _global_tags'
+compdump:115> ((  ! --_i && 480 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  479  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _globflags'
+compdump:115> ((  ! --_i && 479 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  478  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _globqual_delims'
+compdump:115> ((  ! --_i && 478 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  477  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _globquals'
+compdump:115> ((  ! --_i && 477 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  476  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gnome-gv'
+compdump:115> ((  ! --_i && 476 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  475  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gnu_generic'
+compdump:115> ((  ! --_i && 475 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  474  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gnupod'
+compdump:115> ((  ! --_i && 474 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  473  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gnutls'
+compdump:115> ((  ! --_i && 473 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  472  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _go'
+compdump:115> ((  ! --_i && 472 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  471  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gpg'
+compdump:115> ((  ! --_i && 471 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  470  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gphoto2'
+compdump:115> ((  ! --_i && 470 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  469  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gprof'
+compdump:115> ((  ! --_i && 469 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  468  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gqview'
+compdump:115> ((  ! --_i && 468 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  467  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gradle'
+compdump:115> ((  ! --_i && 467 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  466  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _graphicsmagick'
+compdump:115> ((  ! --_i && 466 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  465  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _grep'
+compdump:115> ((  ! --_i && 465 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  464  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _grep-excuses'
+compdump:115> ((  ! --_i && 464 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  463  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _groff'
+compdump:115> ((  ! --_i && 463 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  462  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _groups'
+compdump:115> ((  ! --_i && 462 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  461  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _growisofs'
+compdump:115> ((  ! --_i && 461 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  460  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gs'
+compdump:115> ((  ! --_i && 460 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  459  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _guard'
+compdump:115> ((  ! --_i && 459 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  458  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _guilt'
+compdump:115> ((  ! --_i && 458 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  457  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gv'
+compdump:115> ((  ! --_i && 457 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  456  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _gzip'
+compdump:115> ((  ! --_i && 456 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  455  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _hash'
+compdump:115> ((  ! --_i && 455 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  454  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _have_glob_qual'
+compdump:115> ((  ! --_i && 454 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  453  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _hdiutil'
+compdump:115> ((  ! --_i && 453 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  452  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _heroku'
+compdump:115> ((  ! --_i && 452 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  451  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _hg'
+compdump:115> ((  ! --_i && 451 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  450  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _history'
+compdump:115> ((  ! --_i && 450 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  449  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _history_complete_word'
+compdump:115> ((  ! --_i && 449 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  448  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _history_modifiers'
+compdump:115> ((  ! --_i && 448 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  447  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _hosts'
+compdump:115> ((  ! --_i && 447 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  446  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _hwinfo'
+compdump:115> ((  ! --_i && 446 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  445  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _iconv'
+compdump:115> ((  ! --_i && 445 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  444  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _id'
+compdump:115> ((  ! --_i && 444 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  443  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ifconfig'
+compdump:115> ((  ! --_i && 443 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  442  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _iftop'
+compdump:115> ((  ! --_i && 442 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  441  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ignored'
+compdump:115> ((  ! --_i && 441 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  440  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _imagemagick'
+compdump:115> ((  ! --_i && 440 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  439  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _in_vared'
+compdump:115> ((  ! --_i && 439 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  438  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _inetadm'
+compdump:115> ((  ! --_i && 438 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  437  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _init_d'
+compdump:115> ((  ! --_i && 437 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  436  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _initctl'
+compdump:115> ((  ! --_i && 436 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  435  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _invoke-rc.d'
+compdump:115> ((  ! --_i && 435 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  434  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ionice'
+compdump:115> ((  ! --_i && 434 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  433  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ip'
+compdump:115> ((  ! --_i && 433 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  432  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ipadm'
+compdump:115> ((  ! --_i && 432 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  431  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ipset'
+compdump:115> ((  ! --_i && 431 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  430  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _iptables'
+compdump:115> ((  ! --_i && 430 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  429  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _irssi'
+compdump:115> ((  ! --_i && 429 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  428  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ispell'
+compdump:115> ((  ! --_i && 428 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  427  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _iwconfig'
+compdump:115> ((  ! --_i && 427 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  426  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _java'
+compdump:115> ((  ! --_i && 426 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  425  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _java_class'
+compdump:115> ((  ! --_i && 425 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  424  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _jobs'
+compdump:115> ((  ! --_i && 424 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  423  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _jobs_bg'
+compdump:115> ((  ! --_i && 423 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  422  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _jobs_builtin'
+compdump:115> ((  ! --_i && 422 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  421  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _jobs_fg'
+compdump:115> ((  ! --_i && 421 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  420  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _joe'
+compdump:115> ((  ! --_i && 420 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  419  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _join'
+compdump:115> ((  ! --_i && 419 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  418  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _kfmclient'
+compdump:115> ((  ! --_i && 418 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  417  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _kill'
+compdump:115> ((  ! --_i && 417 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  416  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _killall'
+compdump:115> ((  ! --_i && 416 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  415  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _kld'
+compdump:115> ((  ! --_i && 415 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  414  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _knock'
+compdump:115> ((  ! --_i && 414 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  413  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _kvno'
+compdump:115> ((  ! --_i && 413 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  412  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _last'
+compdump:115> ((  ! --_i && 412 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  411  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ldd'
+compdump:115> ((  ! --_i && 411 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  410  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _less'
+compdump:115> ((  ! --_i && 410 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  409  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lha'
+compdump:115> ((  ! --_i && 409 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  408  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lighttpd'
+compdump:115> ((  ! --_i && 408 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  407  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _limit'
+compdump:115> ((  ! --_i && 407 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  406  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _limits'
+compdump:115> ((  ! --_i && 406 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  405  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _links'
+compdump:115> ((  ! --_i && 405 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  404  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lintian'
+compdump:115> ((  ! --_i && 404 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  403  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _list'
+compdump:115> ((  ! --_i && 403 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  402  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _list_files'
+compdump:115> ((  ! --_i && 402 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  401  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ln'
+compdump:115> ((  ! --_i && 401 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  400  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _loadkeys'
+compdump:115> ((  ! --_i && 400 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  399  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _locales'
+compdump:115> ((  ! --_i && 399 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  398  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _locate'
+compdump:115> ((  ! --_i && 398 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  397  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _logical_volumes'
+compdump:115> ((  ! --_i && 397 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  396  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _look'
+compdump:115> ((  ! --_i && 396 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  395  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _losetup'
+compdump:115> ((  ! --_i && 395 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  394  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lp'
+compdump:115> ((  ! --_i && 394 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  393  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ls'
+compdump:115> ((  ! --_i && 393 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  392  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lscfg'
+compdump:115> ((  ! --_i && 392 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  391  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lsdev'
+compdump:115> ((  ! --_i && 391 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  390  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lslv'
+compdump:115> ((  ! --_i && 390 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  389  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lsof'
+compdump:115> ((  ! --_i && 389 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  388  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lspv'
+compdump:115> ((  ! --_i && 388 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  387  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lsusb'
+compdump:115> ((  ! --_i && 387 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  386  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lsvg'
+compdump:115> ((  ! --_i && 386 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  385  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lynx'
+compdump:115> ((  ! --_i && 385 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  384  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _lzop'
+compdump:115> ((  ! --_i && 384 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  383  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mac_applications'
+compdump:115> ((  ! --_i && 383 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  382  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mac_files_for_application'
+compdump:115> ((  ! --_i && 382 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  381  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _madison'
+compdump:115> ((  ! --_i && 381 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  380  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mail'
+compdump:115> ((  ! --_i && 380 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  379  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mailboxes'
+compdump:115> ((  ! --_i && 379 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  378  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _main_complete'
+compdump:115> ((  ! --_i && 378 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  377  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _make'
+compdump:115> ((  ! --_i && 377 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  376  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _make-kpkg'
+compdump:115> ((  ! --_i && 376 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  375  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _man'
+compdump:115> ((  ! --_i && 375 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  374  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _man-preview'
+compdump:115> ((  ! --_i && 374 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  373  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _match'
+compdump:115> ((  ! --_i && 373 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  372  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _math'
+compdump:115> ((  ! --_i && 372 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  371  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _math_params'
+compdump:115> ((  ! --_i && 371 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  370  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _matlab'
+compdump:115> ((  ! --_i && 370 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  369  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _md5sum'
+compdump:115> ((  ! --_i && 369 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  368  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mdadm'
+compdump:115> ((  ! --_i && 368 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  367  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _members'
+compdump:115> ((  ! --_i && 367 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  366  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mencal'
+compdump:115> ((  ! --_i && 366 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  365  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _menu'
+compdump:115> ((  ! --_i && 365 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  364  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mere'
+compdump:115> ((  ! --_i && 364 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  363  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mergechanges'
+compdump:115> ((  ! --_i && 363 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  362  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _message'
+compdump:115> ((  ! --_i && 362 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  361  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _metaflac'
+compdump:115> ((  ! --_i && 361 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  360  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _meteor'
+compdump:115> ((  ! --_i && 360 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  359  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mh'
+compdump:115> ((  ! --_i && 359 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  358  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mii-tool'
+compdump:115> ((  ! --_i && 358 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  357  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mime_types'
+compdump:115> ((  ! --_i && 357 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  356  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mkdir'
+compdump:115> ((  ! --_i && 356 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  355  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mkshortcut'
+compdump:115> ((  ! --_i && 355 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  354  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mkzsh'
+compdump:115> ((  ! --_i && 354 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  353  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _module'
+compdump:115> ((  ! --_i && 353 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  352  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _module-assistant'
+compdump:115> ((  ! --_i && 352 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  351  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _module_math_func'
+compdump:115> ((  ! --_i && 351 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  350  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _modutils'
+compdump:115> ((  ! --_i && 350 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  349  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mondo'
+compdump:115> ((  ! --_i && 349 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  348  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _monotone'
+compdump:115> ((  ! --_i && 348 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  347  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mosh'
+compdump:115> ((  ! --_i && 347 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  346  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _most_recent_file'
+compdump:115> ((  ! --_i && 346 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  345  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mount'
+compdump:115> ((  ! --_i && 345 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  344  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mozilla'
+compdump:115> ((  ! --_i && 344 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  343  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mpc'
+compdump:115> ((  ! --_i && 343 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  342  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mplayer'
+compdump:115> ((  ! --_i && 342 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  341  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mt'
+compdump:115> ((  ! --_i && 341 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  340  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mtools'
+compdump:115> ((  ! --_i && 340 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  339  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mtr'
+compdump:115> ((  ! --_i && 339 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  338  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _multi_parts'
+compdump:115> ((  ! --_i && 338 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  337  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mutt'
+compdump:115> ((  ! --_i && 337 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  336  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _my_accounts'
+compdump:115> ((  ! --_i && 336 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  335  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mysql_utils'
+compdump:115> ((  ! --_i && 335 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  334  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _mysqldiff'
+compdump:115> ((  ! --_i && 334 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  333  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nautilus'
+compdump:115> ((  ! --_i && 333 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  332  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ncftp'
+compdump:115> ((  ! --_i && 332 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  331  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nedit'
+compdump:115> ((  ! --_i && 331 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  330  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _net_interfaces'
+compdump:115> ((  ! --_i && 330 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  329  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _netcat'
+compdump:115> ((  ! --_i && 329 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  328  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _netscape'
+compdump:115> ((  ! --_i && 328 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  327  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _netstat'
+compdump:115> ((  ! --_i && 327 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  326  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _newsgroups'
+compdump:115> ((  ! --_i && 326 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  325  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _next_label'
+compdump:115> ((  ! --_i && 325 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  324  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _next_tags'
+compdump:115> ((  ! --_i && 324 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  323  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nice'
+compdump:115> ((  ! --_i && 323 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  322  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nkf'
+compdump:115> ((  ! --_i && 322 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  321  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nm'
+compdump:115> ((  ! --_i && 321 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  320  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nmap'
+compdump:115> ((  ! --_i && 320 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  319  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nmcli'
+compdump:115> ((  ! --_i && 319 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  318  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _normal'
+compdump:115> ((  ! --_i && 318 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  317  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nothing'
+compdump:115> ((  ! --_i && 317 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  316  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _notmuch'
+compdump:115> ((  ! --_i && 316 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  315  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _npm'
+compdump:115> ((  ! --_i && 315 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  314  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _nslookup'
+compdump:115> ((  ! --_i && 314 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  313  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _object_classes'
+compdump:115> ((  ! --_i && 313 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  312  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _okular'
+compdump:115> ((  ! --_i && 312 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  311  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _oldlist'
+compdump:115> ((  ! --_i && 311 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  310  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _open'
+compdump:115> ((  ! --_i && 310 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  309  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _options'
+compdump:115> ((  ! --_i && 309 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  308  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _options_set'
+compdump:115> ((  ! --_i && 308 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  307  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _options_unset'
+compdump:115> ((  ! --_i && 307 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  306  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _osc'
+compdump:115> ((  ! --_i && 306 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  305  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _other_accounts'
+compdump:115> ((  ! --_i && 305 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  304  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pack'
+compdump:115> ((  ! --_i && 304 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  303  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _parameter'
+compdump:115> ((  ! --_i && 303 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  302  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _parameters'
+compdump:115> ((  ! --_i && 302 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  301  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _patch'
+compdump:115> ((  ! --_i && 301 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  300  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _path_commands'
+compdump:115> ((  ! --_i && 300 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  299  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _path_files'
+compdump:115> ((  ! --_i && 299 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  298  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pax'
+compdump:115> ((  ! --_i && 298 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  297  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pbm'
+compdump:115> ((  ! --_i && 297 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  296  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pbuilder'
+compdump:115> ((  ! --_i && 296 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  295  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pdf'
+compdump:115> ((  ! --_i && 295 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  294  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pdftk'
+compdump:115> ((  ! --_i && 294 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  293  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _perforce'
+compdump:115> ((  ! --_i && 293 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  292  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _perl'
+compdump:115> ((  ! --_i && 292 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  291  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _perl_basepods'
+compdump:115> ((  ! --_i && 291 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  290  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _perl_modules'
+compdump:115> ((  ! --_i && 290 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  289  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _perldoc'
+compdump:115> ((  ! --_i && 289 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  288  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pfctl'
+compdump:115> ((  ! --_i && 288 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  287  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pfexec'
+compdump:115> ((  ! --_i && 287 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  286  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pgrep'
+compdump:115> ((  ! --_i && 286 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  285  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _php'
+compdump:115> ((  ! --_i && 285 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  284  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _physical_volumes'
+compdump:115> ((  ! --_i && 284 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  283  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pick_variant'
+compdump:115> ((  ! --_i && 283 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  282  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pids'
+compdump:115> ((  ! --_i && 282 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  281  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pine'
+compdump:115> ((  ! --_i && 281 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  280  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ping'
+compdump:115> ((  ! --_i && 280 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  279  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _piuparts'
+compdump:115> ((  ! --_i && 279 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  278  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pkg-config'
+compdump:115> ((  ! --_i && 278 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  277  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pkg5'
+compdump:115> ((  ! --_i && 277 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  276  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pkg_instance'
+compdump:115> ((  ! --_i && 276 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  275  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pkgadd'
+compdump:115> ((  ! --_i && 275 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  274  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pkginfo'
+compdump:115> ((  ! --_i && 274 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  273  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pkgrm'
+compdump:115> ((  ! --_i && 273 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  272  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pkgtool'
+compdump:115> ((  ! --_i && 272 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  271  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pon'
+compdump:115> ((  ! --_i && 271 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  270  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _portaudit'
+compdump:115> ((  ! --_i && 270 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  269  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _portlint'
+compdump:115> ((  ! --_i && 269 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  268  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _portmaster'
+compdump:115> ((  ! --_i && 268 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  267  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ports'
+compdump:115> ((  ! --_i && 267 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  266  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _portsnap'
+compdump:115> ((  ! --_i && 266 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  265  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _postfix'
+compdump:115> ((  ! --_i && 265 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  264  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _postscript'
+compdump:115> ((  ! --_i && 264 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  263  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _powerd'
+compdump:115> ((  ! --_i && 263 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  262  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _prcs'
+compdump:115> ((  ! --_i && 262 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  261  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _precommand'
+compdump:115> ((  ! --_i && 261 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  260  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _prefix'
+compdump:115> ((  ! --_i && 260 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  259  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _print'
+compdump:115> ((  ! --_i && 259 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  258  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _printenv'
+compdump:115> ((  ! --_i && 258 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  257  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _printers'
+compdump:115> ((  ! --_i && 257 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  256  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _procstat'
+compdump:115> ((  ! --_i && 256 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  255  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _prompt'
+compdump:115> ((  ! --_i && 255 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  254  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _prove'
+compdump:115> ((  ! --_i && 254 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  253  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _prstat'
+compdump:115> ((  ! --_i && 253 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  252  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ps'
+compdump:115> ((  ! --_i && 252 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  251  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ps1234'
+compdump:115> ((  ! --_i && 251 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  250  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pscp'
+compdump:115> ((  ! --_i && 250 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  249  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pspdf'
+compdump:115> ((  ! --_i && 249 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  248  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _psutils'
+compdump:115> ((  ! --_i && 248 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  247  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ptree'
+compdump:115> ((  ! --_i && 247 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  246  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pump'
+compdump:115> ((  ! --_i && 246 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  245  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _putclip'
+compdump:115> ((  ! --_i && 245 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  244  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _pydoc'
+compdump:115> ((  ! --_i && 244 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  243  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _python'
+compdump:115> ((  ! --_i && 243 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  242  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _qemu'
+compdump:115> ((  ! --_i && 242 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  241  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _qiv'
+compdump:115> ((  ! --_i && 241 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  240  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _qtplay'
+compdump:115> ((  ! --_i && 240 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  239  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _quilt'
+compdump:115> ((  ! --_i && 239 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  238  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _raggle'
+compdump:115> ((  ! --_i && 238 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  237  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rake'
+compdump:115> ((  ! --_i && 237 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  236  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ranlib'
+compdump:115> ((  ! --_i && 236 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  235  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rar'
+compdump:115> ((  ! --_i && 235 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  234  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rcs'
+compdump:115> ((  ! --_i && 234 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  233  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _read'
+compdump:115> ((  ! --_i && 233 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  232  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _read_comp'
+compdump:115> ((  ! --_i && 232 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  231  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _readshortcut'
+compdump:115> ((  ! --_i && 231 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  230  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rebootin'
+compdump:115> ((  ! --_i && 230 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  229  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _redirect'
+compdump:115> ((  ! --_i && 229 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  228  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _regex_arguments'
+compdump:115> ((  ! --_i && 228 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  227  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _regex_words'
+compdump:115> ((  ! --_i && 227 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  226  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _remote_files'
+compdump:115> ((  ! --_i && 226 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  225  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _renice'
+compdump:115> ((  ! --_i && 225 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  224  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _reprepro'
+compdump:115> ((  ! --_i && 224 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  223  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _requested'
+compdump:115> ((  ! --_i && 223 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  222  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _retrieve_cache'
+compdump:115> ((  ! --_i && 222 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  221  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _retrieve_mac_apps'
+compdump:115> ((  ! --_i && 221 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  220  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ri'
+compdump:115> ((  ! --_i && 220 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  219  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rlogin'
+compdump:115> ((  ! --_i && 219 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  218  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rm'
+compdump:115> ((  ! --_i && 218 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  217  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rpm'
+compdump:115> ((  ! --_i && 217 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  216  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rpmbuild'
+compdump:115> ((  ! --_i && 216 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  215  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rrdtool'
+compdump:115> ((  ! --_i && 215 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  214  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rsync'
+compdump:115> ((  ! --_i && 214 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  213  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _rubber'
+compdump:115> ((  ! --_i && 213 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  212  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ruby'
+compdump:115> ((  ! --_i && 212 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  211  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _run-help'
+compdump:115> ((  ! --_i && 211 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  210  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sablotron'
+compdump:115> ((  ! --_i && 210 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  209  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _samba'
+compdump:115> ((  ! --_i && 209 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  208  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _savecore'
+compdump:115> ((  ! --_i && 208 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  207  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sccs'
+compdump:115> ((  ! --_i && 207 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  206  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sched'
+compdump:115> ((  ! --_i && 206 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  205  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _schedtool'
+compdump:115> ((  ! --_i && 205 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  204  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _schroot'
+compdump:115> ((  ! --_i && 204 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  203  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _screen'
+compdump:115> ((  ! --_i && 203 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  202  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sed'
+compdump:115> ((  ! --_i && 202 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  201  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sep_parts'
+compdump:115> ((  ! --_i && 201 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  200  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _service'
+compdump:115> ((  ! --_i && 200 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  199  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _services'
+compdump:115> ((  ! --_i && 199 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  198  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _set'
+compdump:115> ((  ! --_i && 198 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  197  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _set_command'
+compdump:115> ((  ! --_i && 197 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  196  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _setfacl'
+compdump:115> ((  ! --_i && 196 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  195  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _setopt'
+compdump:115> ((  ! --_i && 195 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  194  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _setup'
+compdump:115> ((  ! --_i && 194 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  193  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sh'
+compdump:115> ((  ! --_i && 193 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  192  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _showmount'
+compdump:115> ((  ! --_i && 192 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  191  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _signals'
+compdump:115> ((  ! --_i && 191 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  190  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sisu'
+compdump:115> ((  ! --_i && 190 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  189  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _slrn'
+compdump:115> ((  ! --_i && 189 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  188  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _smit'
+compdump:115> ((  ! --_i && 188 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  187  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _snoop'
+compdump:115> ((  ! --_i && 187 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  186  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _socket'
+compdump:115> ((  ! --_i && 186 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  185  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sockstat'
+compdump:115> ((  ! --_i && 185 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  184  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _softwareupdate'
+compdump:115> ((  ! --_i && 184 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  183  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sort'
+compdump:115> ((  ! --_i && 183 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  182  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _source'
+compdump:115> ((  ! --_i && 182 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  181  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _spamassassin'
+compdump:115> ((  ! --_i && 181 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  180  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sqlite'
+compdump:115> ((  ! --_i && 180 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  179  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sqsh'
+compdump:115> ((  ! --_i && 179 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  178  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ssh'
+compdump:115> ((  ! --_i && 178 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  177  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sshfs'
+compdump:115> ((  ! --_i && 177 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  176  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _stat'
+compdump:115> ((  ! --_i && 176 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  175  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _stgit'
+compdump:115> ((  ! --_i && 175 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  174  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _store_cache'
+compdump:115> ((  ! --_i && 174 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  173  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _strace'
+compdump:115> ((  ! --_i && 173 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  172  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _strip'
+compdump:115> ((  ! --_i && 172 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  171  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _stty'
+compdump:115> ((  ! --_i && 171 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  170  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _su'
+compdump:115> ((  ! --_i && 170 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  169  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sub_commands'
+compdump:115> ((  ! --_i && 169 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  168  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _subscript'
+compdump:115> ((  ! --_i && 168 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  167  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _subversion'
+compdump:115> ((  ! --_i && 167 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  166  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sudo'
+compdump:115> ((  ! --_i && 166 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  165  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _suffix_alias_files'
+compdump:115> ((  ! --_i && 165 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  164  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _surfraw'
+compdump:115> ((  ! --_i && 164 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  163  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _svcadm'
+compdump:115> ((  ! --_i && 163 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  162  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _svccfg'
+compdump:115> ((  ! --_i && 162 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  161  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _svcprop'
+compdump:115> ((  ! --_i && 161 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  160  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _svcs'
+compdump:115> ((  ! --_i && 160 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  159  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _svcs_fmri'
+compdump:115> ((  ! --_i && 159 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  158  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _svn-buildpackage'
+compdump:115> ((  ! --_i && 158 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  157  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _sysctl'
+compdump:115> ((  ! --_i && 157 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  156  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _systemd'
+compdump:115> ((  ! --_i && 156 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  155  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tags'
+compdump:115> ((  ! --_i && 155 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  154  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tar'
+compdump:115> ((  ! --_i && 154 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  153  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tar_archive'
+compdump:115> ((  ! --_i && 153 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  152  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tardy'
+compdump:115> ((  ! --_i && 152 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  151  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tcpdump'
+compdump:115> ((  ! --_i && 151 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  150  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tcpsys'
+compdump:115> ((  ! --_i && 150 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  149  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tcptraceroute'
+compdump:115> ((  ! --_i && 149 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  148  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _telnet'
+compdump:115> ((  ! --_i && 148 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  147  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _terminals'
+compdump:115> ((  ! --_i && 147 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  146  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tex'
+compdump:115> ((  ! --_i && 146 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  145  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _texi'
+compdump:115> ((  ! --_i && 145 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  144  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _texinfo'
+compdump:115> ((  ! --_i && 144 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  143  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tidy'
+compdump:115> ((  ! --_i && 143 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  142  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tiff'
+compdump:115> ((  ! --_i && 142 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  141  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tilde'
+compdump:115> ((  ! --_i && 141 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  140  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tilde_files'
+compdump:115> ((  ! --_i && 140 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  139  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _time_zone'
+compdump:115> ((  ! --_i && 139 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  138  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tin'
+compdump:115> ((  ! --_i && 138 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  137  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tla'
+compdump:115> ((  ! --_i && 137 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  136  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tmux'
+compdump:115> ((  ! --_i && 136 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  135  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _todo.sh'
+compdump:115> ((  ! --_i && 135 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  134  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _toilet'
+compdump:115> ((  ! --_i && 134 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  133  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _toolchain-source'
+compdump:115> ((  ! --_i && 133 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  132  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _topgit'
+compdump:115> ((  ! --_i && 132 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  131  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _totd'
+compdump:115> ((  ! --_i && 131 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  130  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tpb'
+compdump:115> ((  ! --_i && 130 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  129  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tpconfig'
+compdump:115> ((  ! --_i && 129 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  128  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tracepath'
+compdump:115> ((  ! --_i && 128 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  127  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _trap'
+compdump:115> ((  ! --_i && 127 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  126  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tree'
+compdump:115> ((  ! --_i && 126 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  125  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ttyctl'
+compdump:115> ((  ! --_i && 125 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  124  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _tune2fs'
+compdump:115> ((  ! --_i && 124 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  123  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _twidge'
+compdump:115> ((  ! --_i && 123 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  122  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _twisted'
+compdump:115> ((  ! --_i && 122 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  121  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _typeset'
+compdump:115> ((  ! --_i && 121 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  120  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ulimit'
+compdump:115> ((  ! --_i && 120 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  119  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _uml'
+compdump:115> ((  ! --_i && 119 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  118  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _unace'
+compdump:115> ((  ! --_i && 118 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  117  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _uname'
+compdump:115> ((  ! --_i && 117 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  116  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _unexpand'
+compdump:115> ((  ! --_i && 116 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  115  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _unhash'
+compdump:115> ((  ! --_i && 115 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  114  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _uniq'
+compdump:115> ((  ! --_i && 114 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  113  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _unison'
+compdump:115> ((  ! --_i && 113 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  112  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _units'
+compdump:115> ((  ! --_i && 112 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  111  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _unsetopt'
+compdump:115> ((  ! --_i && 111 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  110  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _update-alternatives'
+compdump:115> ((  ! --_i && 110 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  109  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _update-rc.d'
+compdump:115> ((  ! --_i && 109 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  108  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _urls'
+compdump:115> ((  ! --_i && 108 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  107  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _urpmi'
+compdump:115> ((  ! --_i && 107 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  106  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _urxvt'
+compdump:115> ((  ! --_i && 106 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  105  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _uscan'
+compdump:115> ((  ! --_i && 105 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  104  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _user_admin'
+compdump:115> ((  ! --_i && 104 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  103  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _user_at_host'
+compdump:115> ((  ! --_i && 103 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  102  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _user_expand'
+compdump:115> ((  ! --_i && 102 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  101  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _user_math_func'
+compdump:115> ((  ! --_i && 101 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  100  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _users'
+compdump:115> ((  ! --_i && 100 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  99  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _users_on'
+compdump:115> ((  ! --_i && 99 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  98  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _uzbl'
+compdump:115> ((  ! --_i && 98 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  97  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _valgrind'
+compdump:115> ((  ! --_i && 97 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  96  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _value'
+compdump:115> ((  ! --_i && 96 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  95  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _values'
+compdump:115> ((  ! --_i && 95 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  94  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vared'
+compdump:115> ((  ! --_i && 94 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  93  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vars'
+compdump:115> ((  ! --_i && 93 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  92  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vcsh'
+compdump:115> ((  ! --_i && 92 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  91  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vim'
+compdump:115> ((  ! --_i && 91 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  90  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vim-addons'
+compdump:115> ((  ! --_i && 90 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  89  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vnc'
+compdump:115> ((  ! --_i && 89 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  88  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _volume_groups'
+compdump:115> ((  ! --_i && 88 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  87  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vorbis'
+compdump:115> ((  ! --_i && 87 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  86  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vorbiscomment'
+compdump:115> ((  ! --_i && 86 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  85  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vserver'
+compdump:115> ((  ! --_i && 85 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  84  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _vux'
+compdump:115> ((  ! --_i && 84 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  83  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _w3m'
+compdump:115> ((  ! --_i && 83 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  82  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wait'
+compdump:115> ((  ! --_i && 82 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  81  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wajig'
+compdump:115> ((  ! --_i && 81 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  80  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wakeup_capable_devices'
+compdump:115> ((  ! --_i && 80 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  79  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wanna-build'
+compdump:115> ((  ! --_i && 79 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  78  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wanted'
+compdump:115> ((  ! --_i && 78 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  77  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _webbrowser'
+compdump:115> ((  ! --_i && 77 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  76  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wget'
+compdump:115> ((  ! --_i && 76 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  75  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _whereis'
+compdump:115> ((  ! --_i && 75 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  74  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _which'
+compdump:115> ((  ! --_i && 74 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  73  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _whois'
+compdump:115> ((  ! --_i && 73 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  72  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wiggle'
+compdump:115> ((  ! --_i && 72 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  71  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _wpa_cli'
+compdump:115> ((  ! --_i && 71 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  70  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_arguments'
+compdump:115> ((  ! --_i && 70 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  69  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_borderwidth'
+compdump:115> ((  ! --_i && 69 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  68  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_color'
+compdump:115> ((  ! --_i && 68 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  67  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_colormapid'
+compdump:115> ((  ! --_i && 67 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  66  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_cursor'
+compdump:115> ((  ! --_i && 66 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  65  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_display'
+compdump:115> ((  ! --_i && 65 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  64  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_extension'
+compdump:115> ((  ! --_i && 64 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  63  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_font'
+compdump:115> ((  ! --_i && 63 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  62  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_geometry'
+compdump:115> ((  ! --_i && 62 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  61  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_keysym'
+compdump:115> ((  ! --_i && 61 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  60  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_locale'
+compdump:115> ((  ! --_i && 60 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  59  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_modifier'
+compdump:115> ((  ! --_i && 59 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  58  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_name'
+compdump:115> ((  ! --_i && 58 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  57  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_resource'
+compdump:115> ((  ! --_i && 57 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  56  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_selection_timeout'
+compdump:115> ((  ! --_i && 56 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  55  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_title'
+compdump:115> ((  ! --_i && 55 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  54  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_utils'
+compdump:115> ((  ! --_i && 54 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  53  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_visual'
+compdump:115> ((  ! --_i && 53 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  52  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _x_window'
+compdump:115> ((  ! --_i && 52 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  51  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xargs'
+compdump:115> ((  ! --_i && 51 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  50  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xauth'
+compdump:115> ((  ! --_i && 50 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  49  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xclip'
+compdump:115> ((  ! --_i && 49 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  48  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xdvi'
+compdump:115> ((  ! --_i && 48 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  47  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xfig'
+compdump:115> ((  ! --_i && 47 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  46  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xft_fonts'
+compdump:115> ((  ! --_i && 46 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  45  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xloadimage'
+compdump:115> ((  ! --_i && 45 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  44  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xmlsoft'
+compdump:115> ((  ! --_i && 44 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  43  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xmms2'
+compdump:115> ((  ! --_i && 43 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  42  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xmodmap'
+compdump:115> ((  ! --_i && 42 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  41  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xournal'
+compdump:115> ((  ! --_i && 41 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  40  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xpdf'
+compdump:115> ((  ! --_i && 40 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  39  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xrandr'
+compdump:115> ((  ! --_i && 39 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  38  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xscreensaver'
+compdump:115> ((  ! --_i && 38 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  37  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xset'
+compdump:115> ((  ! --_i && 37 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  36  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xt_arguments'
+compdump:115> ((  ! --_i && 36 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  35  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xt_session_id'
+compdump:115> ((  ! --_i && 35 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  34  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xterm'
+compdump:115> ((  ! --_i && 34 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  33  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xv'
+compdump:115> ((  ! --_i && 33 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  32  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xwit'
+compdump:115> ((  ! --_i && 32 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  31  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _xz'
+compdump:115> ((  ! --_i && 31 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  30  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _yast'
+compdump:115> ((  ! --_i && 30 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  29  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _yast2'
+compdump:115> ((  ! --_i && 29 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  28  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _yodl'
+compdump:115> ((  ! --_i && 28 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  27  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _yp'
+compdump:115> ((  ! --_i && 27 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  26  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _yum'
+compdump:115> ((  ! --_i && 26 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  25  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zargs'
+compdump:115> ((  ! --_i && 25 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  24  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zattr'
+compdump:115> ((  ! --_i && 24 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  23  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zcalc_line'
+compdump:115> ((  ! --_i && 23 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  22  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zcat'
+compdump:115> ((  ! --_i && 22 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  21  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zcompile'
+compdump:115> ((  ! --_i && 21 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  20  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zdump'
+compdump:115> ((  ! --_i && 20 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  19  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zed'
+compdump:115> ((  ! --_i && 19 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  18  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zfs'
+compdump:115> ((  ! --_i && 18 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  17  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zfs_dataset'
+compdump:115> ((  ! --_i && 17 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  16  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zfs_keysource_props'
+compdump:115> ((  ! --_i && 16 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  15  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zfs_pool'
+compdump:115> ((  ! --_i && 15 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  14  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zftp'
+compdump:115> ((  ! --_i && 14 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  13  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zip'
+compdump:115> ((  ! --_i && 13 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  12  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zle'
+compdump:115> ((  ! --_i && 12 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  11  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zlogin'
+compdump:115> ((  ! --_i && 11 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  10  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zmodload'
+compdump:115> ((  ! --_i && 10 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  9  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zmv'
+compdump:115> ((  ! --_i && 9 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  8  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zoneadm'
+compdump:115> ((  ! --_i && 8 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  7  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zones'
+compdump:115> ((  ! --_i && 7 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  6  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zpool'
+compdump:115> ((  ! --_i && 6 > 1  ))
+compdump:116> _i=5 
+compdump:117> print -n ' \\\n           '
+compdump:120> shift _d_als
+compdump:112> ((  5  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zpty'
+compdump:115> ((  ! --_i && 5 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  4  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zsh-mime-handler'
+compdump:115> ((  ! --_i && 4 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  3  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zstyle'
+compdump:115> ((  ! --_i && 3 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  2  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _ztodo'
+compdump:115> ((  ! --_i && 2 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  1  ))
+compdump:113> ((  ! 0  ))
+compdump:114> print -n ' _zypper'
+compdump:115> ((  ! --_i && 1 > 1  ))
+compdump:120> shift _d_als
+compdump:112> ((  0  ))
+compdump:123> print
+compdump:125> local _c
+compdump:126> _c=_call_program
+compdump:127> print 'autoload -Uz +X _call_program'
+compdump:130> print
+compdump:132> print 'typeset -gUa _comp_assocs'
+compdump:133> print '_comp_assocs=( '\'\'' )'
+compdump:135> mv -f '/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5.coopers-Mac-Pro.local.1369' '/Users/cooperm/.zcompdump-cooper’s Mac Pro-5.0.5'
+compdump:137> unfunction compdump
+compdump:138> autoload -Uz compdump
+compinit:522> _i_line=complete-word
+compinit:525> zle -C complete-word .complete-word _main_complete
+compinit:522> _i_line=delete-char-or-list
+compinit:525> zle -C delete-char-or-list .delete-char-or-list _main_complete
+compinit:522> _i_line=expand-or-complete
+compinit:525> zle -C expand-or-complete .expand-or-complete _main_complete
+compinit:522> _i_line=expand-or-complete-prefix
+compinit:525> zle -C expand-or-complete-prefix .expand-or-complete-prefix _main_complete
+compinit:522> _i_line=list-choices
+compinit:525> zle -C list-choices .list-choices _main_complete
+compinit:522> _i_line=menu-complete
+compinit:525> zle -C menu-complete .menu-complete _main_complete
+compinit:522> _i_line=menu-expand-or-complete
+compinit:525> zle -C menu-expand-or-complete .menu-expand-or-complete _main_complete
+compinit:522> _i_line=reverse-menu-complete
+compinit:525> zle -C reverse-menu-complete .reverse-menu-complete _main_complete
+compinit:527> zle -la menu-select
+compinit:527> zle -C menu-select .menu-select _main_complete
+compinit:531> IFS=' 	' +compinit:531> read -A _i_line
+compinit:531> bindkey '^i'
+compinit:532> [[ expand-or-complete-with-dots == expand-or-complete ]]
+compinit:538> unfunction compinit compaudit
+compinit:539> autoload -Uz compinit compaudit
+compinit:541> return 0
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=git
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git/git.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:2> alias 'g=git'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:3> compdef 'g=git'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 1  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 1  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ 'g=git' == *=* ]]
+compdef:50> ((  1  ))
+compdef:51> [[ 'g=git' == *=* ]]
+compdef:52> cmd=g 
+compdef:53> svc=git 
+compdef:54> func=_git 
+compdef:55> [[ -n '' ]]
+compdef:57> [[ -z _git ]]
+compdef:59> [[ -n _git ]]
+compdef:60> _comps[$cmd]=_git 
+compdef:61> _services[$cmd]=git 
+compdef:70> shift
+compdef:50> ((  0  ))
+compdef:73> return ret
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:4> alias 'gst=git status'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:5> compdef _git 'gst=git-status'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gst=git-status' == -N ]]
+compdef:134> [[ 'gst=git-status' == -p ]]
+compdef:136> [[ 'gst=git-status' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gst=git-status' == *=* ]]
+compdef:156> cmd=gst 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-status 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:6> alias 'gd=git diff'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:7> compdef _git 'gd=git-diff'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gd=git-diff' == -N ]]
+compdef:134> [[ 'gd=git-diff' == -p ]]
+compdef:136> [[ 'gd=git-diff' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gd=git-diff' == *=* ]]
+compdef:156> cmd=gd 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-diff 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:8> alias 'gdc=git diff --cached'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:9> compdef _git 'gdc=git-diff'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gdc=git-diff' == -N ]]
+compdef:134> [[ 'gdc=git-diff' == -p ]]
+compdef:136> [[ 'gdc=git-diff' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gdc=git-diff' == *=* ]]
+compdef:156> cmd=gdc 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-diff 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:10> alias 'gdt=git diff-tree --no-commit-id --name-only -r'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:11> compdef _git 'gdc=git' diff-tree --no-commit-id --name-only -r
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ 'gdc=git' == -N ]]
+compdef:134> [[ 'gdc=git' == -p ]]
+compdef:136> [[ 'gdc=git' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gdc=git' == *=* ]]
+compdef:156> cmd=gdc 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ diff-tree == -N ]]
+compdef:134> [[ diff-tree == -p ]]
+compdef:136> [[ diff-tree == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ diff-tree == *=* ]]
+compdef:159> cmd=diff-tree 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ --no-commit-id == -N ]]
+compdef:134> [[ --no-commit-id == -p ]]
+compdef:136> [[ --no-commit-id == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ --no-commit-id == *=* ]]
+compdef:159> cmd=--no-commit-id 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ --name-only == -N ]]
+compdef:134> [[ --name-only == -p ]]
+compdef:136> [[ --name-only == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ --name-only == *=* ]]
+compdef:159> cmd=--name-only 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -r == -N ]]
+compdef:134> [[ -r == -p ]]
+compdef:136> [[ -r == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -r == *=* ]]
+compdef:159> cmd=-r 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:12> alias 'gl=git pull'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:13> compdef _git 'gl=git-pull'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gl=git-pull' == -N ]]
+compdef:134> [[ 'gl=git-pull' == -p ]]
+compdef:136> [[ 'gl=git-pull' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gl=git-pull' == *=* ]]
+compdef:156> cmd=gl 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-pull 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:14> alias 'gup=git pull --rebase'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:15> compdef _git 'gup=git-fetch'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gup=git-fetch' == -N ]]
+compdef:134> [[ 'gup=git-fetch' == -p ]]
+compdef:136> [[ 'gup=git-fetch' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gup=git-fetch' == *=* ]]
+compdef:156> cmd=gup 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-fetch 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:16> alias 'gp=git push'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:17> compdef _git 'gp=git-push'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gp=git-push' == -N ]]
+compdef:134> [[ 'gp=git-push' == -p ]]
+compdef:136> [[ 'gp=git-push' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gp=git-push' == *=* ]]
+compdef:156> cmd=gp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-push 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:18> alias 'gd=git diff'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:20> compdef _git 'gdv=git-diff'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gdv=git-diff' == -N ]]
+compdef:134> [[ 'gdv=git-diff' == -p ]]
+compdef:136> [[ 'gdv=git-diff' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gdv=git-diff' == *=* ]]
+compdef:156> cmd=gdv 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-diff 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:21> alias 'gdt=git difftool'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:22> alias 'gc=git commit -v'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:23> compdef _git 'gc=git-commit'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gc=git-commit' == -N ]]
+compdef:134> [[ 'gc=git-commit' == -p ]]
+compdef:136> [[ 'gc=git-commit' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gc=git-commit' == *=* ]]
+compdef:156> cmd=gc 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-commit 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:24> alias 'gc!=git commit -v --amend'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:25> compdef _git 'gc!=git-commit'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gc!=git-commit' == -N ]]
+compdef:134> [[ 'gc!=git-commit' == -p ]]
+compdef:136> [[ 'gc!=git-commit' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gc!=git-commit' == *=* ]]
+compdef:156> cmd=gc! 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-commit 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:26> alias 'gca=git commit -v -a'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:27> compdef _git 'gc=git-commit'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gc=git-commit' == -N ]]
+compdef:134> [[ 'gc=git-commit' == -p ]]
+compdef:136> [[ 'gc=git-commit' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gc=git-commit' == *=* ]]
+compdef:156> cmd=gc 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-commit 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:28> alias 'gca!=git commit -v -a --amend'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:29> compdef _git 'gca!=git-commit'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gca!=git-commit' == -N ]]
+compdef:134> [[ 'gca!=git-commit' == -p ]]
+compdef:136> [[ 'gca!=git-commit' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gca!=git-commit' == *=* ]]
+compdef:156> cmd=gca! 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-commit 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:30> alias 'gcmsg=git commit -m'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:31> compdef _git 'gcmsg=git-commit'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gcmsg=git-commit' == -N ]]
+compdef:134> [[ 'gcmsg=git-commit' == -p ]]
+compdef:136> [[ 'gcmsg=git-commit' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gcmsg=git-commit' == *=* ]]
+compdef:156> cmd=gcmsg 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-commit 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:32> alias 'gco=git checkout'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:33> compdef _git 'gco=git-checkout'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gco=git-checkout' == -N ]]
+compdef:134> [[ 'gco=git-checkout' == -p ]]
+compdef:136> [[ 'gco=git-checkout' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gco=git-checkout' == *=* ]]
+compdef:156> cmd=gco 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:34> alias 'gcm=git checkout master'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:35> alias 'gr=git remote'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:36> compdef _git 'gr=git-remote'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gr=git-remote' == -N ]]
+compdef:134> [[ 'gr=git-remote' == -p ]]
+compdef:136> [[ 'gr=git-remote' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gr=git-remote' == *=* ]]
+compdef:156> cmd=gr 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-remote 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:37> alias 'grv=git remote -v'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:38> compdef _git 'grv=git-remote'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grv=git-remote' == -N ]]
+compdef:134> [[ 'grv=git-remote' == -p ]]
+compdef:136> [[ 'grv=git-remote' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grv=git-remote' == *=* ]]
+compdef:156> cmd=grv 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-remote 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:39> alias 'grmv=git remote rename'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:40> compdef _git 'grmv=git-remote'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grmv=git-remote' == -N ]]
+compdef:134> [[ 'grmv=git-remote' == -p ]]
+compdef:136> [[ 'grmv=git-remote' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grmv=git-remote' == *=* ]]
+compdef:156> cmd=grmv 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-remote 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:41> alias 'grrm=git remote remove'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:42> compdef _git 'grrm=git-remote'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grrm=git-remote' == -N ]]
+compdef:134> [[ 'grrm=git-remote' == -p ]]
+compdef:136> [[ 'grrm=git-remote' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grrm=git-remote' == *=* ]]
+compdef:156> cmd=grrm 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-remote 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:43> alias 'grset=git remote set-url'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:44> compdef _git 'grset=git-remote'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grset=git-remote' == -N ]]
+compdef:134> [[ 'grset=git-remote' == -p ]]
+compdef:136> [[ 'grset=git-remote' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grset=git-remote' == *=* ]]
+compdef:156> cmd=grset 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-remote 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:45> alias 'grup=git remote update'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:46> compdef _git 'grset=git-remote'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grset=git-remote' == -N ]]
+compdef:134> [[ 'grset=git-remote' == -p ]]
+compdef:136> [[ 'grset=git-remote' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grset=git-remote' == *=* ]]
+compdef:156> cmd=grset 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-remote 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:47> alias 'grbi=git rebase -i'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:48> compdef _git 'grbi=git-rebase'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grbi=git-rebase' == -N ]]
+compdef:134> [[ 'grbi=git-rebase' == -p ]]
+compdef:136> [[ 'grbi=git-rebase' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grbi=git-rebase' == *=* ]]
+compdef:156> cmd=grbi 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-rebase 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:49> alias 'grbc=git rebase --continue'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:50> compdef _git 'grbc=git-rebase'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grbc=git-rebase' == -N ]]
+compdef:134> [[ 'grbc=git-rebase' == -p ]]
+compdef:136> [[ 'grbc=git-rebase' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grbc=git-rebase' == *=* ]]
+compdef:156> cmd=grbc 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-rebase 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:51> alias 'grba=git rebase --abort'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:52> compdef _git 'grba=git-rebase'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'grba=git-rebase' == -N ]]
+compdef:134> [[ 'grba=git-rebase' == -p ]]
+compdef:136> [[ 'grba=git-rebase' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'grba=git-rebase' == *=* ]]
+compdef:156> cmd=grba 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-rebase 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:53> alias 'gb=git branch'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:54> compdef _git 'gb=git-branch'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gb=git-branch' == -N ]]
+compdef:134> [[ 'gb=git-branch' == -p ]]
+compdef:136> [[ 'gb=git-branch' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gb=git-branch' == *=* ]]
+compdef:156> cmd=gb 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-branch 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:55> alias 'gba=git branch -a'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:56> compdef _git 'gba=git-branch'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gba=git-branch' == -N ]]
+compdef:134> [[ 'gba=git-branch' == -p ]]
+compdef:136> [[ 'gba=git-branch' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gba=git-branch' == *=* ]]
+compdef:156> cmd=gba 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-branch 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:57> alias 'gbr=git branch --remote'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:58> alias 'gcount=git shortlog -sn'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:59> compdef 'gcount=git'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 1  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 1  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ 'gcount=git' == *=* ]]
+compdef:50> ((  1  ))
+compdef:51> [[ 'gcount=git' == *=* ]]
+compdef:52> cmd=gcount 
+compdef:53> svc=git 
+compdef:54> func=_git 
+compdef:55> [[ -n '' ]]
+compdef:57> [[ -z _git ]]
+compdef:59> [[ -n _git ]]
+compdef:60> _comps[$cmd]=_git 
+compdef:61> _services[$cmd]=git 
+compdef:70> shift
+compdef:50> ((  0  ))
+compdef:73> return ret
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:60> alias 'gcl=git config --list'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:61> alias 'gcp=git cherry-pick'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:62> compdef _git 'gcp=git-cherry-pick'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gcp=git-cherry-pick' == -N ]]
+compdef:134> [[ 'gcp=git-cherry-pick' == -p ]]
+compdef:136> [[ 'gcp=git-cherry-pick' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gcp=git-cherry-pick' == *=* ]]
+compdef:156> cmd=gcp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-cherry-pick 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:63> alias 'glg=git log --stat --max-count=10'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:64> compdef _git 'glg=git-log'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glg=git-log' == -N ]]
+compdef:134> [[ 'glg=git-log' == -p ]]
+compdef:136> [[ 'glg=git-log' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glg=git-log' == *=* ]]
+compdef:156> cmd=glg 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:65> alias 'glgg=git log --graph --max-count=10'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:66> compdef _git 'glgg=git-log'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glgg=git-log' == -N ]]
+compdef:134> [[ 'glgg=git-log' == -p ]]
+compdef:136> [[ 'glgg=git-log' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glgg=git-log' == *=* ]]
+compdef:156> cmd=glgg 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:67> alias 'glgga=git log --graph --decorate --all'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:68> compdef _git 'glgga=git-log'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glgga=git-log' == -N ]]
+compdef:134> [[ 'glgga=git-log' == -p ]]
+compdef:136> [[ 'glgga=git-log' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glgga=git-log' == *=* ]]
+compdef:156> cmd=glgga 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:69> alias 'glo=git log --oneline --decorate --color'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:70> compdef _git 'glo=git-log'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glo=git-log' == -N ]]
+compdef:134> [[ 'glo=git-log' == -p ]]
+compdef:136> [[ 'glo=git-log' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glo=git-log' == *=* ]]
+compdef:156> cmd=glo 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:71> alias 'glog=git log --oneline --decorate --color --graph'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:72> compdef _git 'glog=git-log'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glog=git-log' == -N ]]
+compdef:134> [[ 'glog=git-log' == -p ]]
+compdef:136> [[ 'glog=git-log' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glog=git-log' == *=* ]]
+compdef:156> cmd=glog 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:73> alias 'gss=git status -s'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:74> compdef _git 'gss=git-status'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gss=git-status' == -N ]]
+compdef:134> [[ 'gss=git-status' == -p ]]
+compdef:136> [[ 'gss=git-status' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gss=git-status' == *=* ]]
+compdef:156> cmd=gss 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-status 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:75> alias 'ga=git add'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:76> compdef _git 'ga=git-add'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ga=git-add' == -N ]]
+compdef:134> [[ 'ga=git-add' == -p ]]
+compdef:136> [[ 'ga=git-add' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ga=git-add' == *=* ]]
+compdef:156> cmd=ga 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-add 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:77> alias 'gap=git add --patch'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:78> alias 'gaa=git add --all'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:79> alias 'gm=git merge'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:80> compdef _git 'gm=git-merge'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gm=git-merge' == -N ]]
+compdef:134> [[ 'gm=git-merge' == -p ]]
+compdef:136> [[ 'gm=git-merge' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gm=git-merge' == *=* ]]
+compdef:156> cmd=gm 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-merge 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:81> alias 'grh=git reset HEAD'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:82> alias 'grhh=git reset HEAD --hard'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:83> alias 'gclean=git reset --hard && git clean -dfx'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:84> alias 'gwc=git whatchanged -p --abbrev-commit --pretty=medium'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:87> alias 'gcs=git commit -S'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:88> compdef _git 'gcs=git-commit'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gcs=git-commit' == -N ]]
+compdef:134> [[ 'gcs=git-commit' == -p ]]
+compdef:136> [[ 'gcs=git-commit' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gcs=git-commit' == *=* ]]
+compdef:156> cmd=gcs 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-commit 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:89> alias 'gsps=git show --pretty=short --show-signature'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:90> compdef _git 'gsps=git-show'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gsps=git-show' == -N ]]
+compdef:134> [[ 'gsps=git-show' == -p ]]
+compdef:136> [[ 'gsps=git-show' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gsps=git-show' == *=* ]]
+compdef:156> cmd=gsps 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-show 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:93> alias 'gts=git tag -s'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:94> compdef _git 'gts=git-tag'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gts=git-tag' == -N ]]
+compdef:134> [[ 'gts=git-tag' == -p ]]
+compdef:136> [[ 'gts=git-tag' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gts=git-tag' == *=* ]]
+compdef:156> cmd=gts 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-tag 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:95> alias 'gvt=git verify-tag'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:96> compdef _git 'gvt=git' verify-tag
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ 'gvt=git' == -N ]]
+compdef:134> [[ 'gvt=git' == -p ]]
+compdef:136> [[ 'gvt=git' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gvt=git' == *=* ]]
+compdef:156> cmd=gvt 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ verify-tag == -N ]]
+compdef:134> [[ verify-tag == -p ]]
+compdef:136> [[ verify-tag == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ verify-tag == *=* ]]
+compdef:159> cmd=verify-tag 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:101> alias 'gpoat=git push origin --all && git push origin --tags'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:102> alias 'gmt=git mergetool --no-prompt'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:103> compdef _git 'gmt=git-mergetool'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gmt=git-mergetool' == -N ]]
+compdef:134> [[ 'gmt=git-mergetool' == -p ]]
+compdef:136> [[ 'gmt=git-mergetool' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gmt=git-mergetool' == *=* ]]
+compdef:156> cmd=gmt 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-mergetool 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:105> alias 'gg=git gui citool'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:106> alias 'gga=git gui citool --amend'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:107> alias 'gk=gitk --all --branches'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:109> alias 'gsts=git stash show --text'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:110> alias 'gsta=git stash'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:111> alias 'gstp=git stash pop'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:112> alias 'gstd=git stash drop'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:116> alias 'grt=cd $(git rev-parse --show-toplevel || echo ".")'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:119> alias 'git-svn-dcommit-push=git svn dcommit && git push github master:svntrunk'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:120> compdef 'git-svn-dcommit-push=git'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 1  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 1  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ 'git-svn-dcommit-push=git' == *=* ]]
+compdef:50> ((  1  ))
+compdef:51> [[ 'git-svn-dcommit-push=git' == *=* ]]
+compdef:52> cmd=git-svn-dcommit-push 
+compdef:53> svc=git 
+compdef:54> func=_git 
+compdef:55> [[ -n '' ]]
+compdef:57> [[ -z _git ]]
+compdef:59> [[ -n _git ]]
+compdef:60> _comps[$cmd]=_git 
+compdef:61> _services[$cmd]=git 
+compdef:70> shift
+compdef:50> ((  0  ))
+compdef:73> return ret
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:122> alias 'gsr=git svn rebase'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:123> alias 'gsd=git svn dcommit'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:141> alias 'ggpull=git pull origin $(current_branch)'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:142> compdef 'ggpull=git'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 1  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 1  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ 'ggpull=git' == *=* ]]
+compdef:50> ((  1  ))
+compdef:51> [[ 'ggpull=git' == *=* ]]
+compdef:52> cmd=ggpull 
+compdef:53> svc=git 
+compdef:54> func=_git 
+compdef:55> [[ -n '' ]]
+compdef:57> [[ -z _git ]]
+compdef:59> [[ -n _git ]]
+compdef:60> _comps[$cmd]=_git 
+compdef:61> _services[$cmd]=git 
+compdef:70> shift
+compdef:50> ((  0  ))
+compdef:73> return ret
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:143> alias 'ggpur=git pull --rebase origin $(current_branch)'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:144> compdef 'ggpur=git'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 1  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 1  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ 'ggpur=git' == *=* ]]
+compdef:50> ((  1  ))
+compdef:51> [[ 'ggpur=git' == *=* ]]
+compdef:52> cmd=ggpur 
+compdef:53> svc=git 
+compdef:54> func=_git 
+compdef:55> [[ -n '' ]]
+compdef:57> [[ -z _git ]]
+compdef:59> [[ -n _git ]]
+compdef:60> _comps[$cmd]=_git 
+compdef:61> _services[$cmd]=git 
+compdef:70> shift
+compdef:50> ((  0  ))
+compdef:73> return ret
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:145> alias 'ggpush=git push origin $(current_branch)'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:146> compdef 'ggpush=git'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 1  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 1  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ 'ggpush=git' == *=* ]]
+compdef:50> ((  1  ))
+compdef:51> [[ 'ggpush=git' == *=* ]]
+compdef:52> cmd=ggpush 
+compdef:53> svc=git 
+compdef:54> func=_git 
+compdef:55> [[ -n '' ]]
+compdef:57> [[ -z _git ]]
+compdef:59> [[ -n _git ]]
+compdef:60> _comps[$cmd]=_git 
+compdef:61> _services[$cmd]=git 
+compdef:70> shift
+compdef:50> ((  0  ))
+compdef:73> return ret
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:147> alias 'ggpnp=git pull origin $(current_branch) && git push origin $(current_branch)'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:148> compdef 'ggpnp=git'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 1  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 1  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ 'ggpnp=git' == *=* ]]
+compdef:50> ((  1  ))
+compdef:51> [[ 'ggpnp=git' == *=* ]]
+compdef:52> cmd=ggpnp 
+compdef:53> svc=git 
+compdef:54> func=_git 
+compdef:55> [[ -n '' ]]
+compdef:57> [[ -z _git ]]
+compdef:59> [[ -n _git ]]
+compdef:60> _comps[$cmd]=_git 
+compdef:61> _services[$cmd]=git 
+compdef:70> shift
+compdef:50> ((  0  ))
+compdef:73> return ret
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:156> alias 'glp=_git_log_prettily'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:157> compdef _git 'glp=git-log'
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git == *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glp=git-log' == -N ]]
+compdef:134> [[ 'glp=git-log' == -p ]]
+compdef:136> [[ 'glp=git-log' == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glp=git-log' == *=* ]]
+compdef:156> cmd=glp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:170> alias 'gwip=git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m "--wip--"'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:171> alias 'gunwip=git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:174> alias 'gignore=git update-index --assume-unchanged'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:175> alias 'gunignore=git update-index --no-assume-unchanged'
+/Users/cooperm/.oh-my-zsh/plugins/git/git.plugin.zsh:177> alias 'gignored=git ls-files -v | grep "^[[:lower:]]"'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=cloudapp
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/cloudapp/cloudapp.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/cloudapp/cloudapp.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/cloudapp/cloudapp.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/cloudapp/cloudapp.plugin.zsh:2> alias 'cloudapp=/Users/cooperm/.oh-my-zsh/plugins/cloudapp/cloudapp.rb'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=coffee
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/coffee/coffee.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/coffee/coffee.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/coffee/coffee.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/coffee/coffee.plugin.zsh:13> alias 'cfp=coffeeMe "$(pbpaste)"'
+/Users/cooperm/.oh-my-zsh/plugins/coffee/coffee.plugin.zsh:16> alias 'cfpc=cfp | pbcopy'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=colored-man
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/colored-man/colored-man.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/colored-man/colored-man.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/colored-man/colored-man.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/colored-man/colored-man.plugin.zsh:1> [ darwin1 '=' solaris ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=common-aliases
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/common-aliases/common-aliases.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:6> alias 'l=ls -lFh'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:7> alias 'la=ls -lAFh'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:8> alias 'lr=ls -tRFh'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:9> alias 'lt=ls -ltFh'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:10> alias 'll=ls -l'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:11> alias 'ldot=ls -ld .*'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:12> alias 'lS=ls -1FSsh'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:13> alias 'lart=ls -1Fcart'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:14> alias 'lrt=ls -1Fcrt'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:16> alias 'zshrc=vim ~/.zshrc'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:18> alias 'grep=grep --color'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:19> alias 'sgrep=grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:21> alias 't=tail -f'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:24> alias -g 'H=| head'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:25> alias -g 'T=| tail'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:26> alias -g 'G=| grep'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:27> alias -g 'L=| less'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:28> alias -g 'M=| most'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:29> alias -g 'LL=2>&1 | less'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:30> alias -g 'CA=2>&1 | cat -A'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:31> alias -g 'NE=2> /dev/null'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:32> alias -g 'NUL=> /dev/null 2>&1'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:33> alias -g 'P=2>&1| pygmentize -l pytb'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:35> alias 'dud=du -d 1 -h'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:36> alias 'duf=du -sh *'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:37> alias 'fd=find . -type d -name'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:38> alias 'ff=find . -type f -name'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:40> alias 'h=history'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:41> alias 'hgrep=fc -El 0 | grep'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:42> alias 'help=man'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:43> alias 'p=ps -f'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:44> alias 'sortnr=sort -n -r'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:45> alias 'unexport=unset'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:47> alias 'whereami=display_info'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:49> alias 'rm=rm -i'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:50> alias 'cp=cp -i'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:51> alias 'mv=mv -i'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:55> [ 505 -ge 420 ']'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:57> _browser_fts=( htm html de org net com at cx nl se dk dk php ) 
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=htm
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'htm='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=html
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'html='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=de
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'de='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=org
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'org='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=net
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'net='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=com
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'com='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=at
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'at='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=cx
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'cx='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=nl
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'nl='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=se
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'se='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=dk
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'dk='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=dk
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'dk='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> ft=php
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:58> alias -s 'php='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:60> _editor_fts=( cpp cxx cc c hh h inl asc txt TXT tex ) 
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=cpp
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'cpp=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=cxx
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'cxx=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=cc
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'cc=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=c
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'c=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=hh
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'hh=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=h
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'h=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=inl
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'inl=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=asc
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'asc=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=txt
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'txt=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=TXT
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'TXT=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> ft=tex
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:61> alias -s 'tex=subl'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:63> _image_fts=( jpg jpeg png gif mng tiff tif xpm ) 
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=jpg
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'jpg='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=jpeg
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'jpeg='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=png
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'png='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=gif
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'gif='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=mng
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'mng='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=tiff
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'tiff='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=tif
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'tif='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> ft=xpm
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:64> alias -s 'xpm='
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:66> _media_fts=( ape avi flv mkv mov mp3 mpeg mpg ogg ogm rm wav webm ) 
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=ape
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'ape=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=avi
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'avi=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=flv
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'flv=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=mkv
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'mkv=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=mov
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'mov=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=mp3
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'mp3=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=mpeg
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'mpeg=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=mpg
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'mpg=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=ogg
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'ogg=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=ogm
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'ogm=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=rm
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'rm=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=wav
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'wav=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> ft=webm
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:67> alias -s 'webm=mplayer'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:70> alias -s 'pdf=acroread'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:71> alias -s 'ps=gv'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:72> alias -s 'dvi=xdvi'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:73> alias -s 'chm=xchm'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:74> alias -s 'djvu=djview'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:77> alias -s 'zip=unzip -l'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:78> alias -s 'rar=unrar l'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:79> alias -s 'tar=tar tf'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:80> alias -s 'tar.gz=echo '
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:81> alias -s 'ace=unace l'
+/Users/cooperm/.oh-my-zsh/plugins/common-aliases/common-aliases.plugin.zsh:85> zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=gem
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/gem/gem.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/gem/gem.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/gem/gem.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/gem/gem.plugin.zsh:1> alias 'gemb=gem build *.gemspec'
+/Users/cooperm/.oh-my-zsh/plugins/gem/gem.plugin.zsh:2> alias 'gemp=gem push *.gem'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=git-extras
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-extras/git-extras.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh:258> zstyle ':completion:*:*:git:*' user-commands 'changelog:populate changelog file with commits since the previous tag' 'contrib:display author contributions' 'count:count commits' 'delete-branch:delete local and remote branch' 'delete-submodule:delete submodule' 'delete-tag:delete local and remote tag' extras:git-extras 'graft:merge commits from source branch to destination branch' 'squash:merge commits from source branch into the current one as a single commit' 'feature:create a feature branch' 'refactor:create a refactor branch' 'bug:create a bug branch' 'summary:repository summary' 'effort:display effort statistics' repl:read-eval-print-loop 'commits-since:list commits since a given date' 'release:release commit with the given tag' 'alias:define, search and show aliases' 'ignore:add patterns to .gitignore' 'info:show info about the repository' 'create-branch:create local and remote branch' 'fresh-branch:create empty local branch' 'undo:remove the latest commit' 'setup:setup a git repository' 'touch:one step creation of new files' 'obliterate:Completely remove a file from the repository, including past commits and tags' 'local-commits:list unpushed commits on the local branch'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=git-flow
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-flow/git-flow.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh:24> alias 'gf=git flow'
+/Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh:25> alias 'gcd=git checkout develop'
+/Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh:26> alias 'gch=git checkout hotfix'
+/Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh:27> alias 'gcr=git checkout release'
+/Users/cooperm/.oh-my-zsh/plugins/git-flow/git-flow.plugin.zsh:355> zstyle ':completion:*:*:git:*' user-commands 'flow:description for foo'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=git-hubflow
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-hubflow/git-hubflow.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh:348> zstyle ':completion:*:*:git:*' user-commands 'flow:description for foo'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=git-prompt
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-prompt/git-prompt.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:4> export '__GIT_PROMPT_DIR=/Users/cooperm/.oh-my-zsh/plugins/git-prompt'
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:7> setopt PROMPT_SUBST
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:10> typeset -ga preexec_functions
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:11> typeset -ga precmd_functions
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:12> typeset -ga chpwd_functions
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:15> preexec_functions+=preexec_update_git_vars 
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:16> precmd_functions+=precmd_update_git_vars 
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:17> chpwd_functions+=chpwd_update_git_vars 
+/Users/cooperm/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh:57> RPROMPT='$(prompt_git_info)' 
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=osx
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/osx/osx.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/osx/osx.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/osx/osx.plugin.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=meteor
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/meteor/meteor.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/meteor/meteor.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=heroku
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/heroku/heroku.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/heroku/heroku.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=github
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/github/github.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:2> [ hub ']'
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:2> [ ruby ']'
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:4> declare -f _git
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:5> _git
+_git:50> ((  0  ))
+_git:95> ((  0  ))
+_git:130> ((  0  ))
+_git:177> ((  0  ))
+_git:189> ((  0  ))
+_git:280> ((  1  ))
+_git:348> ((  0  ))
+_git:402> ((  0  ))
+_git:413> ((  0  ))
+_git:419> ((  0  ))
+_git:496> ((  0  ))
+_git:515> ((  0  ))
+_git:520> ((  0  ))
+_git:577> ((  0  ))
+_git:621> ((  0  ))
+_git:633> ((  0  ))
+_git:690> ((  0  ))
+_git:708> ((  0  ))
+_git:792> ((  0  ))
+_git:822> ((  0  ))
+_git:881> ((  0  ))
+_git:891> ((  0  ))
+_git:991> ((  0  ))
+_git:1047> ((  0  ))
+_git:1058> ((  0  ))
+_git:1106> ((  0  ))
+_git:1120> ((  0  ))
+_git:1143> ((  0  ))
+_git:1225> ((  0  ))
+_git:1240> ((  0  ))
+_git:1271> ((  0  ))
+_git:1309> ((  0  ))
+_git:1339> ((  0  ))
+_git:1353> ((  0  ))
+_git:1376> ((  0  ))
+_git:1439> ((  0  ))
+_git:1467> ((  0  ))
+_git:1555> ((  0  ))
+_git:1578> ((  0  ))
+_git:1695> ((  0  ))
+_git:1731> ((  0  ))
+_git:1736> ((  0  ))
+_git:1743> ((  0  ))
+_git:2834> ((  0  ))
+_git:2858> ((  0  ))
+_git:2880> ((  0  ))
+_git:2902> ((  0  ))
+_git:2913> ((  0  ))
+_git:2922> ((  0  ))
+_git:2931> ((  0  ))
+_git:3005> ((  0  ))
+_git:3015> ((  1  ))
+_git:3114> ((  0  ))
+_git:3132> ((  0  ))
+_git:3145> ((  0  ))
+_git:3197> ((  0  ))
+_git:3208> ((  0  ))
+_git:3215> ((  0  ))
+_git:3230> ((  0  ))
+_git:3248> ((  0  ))
+_git:3253> ((  0  ))
+_git:3264> ((  0  ))
+_git:3296> ((  0  ))
+_git:3304> ((  0  ))
+_git:3330> ((  0  ))
+_git:3403> ((  0  ))
+_git:3445> ((  0  ))
+_git:3452> ((  0  ))
+_git:3465> ((  0  ))
+_git:3481> ((  0  ))
+_git:3502> ((  0  ))
+_git:3529> ((  0  ))
+_git:3541> ((  0  ))
+_git:3546> ((  0  ))
+_git:3554> ((  0  ))
+_git:3563> ((  0  ))
+_git:3608> ((  0  ))
+_git:3861> ((  0  ))
+_git:3886> ((  0  ))
+_git:3908> ((  0  ))
+_git:3923> ((  0  ))
+_git:3938> ((  0  ))
+_git:3959> ((  0  ))
+_git:3988> ((  0  ))
+_git:4005> ((  0  ))
+_git:4010> ((  0  ))
+_git:4018> ((  0  ))
+_git:4060> ((  0  ))
+_git:4067> ((  0  ))
+_git:4109> ((  0  ))
+_git:4120> ((  0  ))
+_git:4129> ((  0  ))
+_git:4167> ((  0  ))
+_git:4178> ((  0  ))
+_git:4188> ((  0  ))
+_git:4202> ((  0  ))
+_git:4214> ((  0  ))
+_git:4231> ((  0  ))
+_git:4282> ((  0  ))
+_git:4298> ((  0  ))
+_git:4333> ((  0  ))
+_git:4346> ((  0  ))
+_git:4373> ((  0  ))
+_git:4384> ((  0  ))
+_git:4397> ((  0  ))
+_git:4406> ((  0  ))
+_git:4439> ((  0  ))
+_git:4444> ((  0  ))
+_git:4461> ((  0  ))
+_git:4468> ((  0  ))
+_git:4478> ((  0  ))
+_git:4488> ((  0  ))
+_git:4523> ((  0  ))
+_git:4540> ((  0  ))
+_git:4545> ((  0  ))
+_git:4564> ((  0  ))
+_git:4570> ((  0  ))
+_git:4584> ((  0  ))
+_git:4599> ((  0  ))
+_git:4609> ((  0  ))
+_git:4654> ((  0  ))
+_git:4660> ((  0  ))
+_git:4674> ((  0  ))
+_git:4720> ((  0  ))
+_git:4732> ((  0  ))
+_git:4741> ((  0  ))
+_git:4756> ((  0  ))
+_git:4767> ((  0  ))
+_git:4772> ((  0  ))
+_git:4779> ((  0  ))
+_git:4790> ((  1  ))
+_git:4799> ((  0  ))
+_git:4804> ((  0  ))
+_git:4809> ((  0  ))
+_git:4814> ((  0  ))
+_git:4819> ((  0  ))
+_git:4823> ((  0  ))
+_git:4828> ((  0  ))
+_git:4833> ((  0  ))
+_git:4843> ((  0  ))
+_git:4849> ((  0  ))
+_git:4861> ((  0  ))
+_git:4872> ((  0  ))
+_git:4883> ((  0  ))
+_git:5086> ((  0  ))
+_git:5094> ((  0  ))
+_git:5105> ((  0  ))
+_git:5121> ((  0  ))
+_git:5129> ((  0  ))
+_git:5140> ((  0  ))
+_git:5150> ((  0  ))
+_git:5164> ((  1  ))
+_git:5173> ((  0  ))
+_git:5190> ((  0  ))
+_git:5202> ((  0  ))
+_git:5216> ((  0  ))
+_git:5224> ((  0  ))
+_git:5240> ((  0  ))
+_git:5254> ((  0  ))
+_git:5265> ((  0  ))
+_git:5277> ((  0  ))
+_git:5293> ((  0  ))
+_git:5310> ((  0  ))
+_git:5347> ((  0  ))
+_git:5354> ((  0  ))
+_git:5365> ((  0  ))
+_git:5380> ((  0  ))
+_git:5393> ((  1  ))
+_git:5404> ((  0  ))
+_git:5415> ((  0  ))
+_git:5426> ((  0  ))
+_git:5436> ((  0  ))
+_git:5452> ((  0  ))
+_git:5457> ((  0  ))
+_git:5462> ((  0  ))
+_git:5469> ((  0  ))
+_git:5480> ((  0  ))
+_git:5485> ((  0  ))
+_git:5491> ((  0  ))
+_git:5497> ((  0  ))
+_git:5506> ((  0  ))
+_git:5513> ((  0  ))
+_git:5518> ((  0  ))
+_git:5523> ((  0  ))
+_git:5535> ((  0  ))
+_git:5548> ((  0  ))
+_git:5559> ((  0  ))
+_git:5564> ((  0  ))
+_git:5569> ((  0  ))
+_git:5584> ((  0  ))
+_git:5605> ((  0  ))
+_git:5618> ((  0  ))
+_git:5623> ((  0  ))
+_git:5636> ((  0  ))
+_git:5669> ((  0  ))
+_git:5693> ((  0  ))
+_git:5698> ((  0  ))
+_git:5703> ((  0  ))
+_git:5708> ((  0  ))
+_git:5713> ((  0  ))
+_git:5718> ((  0  ))
+_git:5723> ((  0  ))
+_git:5728> ((  0  ))
+_git:5733> ((  0  ))
+_git:5745> ((  0  ))
+_git:5757> ((  0  ))
+_git:5764> ((  0  ))
+_git:5791> ((  0  ))
+_git:5804> ((  0  ))
+_git:5811> ((  0  ))
+_git:5818> ((  0  ))
+_git:5829> ((  0  ))
+_git:5867> ((  0  ))
+_git:5876> ((  0  ))
+_git:5881> ((  0  ))
+_git:5887> ((  0  ))
+_git:5892> ((  0  ))
+_git:5899> ((  0  ))
+_git:5911> ((  0  ))
+_git:5995> ((  0  ))
+_git:6094> ((  0  ))
+_git:6118> ((  0  ))
+_git:6145> ((  0  ))
+_git:6161> ((  0  ))
+_git:6173> ((  0  ))
+_git:6205> ((  0  ))
+_git:6236> ((  0  ))
+_git:6255> ((  0  ))
+_git:6287> ((  0  ))
+_git:6292> ((  0  ))
+_git:6337> ((  0  ))
+_git:6342> ((  0  ))
+_git:6347> ((  0  ))
+_git:6357> ((  0  ))
+_git:6363> ((  0  ))
+_git:6368> ((  0  ))
+_git:6373> ((  0  ))
+_git:6382> ((  0  ))
+_git:6387> ((  0  ))
+_git:6394> ((  0  ))
+_git:6404> ((  0  ))
+_git:6418> ((  0  ))
+_git:6427> ((  0  ))
+_git:6512> declare -gUa _git_third_party_commands
+_git:6513> _git_third_party_commands=( ) 
+_git:6515> local file
+_git:6537> _git
+_git:1> ((  CURRENT > 2  ))
+_git:24> integer 'ret=1'
+_git:26> [[ '' == git ]]
+_git:68> _call_function ret _
+_call_function:15> local _name _ret
+_call_function:17> [[ ret != (|-) ]]
+_call_function:17> _name=ret 
+_call_function:19> shift
+_call_function:21> ((  0  ))
+_call_function:32> return 1
+_git:71> return ret
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:8> declare -f _git_commands
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:9> _hub_commands=( 'alias:show shell instructions for wrapping git' 'pull-request:open a pull request on GitHub' 'fork:fork origin repo on GitHub' 'create:create new repo on GitHub for the current project' 'browse:browse the project on GitHub' 'compare:open GitHub compare view' ) 
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:18> declare -f _git_commands
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:18> sed -e 's/base_commands=(/base_commands=(${_hub_commands} /'
+/Users/cooperm/.oh-my-zsh/plugins/github/github.plugin.zsh:18> eval '_git_commands () {
	local -a main_porcelain_commands
	main_porcelain_commands=(add:'\''add file contents to index'\'' am:'\''apply patches from a mailbox'\'' archive:'\''create archive of files from named tree'\'' bisect:'\''find, by binary search, change that introduced a bug'\'' branch:'\''list, create, or delete branches'\'' bundle:'\''move objects and refs by archive'\'' checkout:'\''checkout branch or paths to working tree'\'' cherry-pick:'\''apply changes introduced by some existing commits'\'' citool:'\''graphical alternative to git commit'\'' clean:'\''remove untracked files from working tree'\'' clone:'\''clone repository into new directory'\'' commit:'\''record changes to repository'\'' describe:'\''show most recent tag that is reachable from a commit'\'' diff:'\''show changes between commits, commit and working tree, etc.'\'' fetch:'\''download objects and refs from another repository'\'' format-patch:'\''prepare patches for e-mail submission'\'' gc:'\''cleanup unnecessary files and optimize local repository'\'' grep:'\''print lines matching a pattern'\'' gui:'\''run portable graphical interface to git'\'' init:'\''create empty git repository or re-initialize an existing one'\'' log:'\''show commit logs'\'' merge:'\''join two or more development histories together'\'' mv:'\''move or rename file, directory, or symlink'\'' notes:'\''add or inspect object notes'\'' pull:'\''fetch from and merge with another repository or local branch'\'' push:'\''update remote refs along with associated objects'\'' rebase:'\''forward-port local commits to the updated upstream head'\'' reset:'\''reset current HEAD to specified state'\'' revert:'\''revert existing commits'\'' rm:'\''remove files from the working tree and from the index'\'' shortlog:'\''summarize git log output'\'' show:'\''show various types of objects'\'' stash:'\''stash away changes to dirty working directory'\'' status:'\''show working-tree status'\'' submodule:'\''initialize, update, or inspect submodules'\'' tag:'\''create, list, delete or verify tag object signed with GPG'\'') 
	local -a ancillary_manipulator_commands
	ancillary_manipulator_commands=(config:'\''get and set repository or global options'\'' fast-export:'\''data exporter'\'' fast-import:'\''import information into git directly'\'' filter-branch:'\''rewrite branches'\'' mergetool:'\''run merge conflict resolution tools to resolve merge conflicts'\'' pack-refs:'\''pack heads and tags for efficient repository access'\'' prune:'\''prune all unreachable objects from the object database'\'' reflog:'\''manage reflog information'\'' relink:'\''hardlink common objects in local repositories'\'' remote:'\''manage set of tracked repositories'\'' repack:'\''pack unpacked objects in a repository'\'' replace:'\''create, list, delete refs to replace objects'\'') 
	local -a ancillary_interrogator_commands
	ancillary_interrogator_commands=(blame:'\''show what revision and author last modified each line of a file'\'' cherry:'\''find commits not merged upstream'\'' count-objects:'\''count unpacked objects and display their disk consumption'\'' difftool:'\''show changes using common diff tools'\'' fsck:'\''verify connectivity and validity of objects in database'\'' get-tar-commit-id:'\''extract commit ID from an archive created using git archive'\'' help:'\''display help information about git'\'' instaweb:'\''instantly browse your working repository in gitweb'\'' merge-tree:'\''show three-way merge without touching index'\'' rerere:'\''reuse recorded resolution of conflicted merges'\'' rev-parse:'\''pick out and massage parameters for other git commands'\'' show-branch:'\''show branches and their commits'\'' verify-tag:'\''check GPG signature of tags'\'' whatchanged:'\''show commit-logs and differences they introduce'\'') 
	local -a interaction_commands
	interaction_commands=(archimport:'\''import an Arch repository into git'\'' cvsexportcommit:'\''export a single commit to a CVS checkout'\'' cvsimport:'\''import a CVS "repository" into a git repository'\'' cvsserver:'\''run a CVS server emulator for git'\'' imap-send:'\''send a collection of patches to an IMAP folder'\'' quiltimport:'\''apply a quilt patchset'\'' request-pull:'\''generate summary of pending changes'\'' send-email:'\''send collection of patches as emails'\'' svn:'\''bidirectional operation between a Subversion repository and git'\'') 
	local -a plumbing_manipulator_commands
	plumbing_manipulator_commands=(apply:'\''apply patch to files and/or to index'\'' checkout-index:'\''copy files from index to working directory'\'' commit-tree:'\''create new commit object'\'' hash-object:'\''compute object ID and optionally create a blob from a file'\'' index-pack:'\''build pack index file for an existing packed archive'\'' merge-file:'\''run a three-way file merge'\'' merge-index:'\''run merge for files needing merging'\'' mktag:'\''create tag object'\'' mktree:'\''build tree-object from git ls-tree formatted text'\'' pack-objects:'\''create packed archive of objects'\'' prune-packed:'\''remove extra objects that are already in pack files'\'' read-tree:'\''read tree information into directory index'\'' symbolic-ref:'\''read and modify symbolic references'\'' unpack-objects:'\''unpack objects from packed archive'\'' update-index:'\''register file contents in the working directory to the index'\'' update-ref:'\''update object name stored in a reference safely'\'' write-tree:'\''create tree from the current index'\'') 
	local -a plumbing_interrogator_commands
	plumbing_interrogator_commands=(cat-file:'\''provide content or type information for repository objects'\'' diff-files:'\''compare files in working tree and index'\'' diff-index:'\''compare content and mode of blobs between index and repository'\'' diff-tree:'\''compare content and mode of blobs found via two tree objects'\'' for-each-ref:'\''output information on each ref'\'' ls-files:'\''information about files in index/working directory'\'' ls-remote:'\''show references in a remote repository'\'' ls-tree:'\''list contents of a tree object'\'' merge-base:'\''find as good a common ancestor as possible for a merge'\'' name-rev:'\''find symbolic names for given revisions'\'' pack-redundant:'\''find redundant pack files'\'' rev-list:'\''list commit object in reverse chronological order'\'' show-index:'\''show packed archive index'\'' show-ref:'\''list references in a local repository'\'' unpack-file:'\''create temporary file with blob'\''\'\'\''s contents'\'' var:'\''show git logical variable'\'' verify-pack:'\''validate packed git archive files'\'') 
	local -a plumbing_sync_commands
	plumbing_sync_commands=(daemon:'\''run a really simple server for git repositories'\'' fetch-pack:'\''receive missing objects from another repository'\'' http-backend:'\''run a server side implementation of Git over HTTP'\'' send-pack:'\''push objects over git protocol to another repository'\'' update-server-info:'\''update auxiliary information file to help dumb servers'\'') 
	local -a plumbing_sync_helper_commands
	plumbing_sync_helper_commands=(http-fetch:'\''download from remote git repository via HTTP'\'' http-push:'\''push objects over HTTP/DAV to another repository'\'' parse-remote:'\''routines to help parsing remote repository access parameters'\'' receive-pack:'\''receive what is pushed into repository'\'' shell:'\''restricted login shell for GIT-only SSH access'\'' upload-archive:'\''send archive back to git-archive'\'' upload-pack:'\''send objects packed back to git fetch-pack'\'') 
	local -a plumbing_internal_helper_commands
	plumbing_internal_helper_commands=(check-attr:'\''display gitattributes information'\'' check-ignore:'\''debug gitignore/exclude files'\'' check-mailmap:'\''show canonical names and email addresses of contacts'\'' check-ref-format:'\''ensure that a reference name is well formed'\'' fmt-merge-msg:'\''produce merge commit message'\'' mailinfo:'\''extract patch and authorship from a single email message'\'' mailsplit:'\''split mbox file into a list of files'\'' merge-one-file:'\''standard helper-program to use with git merge-index'\'' patch-id:'\''compute unique ID for a patch'\'' stripspace:'\''filter out empty lines'\'') 
	local -a user_commands
	zstyle -a :completion:$curcontext: user-commands user_commands
	local -a third_party_commands
	local command
	for command in $_git_third_party_commands
	do
		(( $+commands[git-${command%%:*}] )) && third_party_commands+=$command 
	done
	local -a aliases unique_aliases
	__git_extract_aliases
	local alias
	for alias in $aliases
	do
		local name=${alias%%:*}
		(( main_porcelain_commands[(I)$name:*] ||
       user_commands[(I)$name:*] ||
       third_party_commands[(I)$name:*] ||
       ancillary_manipulator_commands[(I)$name:*] ||
       ancillary_interrogator_commands[(I)$name:*] ||
       interaction_commands[(I)$name:*] ||
       plumbing_manipulator_commands[(I)$name:*] ||
       plumbing_interrogator_commands[(I)$name:*] ||
       plumbing_sync_commands[(I)$name:*] ||
       plumbing_sync_helper_commands[(I)$name:*] ||
       plumbing_internal_helper_commands[(I)$name:*] )) || unique_aliases+=$alias 
	done
	integer ret=1
	_describe -t aliases alias unique_aliases && ret=0 
	_describe -t main-porcelain-commands '\''main porcelain command'\'' main_porcelain_commands && ret=0 
	_describe -t user-commands '\''user command'\'' user_commands && ret=0 
	_describe -t third-party-commands '\''third-party command'\'' third_party_commands && ret=0 
	_describe -t ancillary-manipulator-commands '\''ancillary manipulator command'\'' ancillary_manipulator_commands && ret=0 
	_describe -t ancillary-interrogator-commands '\''ancillary interrogator command'\'' ancillary_interrogator_commands && ret=0 
	_describe -t interaction-commands '\''interaction command'\'' interaction_commands && ret=0 
	_describe -t plumbing-manipulator-commands '\''plumbing manipulator command'\'' plumbing_manipulator_commands && ret=0 
	_describe -t plumbing-interrogator-commands '\''plumbing interrogator command'\'' plumbing_interrogator_commands && ret=0 
	_describe -t plumbing-sync-commands '\''plumbing sync command'\'' plumbing_sync_commands && ret=0 
	_describe -t plumbing-sync-helper-commands '\''plumbing sync helper command'\'' plumbing_sync_helper_commands && ret=0 
	_describe -t plumbing-internal-helper-commands '\''plumbing internal helper command'\'' plumbing_internal_helper_commands && ret=0 
	return ret
}'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=git-remote-branch
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/git-remote-branch/git-remote-branch.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch/git-remote-branch.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch/git-remote-branch.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/git-remote-branch/git-remote-branch.plugin.zsh:19> compdef _git_remote_branch grb
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git_remote_branch == *=* ]]
+compdef:79> func=_git_remote_branch 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ grb == -N ]]
+compdef:134> [[ grb == -p ]]
+compdef:136> [[ grb == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grb == *=* ]]
+compdef:159> cmd=grb 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git_remote_branch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=rbenv
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rbenv/rbenv.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:9> FOUND_RBENV=0 
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:10> rbenvdirs=( /Users/cooperm/.rbenv /usr/local/rbenv /opt/rbenv /usr/local/opt/rbenv ) 
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:11> _homebrew-installed
+_homebrew-installed:1> type brew
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:11> _rbenv-from-homebrew-installed
+_rbenv-from-homebrew-installed:1> brew --prefix rbenv
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:12> rbenvdirs=+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:12> brew --prefix rbenv
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:12> rbenvdirs=( /usr/local/Cellar/rbenv/0.4.0 /Users/cooperm/.rbenv /usr/local/rbenv /opt/rbenv /usr/local/opt/rbenv ) 
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:15> rbenvdir=/usr/local/Cellar/rbenv/0.4.0
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:16> [ -d /usr/local/Cellar/rbenv/0.4.0/bin -a 0 -eq 0 ']'
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:15> rbenvdir=/Users/cooperm/.rbenv
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:16> [ -d /Users/cooperm/.rbenv/bin -a 0 -eq 0 ']'
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:15> rbenvdir=/usr/local/rbenv
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:16> [ -d /usr/local/rbenv/bin -a 0 -eq 0 ']'
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:15> rbenvdir=/opt/rbenv
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:16> [ -d /opt/rbenv/bin -a 0 -eq 0 ']'
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:15> rbenvdir=/usr/local/opt/rbenv
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:16> [ -d /usr/local/opt/rbenv/bin -a 0 -eq 0 ']'
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:54> unset rbenvdir
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:56> [ 0 -eq 0 ']'
+/Users/cooperm/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh:57> alias 'rubies=ruby -v'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=rsync
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rsync/rsync.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh:1> alias 'rsync-copy=rsync -avz --progress -h'
+/Users/cooperm/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh:2> alias 'rsync-move=rsync -avz --progress -h --remove-source-files'
+/Users/cooperm/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh:3> alias 'rsync-update=rsync -avzu --progress -h'
+/Users/cooperm/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh:4> alias 'rsync-synchronize=rsync -avzu --delete --progress -h'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=rvm
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/rvm/rvm.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:1> fpath=( /Users/cooperm/.rvm/scripts/zsh/Completion /Users/cooperm/.oh-my-zsh/plugins/z /Users/cooperm/.oh-my-zsh/plugins/web-search /Users/cooperm/.oh-my-zsh/plugins/sudo /Users/cooperm/.oh-my-zsh/plugins/sublime /Users/cooperm/.oh-my-zsh/plugins/rvm /Users/cooperm/.oh-my-zsh/plugins/rsync /Users/cooperm/.oh-my-zsh/plugins/rbenv /Users/cooperm/.oh-my-zsh/plugins/git-remote-branch /Users/cooperm/.oh-my-zsh/plugins/github /Users/cooperm/.oh-my-zsh/plugins/heroku /Users/cooperm/.oh-my-zsh/plugins/meteor /Users/cooperm/.oh-my-zsh/plugins/osx /Users/cooperm/.oh-my-zsh/plugins/git-prompt /Users/cooperm/.oh-my-zsh/plugins/git-hubflow /Users/cooperm/.oh-my-zsh/plugins/git-flow /Users/cooperm/.oh-my-zsh/plugins/git-extras /Users/cooperm/.oh-my-zsh/plugins/gem /Users/cooperm/.oh-my-zsh/plugins/common-aliases /Users/cooperm/.oh-my-zsh/plugins/colored-man /Users/cooperm/.oh-my-zsh/plugins/coffee /Users/cooperm/.oh-my-zsh/plugins/cloudapp /Users/cooperm/.oh-my-zsh/plugins/git /Users/cooperm/.oh-my-zsh/functions /Users/cooperm/.oh-my-zsh/completions /usr/share/zsh/site-functions /usr/share/zsh/5.0.5/functions ) 
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:3> alias 'rubies=rvm list rubies'
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:4> alias 'gemsets=rvm gemset list'
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:6> local 'ruby18=ruby-1.8.7'
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:7> local 'ruby19=ruby-1.9.3'
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:8> local 'ruby20=ruby-2.0.0'
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:9> local 'ruby21=ruby-2.1.2'
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:20> compdef _rb18 rb18
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rb18 == *=* ]]
+compdef:79> func=_rb18 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rb18 == -N ]]
+compdef:134> [[ rb18 == -p ]]
+compdef:136> [[ rb18 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rb18 == *=* ]]
+compdef:159> cmd=rb18 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_rb18 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:31> compdef _rb19 rb19
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rb19 == *=* ]]
+compdef:79> func=_rb19 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rb19 == -N ]]
+compdef:134> [[ rb19 == -p ]]
+compdef:136> [[ rb19 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rb19 == *=* ]]
+compdef:159> cmd=rb19 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_rb19 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:42> compdef _rb20 rb20
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rb20 == *=* ]]
+compdef:79> func=_rb20 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rb20 == -N ]]
+compdef:134> [[ rb20 == -p ]]
+compdef:136> [[ rb20 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rb20 == *=* ]]
+compdef:159> cmd=rb20 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_rb20 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:53> compdef _rb21 rb21
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rb21 == *=* ]]
+compdef:79> func=_rb21 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rb21 == -N ]]
+compdef:134> [[ rb21 == -p ]]
+compdef:136> [[ rb21 == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rb21 == *=* ]]
+compdef:159> cmd=rb21 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_rb21 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh:74> compdef _rvm_completion rvm
+compdef:1> local opt autol type func delete eval new i 'ret=0' cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rvm_completion == *=* ]]
+compdef:79> func=_rvm_completion 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rvm == -N ]]
+compdef:134> [[ rvm == -p ]]
+compdef:136> [[ rvm == -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rvm == *=* ]]
+compdef:159> cmd=rvm 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_rvm_completion 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=sublime
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/sublime/sublime.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:3> [[+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:3> uname
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:3> [[ Darwin == Linux ]]
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:22> [[ darwin14.0 == darwin* ]]
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:23> local _sublime_darwin_paths
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:24> _sublime_darwin_paths=( /usr/local/bin/subl '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl' '/Applications/Sublime Text 3.app/Contents/SharedSupport/bin/subl' '/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl' '/Users/cooperm/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl' '/Users/cooperm/Applications/Sublime Text 3.app/Contents/SharedSupport/bin/subl' '/Users/cooperm/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl' ) 
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:34> _sublime_path=/usr/local/bin/subl
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:35> [[ -a /usr/local/bin/subl ]]
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:36> alias 'subl='\''/usr/local/bin/subl'\'
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:37> alias 'st=subl'
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:38> break
+/Users/cooperm/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:43> alias 'stt=st .'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=sudo
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/sudo/sudo.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/sudo/sudo.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/sudo/sudo.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/sudo/sudo.plugin.zsh:19> zle -N sudo-command-line
+/Users/cooperm/.oh-my-zsh/plugins/sudo/sudo.plugin.zsh:21> bindkey '\e\e' sudo-command-line
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=theme
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/theme/theme.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/theme/theme.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=web-search
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/web-search/web-search.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:47> alias 'bing=web_search bing'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:48> alias 'google=web_search google'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:49> alias 'yahoo=web_search yahoo'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:50> alias 'ddg=web_search duckduckgo'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:51> alias 'yandex=web_search yandex'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:54> alias 'wiki=web_search duckduckgo \!w'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:55> alias 'news=web_search duckduckgo \!n'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:56> alias 'youtube=web_search duckduckgo \!yt'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:57> alias 'map=web_search duckduckgo \!m'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:58> alias 'image=web_search duckduckgo \!i'
+/Users/cooperm/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh:59> alias 'ducky=web_search duckduckgo \!'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:67> plugin=z
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:68> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/z/z.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:70> [ -f /Users/cooperm/.oh-my-zsh/plugins/z/z.plugin.zsh ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:71> source /Users/cooperm/.oh-my-zsh/plugins/z/z.plugin.zsh
+/Users/cooperm/.oh-my-zsh/plugins/z/z.plugin.zsh:5> [[ -f /Users/cooperm/.dotfiles/conf/zsh/custom/plugins/z/z.plugin.zsh ]]
+/Users/cooperm/.oh-my-zsh/plugins/z/z.plugin.zsh:6> [[ -f /Users/cooperm/.oh-my-zsh/plugins/z/z.plugin.zsh ]]
+/Users/cooperm/.oh-my-zsh/plugins/z/z.plugin.zsh:6> _load_z /Users/cooperm/.oh-my-zsh/plugins/z
+_load_z:1> source /Users/cooperm/.oh-my-zsh/plugins/z/z.sh
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:25> case 569JNORTXZghimx (*i*)
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:30> [ -d /Users/cooperm/.z ']'
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:194> alias 'z=_z 2>&1'
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:196> [ '' ']'
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:196> _Z_RESOLVE_SYMLINKS=-P 
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:198> compctl
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:199> [ '' ']'
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:201> [ '' ']'
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:210> precmd_functions+=( _z_precmd ) 
+/Users/cooperm/.oh-my-zsh/plugins/z/z.sh:218> compctl -U -K _z_zsh_tab_completion _z
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:76> config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/aliases.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:77> source /Users/cooperm/.dotfiles/conf/zsh/custom/aliases.zsh
+/Users/cooperm/.dotfiles/conf/zsh/custom/aliases.zsh:1> alias 'toggleFn=osascript ~/Dropbox/Cooper/toggle-f-keys.scpt'
+/Users/cooperm/.dotfiles/conf/zsh/custom/aliases.zsh:5> alias 'ccc=cd ~/sites/cfy'
+/Users/cooperm/.dotfiles/conf/zsh/custom/aliases.zsh:8> alias 'sites=cd ~/sites'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:76> config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/coffeescript.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:77> source /Users/cooperm/.dotfiles/conf/zsh/custom/coffeescript.zsh
+/Users/cooperm/.dotfiles/conf/zsh/custom/coffeescript.zsh:10> alias 'cm=coffeeMe'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:76> config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/example.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:77> source /Users/cooperm/.dotfiles/conf/zsh/custom/example.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:76> config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/exports.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:77> source /Users/cooperm/.dotfiles/conf/zsh/custom/exports.zsh
+/Users/cooperm/.dotfiles/conf/zsh/custom/exports.zsh:3> export 'rvmsudo_secure_path=1'
+/Users/cooperm/.dotfiles/conf/zsh/custom/exports.zsh:6> alias 'dbx=~/Dropbox'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:76> config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/meteor.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:77> source /Users/cooperm/.dotfiles/conf/zsh/custom/meteor.zsh
+/Users/cooperm/.dotfiles/conf/zsh/custom/meteor.zsh:1> alias 'm=meteor'
+/Users/cooperm/.dotfiles/conf/zsh/custom/meteor.zsh:2> export 'PACKAGE_DIRS=/Users/cooperm/sites/packages/'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:76> config_file=/Users/cooperm/.dotfiles/conf/zsh/custom/toggle-invisibles.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:77> source /Users/cooperm/.dotfiles/conf/zsh/custom/toggle-invisibles.zsh
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:79> unset config_file
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:82> [ agnoster '=' random ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:90> [ ! agnoster '=' '' ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:91> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/agnoster.zsh-theme ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:93> [ -f /Users/cooperm/.dotfiles/conf/zsh/custom/themes/agnoster.zsh-theme ']'
+/Users/cooperm/.oh-my-zsh/oh-my-zsh.sh:96> source /Users/cooperm/.oh-my-zsh/themes/agnoster.zsh-theme
+/Users/cooperm/.oh-my-zsh/themes/agnoster.zsh-theme:28> CURRENT_BG=NONE 
+/Users/cooperm/.oh-my-zsh/themes/agnoster.zsh-theme:29> SEGMENT_SEPARATOR= 
+/Users/cooperm/.oh-my-zsh/themes/agnoster.zsh-theme:179> PROMPT='%{%f%b%k%}$(build_prompt) ' 
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:70> [[ -n '' ]]
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:73> export 'EDITOR=subl'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:88> alias 'zshconfig=vim ~/.zshrc'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:89> alias 'ohmyzsh=vim ~/.dotfiles/source/60_oh-my-zsh.sh'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:92> path_remove /usr/local/heroku/bin
+path_remove:2> WORK=:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin: 
+path_remove:4> REMOVE='$1' 
+path_remove:5> WORK=:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin: 
+path_remove:7> WORK=:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin 
+path_remove:8> WORK=/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin 
+path_remove:9> path=/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin 
+path_remove:10> echo /usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:92> export 'PATH=/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:98> path_remove /Users/cooperm/.rvm/bin
+path_remove:2> WORK=:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin: 
+path_remove:4> REMOVE='$1' 
+path_remove:5> WORK=:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin: 
+path_remove:7> WORK=:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin 
+path_remove:8> WORK=/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin 
+path_remove:9> path=/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin 
+path_remove:10> echo /usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:98> export 'PATH=/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin:/Users/cooperm/.rvm/bin'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:101> which pyenv
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:101> pyenv init -
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:101> eval 'export PATH="/Users/cooperm/.pyenv/shims:${PATH}"
export PYENV_SHELL=zsh
source '\''/usr/local/Cellar/pyenv/20150326/libexec/../completions/pyenv.zsh'\''
pyenv rehash 2>/dev/null
pyenv() {
  local command
  command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  rehash|shell)
    eval "`pyenv "sh-$command" "$@"`";;
  *)
    command pyenv "$command" "$@";;
  esac
}'
+(eval):1> export 'PATH=/Users/cooperm/.pyenv/shims:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin:/Users/cooperm/.rvm/bin'
+(eval):2> export 'PYENV_SHELL=zsh'
+(eval):3> source /usr/local/Cellar/pyenv/20150326/libexec/../completions/pyenv.zsh
+/usr/local/Cellar/pyenv/20150326/libexec/../completions/pyenv.zsh:1> [[ ! -o interactive ]]
+/usr/local/Cellar/pyenv/20150326/libexec/../completions/pyenv.zsh:5> compctl -K _pyenv pyenv
+(eval):4> pyenv rehash
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:105> export 'NVM_DIR=/Users/cooperm/.nvm'
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:106> brew --prefix nvm
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:106> source /usr/local/opt/nvm/nvm.sh
+/usr/local/opt/nvm/nvm.sh:9> NVM_SCRIPT_SOURCE=/usr/local/opt/nvm/nvm.sh 
+/usr/local/opt/nvm/nvm.sh:63> nvm_has unsetopt
+nvm_has:1> type unsetopt
+/usr/local/opt/nvm/nvm.sh:64> unsetopt nomatch
+/usr/local/opt/nvm/nvm.sh:65> NVM_CD_FLAGS=-q 
+/usr/local/opt/nvm/nvm.sh:69> [ -z /Users/cooperm/.nvm ']'
+/usr/local/opt/nvm/nvm.sh:75> unset NVM_SCRIPT_SOURCE
+/usr/local/opt/nvm/nvm.sh:79> [ -z https://nodejs.org/dist ']'
+/usr/local/opt/nvm/nvm.sh:83> [ -z https://iojs.org/dist ']'
+/usr/local/opt/nvm/nvm.sh:86> [ -z https://iojs.org/dist/index.tab ']'
+/usr/local/opt/nvm/nvm.sh:1730> VERSION=+/usr/local/opt/nvm/nvm.sh:1730> nvm_alias default
+/usr/local/opt/nvm/nvm.sh:1730> VERSION='' 
+/usr/local/opt/nvm/nvm.sh:1731> nvm_supports_source_options
+nvm_supports_source_options:1> echo 'echo $1'
+nvm_supports_source_options:1> . /dev/stdin yes
+/dev/stdin:1> echo yes
+nvm_supports_source_options:1> [ _yes '=' _yes ']'
+/usr/local/opt/nvm/nvm.sh:1731> [ _ '=' _--install ']'
+/usr/local/opt/nvm/nvm.sh:1737> [ -n '' ']'
+/usr/local/opt/nvm/nvm.sh:1739> nvm_rc_version
+/Users/cooperm/.dotfiles/source/60_oh-my-zsh.sh:117> export 'NODE_PATH=/usr/local/lib/node_modules'
+src:4> source /Users/cooperm/.dotfiles/source/99_direnv.sh
+/Users/cooperm/.dotfiles/source/99_direnv.sh:2> direnv hook zsh
+/Users/cooperm/.dotfiles/source/99_direnv.sh:2> eval '
_direnv_hook() {
  eval "$(direnv export zsh)";
}
typeset -ag precmd_functions
if [[ -z $precmd_functions[(r)_direnv_hook] ]]; then
  precmd_functions+=_direnv_hook;
fi'
+(eval):5> typeset -ag precmd_functions
+(eval):6> [[ -z '' ]]
+(eval):7> precmd_functions+=_direnv_hook 
+/Users/cooperm/.zshrc:45> export 'PATH=/Users/cooperm/.pyenv/shims:/usr/local/bin:/Users/cooperm/bin:/usr/bin:/usr/sbin:/sbin:/bin:/Applications/Atom.app/Contents/Resources/app/apm/bin:/usr/local/heroku/bin:/Users/cooperm/.rvm/bin:/Users/cooperm/.rvm/bin'
+omz_termsupport_precmd:1> [[ '' == true ]]
+omz_termsupport_precmd:5> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> [[ '' == *term* ]]
+title:5> : '%n@%m: %~'
+title:7> [[ xterm-256color == screen* ]]
+title:9> [[ xterm-256color == xterm* ]]
+title:10> print -Pn '\e]2;%n@%m:\ %~\a'
+title:11> print -Pn '\e]1;%15\<..\<%~%\<\<\a'
+omz_termsupport_cwd:3> [[ iTerm.app == Apple_Terminal ]]
+precmd_update_git_vars:1> [ -n '' ']'
+_z_precmd:1> _z --add /Users/cooperm/.atom/packages
+_z:2> local 'datafile=/Users/cooperm/.z'
+_z:5> [ -f /Users/cooperm/.z -a '!' -O /Users/cooperm/.z ']'
+_z:8> [ --add '=' --add ']'
+_z:9> shift
+_z:12> [ /Users/cooperm/.atom/packages '=' /Users/cooperm ']'
+_z:15> local exclude
+_z:16> exclude=
+_z:17> [ /Users/cooperm/.atom/packages '=' '' ']'
+_z:21> local tempfile
+_z:22> tempfile=+_z:22> mktemp /Users/cooperm/.z.XXXXXX
+_z:22> tempfile=/Users/cooperm/.z.fKbMwW 
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh/custom/themes ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh/custom/themes|30.9204|1430646511'
+_z:23> read line
+_z:24> [ -d /Library ']'
+_z:24> echo '/Library|17.2907|1429412357'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sublime/User/Custom-Themes' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sublime/User/Custom-Themes|16.3301|1429690669'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages ']'
+_z:24> echo '/Users/cooperm/.atom/packages|107.902|1430692451'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app.asar.unpacked ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app.asar.unpacked|1.92119|1430462059'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox ']'
+_z:24> echo '/Users/cooperm/sites/sandbox|42.2663|1430631149'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/thethingsandstuff ']'
+_z:24> echo '/Users/cooperm/sites/thethingsandstuff|35.5421|1430639722'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.oh-my-zsh ']'
+_z:24> echo '/Users/cooperm/.oh-my-zsh|2|1430646173'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh/custom ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh/custom|134.176|1430646300'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sublime/User' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sublime/User|11.5272|1429144903'
+_z:23> read line
+_z:24> [ -d /private/var/folders/zm/xsq3zpxd5xgb20prwwr0qgq40000gn/T/.com.google.Chrome.8lqZSa ']'
+_z:24> echo '/private/var/folders/zm/xsq3zpxd5xgb20prwwr0qgq40000gn/T/.com.google.Chrome.8lqZSa|3.84239|1430551876'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Temporary/AirServer Patch+Keymaker.app/Contents/MacOS' ']'
+_z:24> echo '/Users/cooperm/Temporary/AirServer Patch+Keymaker.app/Contents/MacOS|13.4484|1429361933'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/isotope-ui/resources/images ']'
+_z:24> echo '/Users/cooperm/.atom/packages/isotope-ui/resources/images|11.5272|1429130274'
+_z:23> read line
+_z:24> [ -d /usr/local/bin ']'
+_z:25> date +%s
+_z:24> echo '/usr/local/bin|7.68477|1430482069'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh/custom/oh-my-zsh-powerline-theme ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh/custom/oh-my-zsh-powerline-theme|179.632|1430644447'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/twilio ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/twilio|48.9903|1430615353'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/Continuity-Activation-Tool-master' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/Continuity-Activation-Tool-master|2.88179|1429498102'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom ']'
+_z:24> echo '/Users/cooperm/.atom|174.828|1430462298'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Temporary/man ']'
+_z:24> echo '/Users/cooperm/Temporary/man|8.64536|1430635306'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/nodebox ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/nodebox|3.84239|1429605883'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/.git/modules ']'
+_z:24> echo '/Users/cooperm/.dotfiles/.git/modules|2.88179|1429855712'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/fonts-master' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/fonts-master|1.92119|1429659424'
+_z:23> read line
+_z:24> [ -d /private/tmp ']'
+_z:24> echo '/private/tmp|7.68477|1430644149'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Library/Preferences ']'
+_z:24> echo '/Users/cooperm/Library/Preferences|5.76357|1430363833'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/sublime-to-atom-snippets-master' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/sublime-to-atom-snippets-master|11.5272|1429112814'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Library/Application Support/Google/Chrome' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support/Google/Chrome|7.68477|1430551852'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/source ']'
+_z:24> echo '/Users/cooperm/.dotfiles/source|25.9361|1429848663'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/TestApp ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/TestApp|187.317|1429127864'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/atom-beautify ']'
+_z:24> echo '/Users/cooperm/.atom/packages/atom-beautify|27.8573|1430461257'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/bin ']'
+_z:24> echo '/Users/cooperm/.dotfiles/bin|5.76357|1429854774'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/git-wip/sublime ']'
+_z:24> echo '/Users/cooperm/sites/git-wip/sublime|9.60596|1430486914'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/osx-twilio/meteor ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/osx-twilio/meteor|136.404|1430635156'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/datapilot ']'
+_z:24> echo '/Users/cooperm/sites/datapilot|17.2907|1430542584'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm/node_modules ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm/node_modules|7.68477|1430461707'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/osx-twilio ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/osx-twilio|21.1331|1430631156'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/cfy ']'
+_z:24> echo '/Users/cooperm/sites/cfy|781.239|1430683853'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync|15.3696|1429648944'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/git-ftp-develop/man' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/git-ftp-develop/man|23.0543|1429370491'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync/lib' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync/lib|2.88179|1428838045'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/cfy/.meteor/local ']'
+_z:24> echo '/Users/cooperm/sites/cfy/.meteor/local|7.68477|1430101841'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/apathy-theme ']'
+_z:24> echo '/Users/cooperm/.atom/packages/apathy-theme|306.731|1430692440'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/atom-git-wip ']'
+_z:24> echo '/Users/cooperm/sites/atom-git-wip|267.676|1430653334'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles ']'
+_z:24> echo '/Users/cooperm/.dotfiles|552.343|1429864782'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/cfy/config ']'
+_z:24> echo '/Users/cooperm/sites/cfy/config|1.92119|1429863062'
+_z:23> read line
+_z:24> [ -d /Extra ']'
+_z:24> echo '/Extra|15.3696|1429348575'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/seti-ui ']'
+_z:24> echo '/Users/cooperm/.atom/packages/seti-ui|3.84239|1429116479'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/styles ']'
+_z:24> echo '/Users/cooperm/.atom/styles|8.64536|1430460713'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/isitghosted ']'
+_z:24> echo '/Users/cooperm/sites/isitghosted|404.411|1430542558'
+_z:23> read line
+_z:25> awk -v 'path=/Users/cooperm/.atom/packages' -v 'now=1430692458' '-F|' '
   BEGIN {
    rank[path] = 1
    time[path] = now
   }
   $2 >= 1 {
    if( $1 == path ) {
     rank[$1] = $2 + 1
     time[$1] = now
    } else {
     rank[$1] = $2
     time[$1] = $3
    }
    count += $2
   }
   END {
    if( count > 6000 ) {
     for( i in rank ) print i "|" 0.99*rank[i] "|" time[i] # aging
    } else for( i in rank ) print i "|" rank[i] "|" time[i]
   }
  '
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh|7.68477|1430644106'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Library/Application Support' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support|9.60596|1429223514'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources|10.5666|1430462053'
+_z:23> read line
+_z:24> [ -d /usr/bin ']'
+_z:24> echo '/usr/bin|26.8967|1429360663'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app|14.409|1430462050'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Temporary ']'
+_z:24> echo '/Users/cooperm/Temporary|60.5175|1430642864'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm|16.3301|1430461756'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/.node-gyp ']'
+_z:24> echo '/Users/cooperm/.atom/.node-gyp|2.88179|1430462085'
+_z:23> read line
+_z:24> [ -d /Volumes ']'
+_z:24> echo '/Volumes|1.92119|1428978528'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites ']'
+_z:24> echo '/Users/cooperm/sites|272.206|1430647694'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/git-ftp-develop' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/git-ftp-develop|9.60596|1429370241'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/.git ']'
+_z:24> echo '/Users/cooperm/.dotfiles/.git|2.88179|1429855713'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/secureview ']'
+_z:24> echo '/Users/cooperm/sites/secureview|714.683|1430481692'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/vendor/nave ']'
+_z:24> echo '/Users/cooperm/.dotfiles/vendor/nave|1.92119|1429848434'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/git-wip ']'
+_z:24> echo '/Users/cooperm/sites/git-wip|74.9265|1430617980'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh/.oh-my-zsh' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh/.oh-my-zsh|8.64536|1429523199'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app.asar.unpacked/node_modules ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app.asar.unpacked/node_modules|1.92119|1430462062'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh|50.9115|1429575434'
+_z:23> read line
+_z:24> [ -d /usr/local/share/man/dash/manuals ']'
+_z:24> echo '/usr/local/share/man/dash/manuals|11.5272|1430642890'
+_z:23> read line
+_z:24> [ -d /usr/local/share/man/dash ']'
+_z:24> echo '/usr/local/share/man/dash|7.68477|1430642868'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/link ']'
+_z:24> echo '/Users/cooperm/.dotfiles/link|15.3696|1429856304'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/meteor-tester ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/meteor-tester|17.2907|1429511598'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm/lib ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm/lib|1.92119|1430097300'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/secureview/bower_components/uikit/less/gradient ']'
+_z:24> echo '/Users/cooperm/sites/secureview/bower_components/uikit/less/gradient|206.528|1429239352'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads|16.3301|1429583479'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm/bin ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm/bin|4.80298|1429690868'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/linter/lib ']'
+_z:24> echo '/Users/cooperm/.atom/packages/linter/lib|3.84239|1429619982'
+_z:23> read line
+_z:24> [ -d / ']'
+_z:24> echo '/|38.4239|1430644160'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/config ']'
+_z:24> echo '/Users/cooperm/sites/config|1.92119|1428872193'
+_z:23> read line
+_z:24> [ -d /Library/Caches/com.apple.iconservices.store ']'
+_z:24> echo '/Library/Caches/com.apple.iconservices.store|15.3696|1428877293'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Library/Application Support/Sublime Text 3/Packages' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support/Sublime Text 3/Packages|89.3354|1429137219'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Library/Application Support/Sublime Text 3' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support/Sublime Text 3|1.92119|1429137167'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.cloudconfig ']'
+_z:24> echo '/Users/cooperm/.cloudconfig|5.76357|1428845992'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/remote ']'
+_z:24> echo '/Users/cooperm/sites/remote|3.84239|1428877284'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Library/Google ']'
+_z:24> echo '/Users/cooperm/Library/Google|3.84239|1429159850'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/vendor ']'
+_z:24> echo '/Users/cooperm/.dotfiles/vendor|5.76357|1429848740'
+_z:23> read line
+_z:46> [ 0 -ne 0 -a -f /Users/cooperm/.z ']'
+_z:49> env mv -f /Users/cooperm/.z.fKbMwW /Users/cooperm/.z
+_direnv_hook:1> direnv export zsh
+_direnv_hook:1> eval ''
+zsh:1> build_prompt
+build_prompt:1> RETVAL=0 
+build_prompt:2> prompt_status
+prompt_status:1> local symbols
+prompt_status:2> symbols=( ) 
+prompt_status:3> [[ 0 -ne 0 ]]
+prompt_status:4> [[ 501 -eq 0 ]]
+prompt_status:5> [[+prompt_status:5> jobs -l
+prompt_status:5> [[+prompt_status:5> wc -l
+prompt_status:5> [[ '       0' -gt 0 ]]
+prompt_status:7> [[ -n '' ]]
+build_prompt:3> prompt_virtualenv
+prompt_virtualenv:1> local 'virtualenv_path='
+prompt_virtualenv:2> [[ -n '' ]]
+build_prompt:4> prompt_context
+prompt_context:1> [[ cooperm != cooperm || -n '' ]]
+build_prompt:5> prompt_dir
+prompt_dir:1> prompt_segment blue black '%~'
+prompt_segment:1> local bg fg
+prompt_segment:2> [[ -n blue ]]
+prompt_segment:2> bg='%K{blue}' 
+prompt_segment:3> [[ -n black ]]
+prompt_segment:3> fg='%F{black}' 
+prompt_segment:4> [[ NONE != NONE ]]
+prompt_segment:7> echo -n '%{%K{blue}%}%{%F{black}%} '
+prompt_segment:9> CURRENT_BG=blue 
+prompt_segment:10> [[ -n '%~' ]]
+prompt_segment:10> echo -n '%~'
+build_prompt:6> prompt_git
+prompt_git:1> local ref dirty mode repo_path
+prompt_git:2> repo_path=+prompt_git:2> git rev-parse --git-dir
+prompt_git:2> repo_path='' 
+prompt_git:4> git rev-parse --is-inside-work-tree

+build_prompt:7> prompt_hg
+prompt_hg:1> local rev status
+prompt_hg:2> hg id

+build_prompt:8> prompt_end
+prompt_end:1> [[ -n blue ]]
+prompt_end:2> echo -n ' %{%k%F{blue}%}'
+prompt_end:6> echo -n '%{%f%}'
+prompt_end:7> CURRENT_BG='' 
+zsh:1> prompt_git_info
+prompt_git_info:1> [ -n '' ']'
+omz_termsupport_preexec:1> [[ '' == true ]]
+omz_termsupport_preexec:5> emulate -L zsh
+omz_termsupport_preexec:6> setopt extended_glob
+omz_termsupport_preexec:9> local 'CMD=ls'
+omz_termsupport_preexec:10> local 'LINE=ls -G'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> [[ '' == *term* ]]
+title:5> : '%100>...>$LINE%<<'
+title:7> [[ xterm-256color == screen* ]]
+title:9> [[ xterm-256color == xterm* ]]
+title:10> print -Pn '\e]2;%100\>...\>\$LINE%\<\<\a'
+title:11> print -Pn '\e]1;\$CMD\a'
+preexec_update_git_vars:1> case ls -G (git*)
+zsh:1> ls -G
+omz_termsupport_precmd:1> [[ '' == true ]]
+omz_termsupport_precmd:5> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> [[ '' == *term* ]]
+title:5> : '%n@%m: %~'
+title:7> [[ xterm-256color == screen* ]]
+title:9> [[ xterm-256color == xterm* ]]
+title:10> print -Pn '\e]2;%n@%m:\ %~\a'
+title:11> print -Pn '\e]1;%15\<..\<%~%\<\<\a'
+omz_termsupport_cwd:3> [[ iTerm.app == Apple_Terminal ]]
+precmd_update_git_vars:1> [ -n '' ']'
+_z_precmd:1> _z --add /Users/cooperm/.atom/packages
+_z:2> local 'datafile=/Users/cooperm/.z'
+_z:5> [ -f /Users/cooperm/.z -a '!' -O /Users/cooperm/.z ']'
+_z:8> [ --add '=' --add ']'
+_z:9> shift
+_z:12> [ /Users/cooperm/.atom/packages '=' /Users/cooperm ']'
+_z:15> local exclude
+_z:16> exclude=
+_z:17> [ /Users/cooperm/.atom/packages '=' '' ']'
+_z:21> local tempfile
+_z:22> tempfile=+_z:22> mktemp /Users/cooperm/.z.XXXXXX
+_z:22> tempfile=/Users/cooperm/.z.evnya7 
+_z:23> read line
+_z:24> [ -d /Library ']'
+_z:24> echo '/Library|17.2907|1429412357'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh/custom/themes ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh/custom/themes|30.9204|1430646511'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sublime/User/Custom-Themes' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sublime/User/Custom-Themes|16.3301|1429690669'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages ']'
+_z:24> echo '/Users/cooperm/.atom/packages|108.902|1430692458'
+_z:25> date +%s
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.oh-my-zsh ']'
+_z:24> echo '/Users/cooperm/.oh-my-zsh|2|1430646173'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/thethingsandstuff ']'
+_z:24> echo '/Users/cooperm/sites/thethingsandstuff|35.5421|1430639722'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox ']'
+_z:24> echo '/Users/cooperm/sites/sandbox|42.2663|1430631149'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app.asar.unpacked ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app.asar.unpacked|1.92119|1430462059'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh/custom ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh/custom|134.176|1430646300'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sublime/User' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sublime/User|11.5272|1429144903'
+_z:23> read line
+_z:24> [ -d /usr/local/bin ']'
+_z:24> echo '/usr/local/bin|7.68477|1430482069'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/isotope-ui/resources/images ']'
+_z:24> echo '/Users/cooperm/.atom/packages/isotope-ui/resources/images|11.5272|1429130274'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Temporary/AirServer Patch+Keymaker.app/Contents/MacOS' ']'
+_z:24> echo '/Users/cooperm/Temporary/AirServer Patch+Keymaker.app/Contents/MacOS|13.4484|1429361933'
+_z:23> read line
+_z:24> [ -d /private/var/folders/zm/xsq3zpxd5xgb20prwwr0qgq40000gn/T/.com.google.Chrome.8lqZSa ']'
+_z:24> echo '/private/var/folders/zm/xsq3zpxd5xgb20prwwr0qgq40000gn/T/.com.google.Chrome.8lqZSa|3.84239|1430551876'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh/custom/oh-my-zsh-powerline-theme ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh/custom/oh-my-zsh-powerline-theme|179.632|1430644447'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom ']'
+_z:24> echo '/Users/cooperm/.atom|174.828|1430462298'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/Continuity-Activation-Tool-master' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/Continuity-Activation-Tool-master|2.88179|1429498102'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/twilio ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/twilio|48.9903|1430615353'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/nodebox ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/nodebox|3.84239|1429605883'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Temporary/man ']'
+_z:24> echo '/Users/cooperm/Temporary/man|8.64536|1430635306'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/fonts-master' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/fonts-master|1.92119|1429659424'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/.git/modules ']'
+_z:24> echo '/Users/cooperm/.dotfiles/.git/modules|2.88179|1429855712'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Library/Preferences ']'
+_z:24> echo '/Users/cooperm/Library/Preferences|5.76357|1430363833'
+_z:23> read line
+_z:24> [ -d /private/tmp ']'
+_z:24> echo '/private/tmp|7.68477|1430644149'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/sublime-to-atom-snippets-master' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/sublime-to-atom-snippets-master|11.5272|1429112814'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/TestApp ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/TestApp|187.317|1429127864'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/source ']'
+_z:24> echo '/Users/cooperm/.dotfiles/source|25.9361|1429848663'
+_z:23> read line
+_z:25> awk -v 'path=/Users/cooperm/.atom/packages' -v 'now=1430692463' '-F|' '
   BEGIN {
    rank[path] = 1
    time[path] = now
   }
   $2 >= 1 {
    if( $1 == path ) {
     rank[$1] = $2 + 1
     time[$1] = now
    } else {
     rank[$1] = $2
     time[$1] = $3
    }
    count += $2
   }
   END {
    if( count > 6000 ) {
     for( i in rank ) print i "|" 0.99*rank[i] "|" time[i] # aging
    } else for( i in rank ) print i "|" rank[i] "|" time[i]
   }
  '
+_z:24> [ -d '/Users/cooperm/Library/Application Support/Google/Chrome' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support/Google/Chrome|7.68477|1430551852'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/atom-beautify ']'
+_z:24> echo '/Users/cooperm/.atom/packages/atom-beautify|27.8573|1430461257'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/bin ']'
+_z:24> echo '/Users/cooperm/.dotfiles/bin|5.76357|1429854774'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/git-wip/sublime ']'
+_z:24> echo '/Users/cooperm/sites/git-wip/sublime|9.60596|1430486914'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/datapilot ']'
+_z:24> echo '/Users/cooperm/sites/datapilot|17.2907|1430542584'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/osx-twilio/meteor ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/osx-twilio/meteor|136.404|1430635156'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/osx-twilio ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/osx-twilio|21.1331|1430631156'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm/node_modules ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm/node_modules|7.68477|1430461707'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/cfy ']'
+_z:24> echo '/Users/cooperm/sites/cfy|781.239|1430683853'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/cfy/.meteor/local ']'
+_z:24> echo '/Users/cooperm/sites/cfy/.meteor/local|7.68477|1430101841'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync/lib' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync/lib|2.88179|1428838045'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/git-ftp-develop/man' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/git-ftp-develop/man|23.0543|1429370491'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync|15.3696|1429648944'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/apathy-theme ']'
+_z:24> echo '/Users/cooperm/.atom/packages/apathy-theme|306.731|1430692440'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/cfy/config ']'
+_z:24> echo '/Users/cooperm/sites/cfy/config|1.92119|1429863062'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles ']'
+_z:24> echo '/Users/cooperm/.dotfiles|552.343|1429864782'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/atom-git-wip ']'
+_z:24> echo '/Users/cooperm/sites/atom-git-wip|267.676|1430653334'
+_z:23> read line
+_z:24> [ -d /Extra ']'
+_z:24> echo '/Extra|15.3696|1429348575'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/isitghosted ']'
+_z:24> echo '/Users/cooperm/sites/isitghosted|404.411|1430542558'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/styles ']'
+_z:24> echo '/Users/cooperm/.atom/styles|8.64536|1430460713'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/seti-ui ']'
+_z:24> echo '/Users/cooperm/.atom/packages/seti-ui|3.84239|1429116479'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Library/Application Support' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support|9.60596|1429223514'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/conf/zsh ']'
+_z:24> echo '/Users/cooperm/.dotfiles/conf/zsh|7.68477|1430644106'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources|10.5666|1430462053'
+_z:23> read line
+_z:24> [ -d /usr/bin ']'
+_z:24> echo '/usr/bin|26.8967|1429360663'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app|14.409|1430462050'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/.node-gyp ']'
+_z:24> echo '/Users/cooperm/.atom/.node-gyp|2.88179|1430462085'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm|16.3301|1430461756'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Temporary ']'
+_z:24> echo '/Users/cooperm/Temporary|60.5175|1430642864'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites ']'
+_z:24> echo '/Users/cooperm/sites|272.206|1430647694'
+_z:23> read line
+_z:24> [ -d /Volumes ']'
+_z:24> echo '/Volumes|1.92119|1428978528'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/secureview ']'
+_z:24> echo '/Users/cooperm/sites/secureview|714.683|1430481692'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/.git ']'
+_z:24> echo '/Users/cooperm/.dotfiles/.git|2.88179|1429855713'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads/git-ftp-develop' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads/git-ftp-develop|9.60596|1429370241'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/git-wip ']'
+_z:24> echo '/Users/cooperm/sites/git-wip|74.9265|1430617980'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/vendor/nave ']'
+_z:24> echo '/Users/cooperm/.dotfiles/vendor/nave|1.92119|1429848434'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh/.oh-my-zsh' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh/.oh-my-zsh|8.64536|1429523199'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app.asar.unpacked/node_modules ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app.asar.unpacked/node_modules|1.92119|1430462062'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh' ']'
+_z:24> echo '/Volumes/Macintosh HD/Dropbox/Sync/.oh-my-zsh|50.9115|1429575434'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm/lib ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm/lib|1.92119|1430097300'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/sandbox/meteor-tester ']'
+_z:24> echo '/Users/cooperm/sites/sandbox/meteor-tester|17.2907|1429511598'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/link ']'
+_z:24> echo '/Users/cooperm/.dotfiles/link|15.3696|1429856304'
+_z:23> read line
+_z:24> [ -d /usr/local/share/man/dash ']'
+_z:24> echo '/usr/local/share/man/dash|7.68477|1430642868'
+_z:23> read line
+_z:24> [ -d /usr/local/share/man/dash/manuals ']'
+_z:24> echo '/usr/local/share/man/dash/manuals|11.5272|1430642890'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/secureview/bower_components/uikit/less/gradient ']'
+_z:24> echo '/Users/cooperm/sites/secureview/bower_components/uikit/less/gradient|206.528|1429239352'
+_z:23> read line
+_z:24> [ -d /Applications/Atom.app/Contents/Resources/app/apm/bin ']'
+_z:24> echo '/Applications/Atom.app/Contents/Resources/app/apm/bin|4.80298|1429690868'
+_z:23> read line
+_z:24> [ -d '/Volumes/Macintosh HD/Downloads' ']'
+_z:24> echo '/Volumes/Macintosh HD/Downloads|16.3301|1429583479'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.atom/packages/linter/lib ']'
+_z:24> echo '/Users/cooperm/.atom/packages/linter/lib|3.84239|1429619982'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/config ']'
+_z:24> echo '/Users/cooperm/sites/config|1.92119|1428872193'
+_z:23> read line
+_z:24> [ -d / ']'
+_z:24> echo '/|38.4239|1430644160'
+_z:23> read line
+_z:24> [ -d /Library/Caches/com.apple.iconservices.store ']'
+_z:24> echo '/Library/Caches/com.apple.iconservices.store|15.3696|1428877293'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.dotfiles/vendor ']'
+_z:24> echo '/Users/cooperm/.dotfiles/vendor|5.76357|1429848740'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/Library/Google ']'
+_z:24> echo '/Users/cooperm/Library/Google|3.84239|1429159850'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/sites/remote ']'
+_z:24> echo '/Users/cooperm/sites/remote|3.84239|1428877284'
+_z:23> read line
+_z:24> [ -d /Users/cooperm/.cloudconfig ']'
+_z:24> echo '/Users/cooperm/.cloudconfig|5.76357|1428845992'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Library/Application Support/Sublime Text 3' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support/Sublime Text 3|1.92119|1429137167'
+_z:23> read line
+_z:24> [ -d '/Users/cooperm/Library/Application Support/Sublime Text 3/Packages' ']'
+_z:24> echo '/Users/cooperm/Library/Application Support/Sublime Text 3/Packages|89.3354|1429137219'
+_z:23> read line
+_z:46> [ 0 -ne 0 -a -f /Users/cooperm/.z ']'
+_z:49> env mv -f /Users/cooperm/.z.evnya7 /Users/cooperm/.z
+_direnv_hook:1> direnv export zsh
+_direnv_hook:1> eval ''
+zsh:2> build_prompt
+build_prompt:1> RETVAL=0 
+build_prompt:2> prompt_status
+prompt_status:1> local symbols
+prompt_status:2> symbols=( ) 
+prompt_status:3> [[ 0 -ne 0 ]]
+prompt_status:4> [[ 501 -eq 0 ]]
+prompt_status:5> [[+prompt_status:5> jobs -l
+prompt_status:5> [[+prompt_status:5> wc -l
+prompt_status:5> [[ '       0' -gt 0 ]]
+prompt_status:7> [[ -n '' ]]
+build_prompt:3> prompt_virtualenv
+prompt_virtualenv:1> local 'virtualenv_path='
+prompt_virtualenv:2> [[ -n '' ]]
+build_prompt:4> prompt_context
+prompt_context:1> [[ cooperm != cooperm || -n '' ]]
+build_prompt:5> prompt_dir
+prompt_dir:1> prompt_segment blue black '%~'
+prompt_segment:1> local bg fg
+prompt_segment:2> [[ -n blue ]]
+prompt_segment:2> bg='%K{blue}' 
+prompt_segment:3> [[ -n black ]]
+prompt_segment:3> fg='%F{black}' 
+prompt_segment:4> [[ NONE != NONE ]]
+prompt_segment:7> echo -n '%{%K{blue}%}%{%F{black}%} '
+prompt_segment:9> CURRENT_BG=blue 
+prompt_segment:10> [[ -n '%~' ]]
+prompt_segment:10> echo -n '%~'
+build_prompt:6> prompt_git
+prompt_git:1> local ref dirty mode repo_path
+prompt_git:2> repo_path=+prompt_git:2> git rev-parse --git-dir
+prompt_git:2> repo_path='' 
+prompt_git:4> git rev-parse --is-inside-work-tree

+build_prompt:7> prompt_hg
+prompt_hg:1> local rev status
+prompt_hg:2> hg id

+build_prompt:8> prompt_end
+prompt_end:1> [[ -n blue ]]
+prompt_end:2> echo -n ' %{%k%F{blue}%}'
+prompt_end:6> echo -n '%{%f%}'
+prompt_end:7> CURRENT_BG='' 
+zsh:2> prompt_git_info
+prompt_git_info:1> [ -n '' ']'
+omz_termsupport_preexec:1> [[ '' == true ]]
+omz_termsupport_preexec:5> emulate -L zsh
+omz_termsupport_preexec:6> setopt extended_glob
+omz_termsupport_preexec:9> local 'CMD=exit'
+omz_termsupport_preexec:10> local 'LINE=exit'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> [[ '' == *term* ]]
+title:5> : '%100>...>$LINE%<<'
+title:7> [[ xterm-256color == screen* ]]
+title:9> [[ xterm-256color == xterm* ]]
+title:10> print -Pn '\e]2;%100\>...\>\$LINE%\<\<\a'
+title:11> print -Pn '\e]1;\$CMD\a'
+preexec_update_git_vars:1> case exit (git*)
+zsh:2> exit
